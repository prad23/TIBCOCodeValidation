<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx2="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://ecommerce.wsgc.com/2013/Common" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="www.tibco.com/plugin/java/JavaMethodActivityOutput" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="www.tibco.com/plugin/java/JavaMethodActivityInput" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://schemas.tibco.com/bw/plugins/java/5.0/javaExceptions">
    <xsd:import namespace="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" schemaLocation="/SharedResources/XMLSchemas/CLE/GlobalErrorObject.xsd"/>
    <pd:name>CommonProcesses/CryptoProcesses/GetLocalToken.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="PAN" type="xsd:string"/>
                    <xsd:element name="ExpiryMonth" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="ExpiryYear" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>44</pd:startX>
    <pd:startY>70</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:if test="string-length($Error/root/ErrorMessage)=0">
                <TokenDetails>
                    <Token>
                        <xsl:value-of select="$GetLocalPaymentToken/javaCodeActivityOutput/value"/>
                    </Token>
                    <Scheme>
                        <xsl:value-of select="$GetLocalPaymentToken/javaCodeActivityOutput/scheme"/>
                    </Scheme>
                    <Scope>
                        <xsl:value-of select="$GetLocalPaymentToken/javaCodeActivityOutput/scope"/>
                    </Scope>
                    <Expiration>
                        <xsl:value-of select="$GetLocalPaymentToken/javaCodeActivityOutput/expiration"/>
                    </Expiration>
                </TokenDetails>
            </xsl:if>
            <xsl:if test="string-length($Error/root/ErrorMessage)>0">
                <Error>
                    <Type>
                        <xsl:value-of select="$Error/root/ErrorType"/>
                    </Type>
                    <xsl:if test="$Error/root/ErrorDetail">
                        <Detail>
                            <xsl:value-of select="$Error/root/ErrorDetail"/>
                        </Detail>
                    </xsl:if>
                    <ErrorMessage>
                        <xsl:value-of select="$Error/root/ErrorMessage"/>
                    </ErrorMessage>
                </Error>
            </xsl:if>
            <xsl:if test="string-length($Error/root/CLE/ErrorReportType) > 0">
                <CLEErrorReport>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:stackTrace">
                        <pfx2:stackTrace>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:stackTrace"/>
                        </pfx2:stackTrace>
                    </xsl:if>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:msg">
                        <pfx2:msg>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:msg"/>
                        </pfx2:msg>
                    </xsl:if>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:fullClass">
                        <pfx2:fullClass>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:fullClass"/>
                        </pfx2:fullClass>
                    </xsl:if>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:class">
                        <pfx2:class>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:class"/>
                        </pfx2:class>
                    </xsl:if>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:processStack">
                        <pfx2:processStack>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:processStack"/>
                        </pfx2:processStack>
                    </xsl:if>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:msgCode">
                        <pfx2:msgCode>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:msgCode"/>
                        </pfx2:msgCode>
                    </xsl:if>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:data">
                        <pfx2:data>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:data"/>
                        </pfx2:data>
                    </xsl:if>
                </CLEErrorReport>
            </xsl:if>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="TokenDetails" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="Token" type="xsd:string"/>
                                <xsd:element name="Scheme" type="xsd:string"/>
                                <xsd:element name="Scope" type="xsd:string"/>
                                <xsd:element name="Expiration" type="xsd:dateTime"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="Error" type="pfx:ErrorType" minOccurs="0"/>
                    <xsd:element name="CLEErrorReport" type="pfx2:ErrorReportType" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>731</pd:endX>
    <pd:endY>70</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Error>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="ErrorType" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="ErrorDetail" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="ErrorMessage" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="CLE" minOccurs="0">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="ErrorReportType" type="pfx2:ErrorReportType"/>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </Error>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1430416777192</pd:targetNamespace>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>632</pd:x>
        <pd:y>185</pd:y>
        <config>
            <variableName>Error</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <ErrorType>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonInternalErrors/LocalToken/COMMON_INTERNAL_ERROR_LOCAL_TOKEN/Type"/>
                </ErrorType>
                <xsl:if test="string-length($_globalVariables/ns:GlobalVariables/PaymentService/CommonInternalErrors/LocalToken/COMMON_INTERNAL_ERROR_LOCAL_TOKEN/Detail)>0">
                    <ErrorDetail>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonInternalErrors/LocalToken/COMMON_INTERNAL_ERROR_LOCAL_TOKEN/Detail"/>
                    </ErrorDetail>
                </xsl:if>
                <ErrorMessage>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonInternalErrors/LocalToken/COMMON_INTERNAL_ERROR_LOCAL_TOKEN/ErrorMessage"/>
                </ErrorMessage>
                <CLE>
                    <ErrorReportType>
                        <xsl:if test="$_error/ns3:ErrorReport/StackTrace">
                            <pfx2:stackTrace>
                                <xsl:value-of select="$_error/ns3:ErrorReport/StackTrace"/>
                            </pfx2:stackTrace>
                        </xsl:if>
                        <xsl:if test="$_error/ns3:ErrorReport/Msg">
                            <pfx2:msg>
                                <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                            </pfx2:msg>
                        </xsl:if>
                        <xsl:if test="$_error/ns3:ErrorReport/FullClass">
                            <pfx2:fullClass>
                                <xsl:value-of select="$_error/ns3:ErrorReport/FullClass"/>
                            </pfx2:fullClass>
                        </xsl:if>
                        <xsl:if test="$_error/ns3:ErrorReport/Class">
                            <pfx2:class>
                                <xsl:value-of select="$_error/ns3:ErrorReport/Class"/>
                            </pfx2:class>
                        </xsl:if>
                        <xsl:if test="$_error/ns3:ErrorReport/ProcessStack">
                            <pfx2:processStack>
                                <xsl:value-of select="$_error/ns3:ErrorReport/ProcessStack"/>
                            </pfx2:processStack>
                        </xsl:if>
                        <xsl:if test="$_error/ns3:ErrorReport/MsgCode">
                            <pfx2:msgCode>
                                <xsl:value-of select="$_error/ns3:ErrorReport/MsgCode"/>
                            </pfx2:msgCode>
                        </xsl:if>
                        <pfx2:data>
                            <xsl:value-of select="tib:render-xml($_error/ns3:ErrorReport/Data/*)"/>
                        </pfx2:data>
                    </ErrorReportType>
                </CLE>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuditBeginLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>262</pd:x>
        <pd:y>70</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/AuditLogMessage.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$GetTransactionDetails/root/InterfaceCode"/>
                </InterfaceCode>
                <AuditMessageType>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/IngrianRequest"/>
                </AuditMessageType>
                <payloadTrue>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/PayloadTrue"/>
                </payloadTrue>
                <pfx2:LogRequest>
                    <pfx2:envCode>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ENV"/>
                    </pfx2:envCode>
                    <pfx2:appCode>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CLE/AppCode"/>
                    </pfx2:appCode>
                    <pfx2:interfaceCode>
                        <xsl:value-of select="$GetTransactionDetails/root/InterfaceCode"/>
                    </pfx2:interfaceCode>
                    <pfx2:timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx2:timestamp>
                    <pfx2:message>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/IngrianRequestMsg"/>
                    </pfx2:message>
                    <pfx2:TransactionDetails>
                        <pfx2:transactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                        </pfx2:transactionDomain>
                        <pfx2:transactionType>
                            <xsl:value-of select="$GetTransactionDetails/root/TransactionType"/>
                        </pfx2:transactionType>
                        <pfx2:transactionID>
                            <xsl:value-of select="$GetTransactionDetails/root/TransactionId"/>
                        </pfx2:transactionID>
                    </pfx2:TransactionDetails>
                    <pfx2:AuditInfo>
                        <pfx2:payload>
                            <xsl:value-of select="''"/>
                        </pfx2:payload>
                        <pfx2:auditStep>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/IngrianRequest"/>
                        </pfx2:auditStep>
                    </pfx2:AuditInfo>
                </pfx2:LogRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuditEndLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>626</pd:x>
        <pd:y>70</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/AuditLogMessage.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$GetTransactionDetails/root/InterfaceCode"/>
                </InterfaceCode>
                <AuditMessageType>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/IngrianResponse"/>
                </AuditMessageType>
                <payloadTrue>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/PayloadTrue"/>
                </payloadTrue>
                <pfx2:LogRequest>
                    <pfx2:envCode>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ENV"/>
                    </pfx2:envCode>
                    <pfx2:appCode>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CLE/AppCode"/>
                    </pfx2:appCode>
                    <pfx2:interfaceCode>
                        <xsl:value-of select="$GetTransactionDetails/root/InterfaceCode"/>
                    </pfx2:interfaceCode>
                    <pfx2:timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx2:timestamp>
                    <pfx2:message>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/IngrianResponseMsg"/>
                    </pfx2:message>
                    <pfx2:TransactionDetails>
                        <pfx2:transactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                        </pfx2:transactionDomain>
                        <pfx2:transactionType>
                            <xsl:value-of select="$GetTransactionDetails/root/TransactionType"/>
                        </pfx2:transactionType>
                        <pfx2:transactionID>
                            <xsl:value-of select="$GetTransactionDetails/root/TransactionId"/>
                        </pfx2:transactionID>
                    </pfx2:TransactionDetails>
                    <pfx2:AuditInfo>
                        <pfx2:payload>
                            <xsl:value-of select="''"/>
                        </pfx2:payload>
                        <pfx2:auditStep>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/IngrianResponse"/>
                        </pfx2:auditStep>
                    </pfx2:AuditInfo>
                </pfx2:LogRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>472</pd:x>
        <pd:y>185</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetConfigHandle">
        <pd:type>com.tibco.plugin.java.JavaMethodActivity</pd:type>
        <pd:resourceType>ae.activities.JavaMethodActivity</pd:resourceType>
        <pd:x>370</pd:x>
        <pd:y>70</pd:y>
        <config>
            <ConstructDeclaredClass>false</ConstructDeclaredClass>
            <CacheConstructedClass>false</CacheConstructedClass>
            <InvokeCleanupMethod>false</InvokeCleanupMethod>
            <JavaGlobalInstance>/CommonProcesses/CryptoProcesses/CryptoEnvironment.serviceagent</JavaGlobalInstance>
            <MethodInfo>
                <className>com.wsgc.ecommerce.tokenization.runtime.EnvironmentHandle</className>
                <methodName>getConfigurationHandle</methodName>
                <methodReturn>com.wsgc.ecommerce.tokenization.runtime.ConfigurationHandle</methodReturn>
            </MethodInfo>
        </config>
        <pd:inputBindings>
            <ns2:JavaMethodActivityInput/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetLocalPaymentToken">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>485</pd:x>
        <pd:y>70</pd:y>
        <config>
            <fileName>GetLocalTokenGetLocalPaymentToken</fileName>
            <packageName>CommonProcesses.CryptoProcesses.GetLocalToken</packageName>
            <fullsource>package CommonProcesses.CryptoProcesses.GetLocalToken;
import java.util.*;
import java.io.*;
import com.wsgc.ecommerce.tokenization.runtime.ConfigurationHandle;
import com.wsgc.ecommerce.tokenization.PaymentToken;
import com.wsgc.ecommerce.tokenization.TokenizationContext;
import com.wsgc.ecommerce.tokenization.TokenizationContexts;
import com.wsgc.ecommerce.tokenization.CardExpiration;


public class GetLocalTokenGetLocalPaymentToken{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected Object confighandle = null;
	protected String environment = "";
	protected String wsilocaltokenscheme = "";
	protected String pan = "";
	protected int expirationMonth = 0;
	protected int expirationYear = 0;
	protected String scheme = "";
	protected String value = "";
	protected String scope = "";
	protected Date expiration = null;
	public Object getconfighandle() {
		return confighandle;
	}
	public void setconfighandle(Object val) {
		confighandle = val;
	}
	public String getenvironment() {
		return environment;
	}
	public void setenvironment(String val) {
		environment = val;
	}
	public String getwsilocaltokenscheme() {
		return wsilocaltokenscheme;
	}
	public void setwsilocaltokenscheme(String val) {
		wsilocaltokenscheme = val;
	}
	public String getpan() {
		return pan;
	}
	public void setpan(String val) {
		pan = val;
	}
	public int getexpirationMonth() {
		return expirationMonth;
	}
	public void setexpirationMonth(int val) {
		expirationMonth = val;
	}
	public int getexpirationYear() {
		return expirationYear;
	}
	public void setexpirationYear(int val) {
		expirationYear = val;
	}
	public String getscheme() {
		return scheme;
	}
	public void setscheme(String val) {
		scheme = val;
	}
	public String getvalue() {
		return value;
	}
	public void setvalue(String val) {
		value = val;
	}
	public String getscope() {
		return scope;
	}
	public void setscope(String val) {
		scope = val;
	}
	public Date getexpiration() {
		return expiration;
	}
	public void setexpiration(Date val) {
		expiration = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public GetLocalTokenGetLocalPaymentToken() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : Object confighandle
	In  : String environment
	In  : String wsilocaltokenscheme
	In  : String pan
	In  : int expirationMonth
	In  : int expirationYear
	Out : String scheme
	Out : String value
	Out : String scope
	Out : Date expiration
* Available Variables: DO NOT MODIFY *****/


//com.wsgc.ecommerce.tokenization.PaymentToken pt = null;
try{
com.wsgc.ecommerce.tokenization.runtime.ConfigurationHandle ch = (com.wsgc.ecommerce.tokenization.runtime.ConfigurationHandle) getconfighandle();

TokenizationContext ctx =com.wsgc.ecommerce.tokenization.TokenizationContexts.forCurrentTime();

CardExpiration ce = (expirationMonth !=0 &amp;&amp; expirationYear != 0)? new CardExpiration(expirationMonth,expirationYear) : null;


com.wsgc.ecommerce.tokenization.PaymentToken pt = ch.getEnvironment(environment).getPaymentProvider().tokenize(wsilocaltokenscheme, pan,  ce, ctx);


setscheme(pt.getScheme());
setvalue(pt.getValue());
setscope(pt.getScope());
setexpiration(pt.getExpiration());

} catch (Exception e) {

e.printStackTrace();
throw e;
}


}
}
</fullsource>
            <outputData>
                <row>
                    <fieldName>scheme</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>value</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>scope</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>expiration</fieldName>
                    <fieldType>dateTime</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </outputData>
            <inputData>
                <row>
                    <fieldName>confighandle</fieldName>
                    <fieldType>ObjectReference</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>environment</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>wsilocaltokenscheme</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>pan</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>expirationMonth</fieldName>
                    <fieldType>int</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>expirationYear</fieldName>
                    <fieldType>int</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </inputData>
            <byteCode>
                <class>
                    <name>GetLocalTokenGetLocalPaymentToken</name>
                    <byteCode>yv66vgAAADMAkAkAHwBZCQAfAFoJAB8AWwkAHwBcCQAfAF0JAB8AXgkAHwBfCQAfAGAJAB8AYQkAHwBiCgAgAGMIAGQKAB8AZQcAZgoAZwBoBwBpCgAQAGoLAA4AawoAbABtCwBuAG8KAHAAcQoAHwByCgBwAHMKAB8AdAoAcAB1CgAfAHYKAHAAdwoAHwB4BwB5CgAdAHoHAHsHAHwBAAxjb25maWdoYW5kbGUBABJMamF2YS9sYW5nL09iamVjdDsBAAtlbnZpcm9ubWVudAEAEkxqYXZhL2xhbmcvU3RyaW5nOwEAE3dzaWxvY2FsdG9rZW5zY2hlbWUBAANwYW4BAA9leHBpcmF0aW9uTW9udGgBAAFJAQAOZXhwaXJhdGlvblllYXIBAAZzY2hlbWUBAAV2YWx1ZQEABXNjb3BlAQAKZXhwaXJhdGlvbgEAEExqYXZhL3V0aWwvRGF0ZTsBAA9nZXRjb25maWdoYW5kbGUBABQoKUxqYXZhL2xhbmcvT2JqZWN0OwEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBAA9zZXRjb25maWdoYW5kbGUBABUoTGphdmEvbGFuZy9PYmplY3Q7KVYBAA5nZXRlbnZpcm9ubWVudAEAFCgpTGphdmEvbGFuZy9TdHJpbmc7AQAOc2V0ZW52aXJvbm1lbnQBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBABZnZXR3c2lsb2NhbHRva2Vuc2NoZW1lAQAWc2V0d3NpbG9jYWx0b2tlbnNjaGVtZQEABmdldHBhbgEABnNldHBhbgEAEmdldGV4cGlyYXRpb25Nb250aAEAAygpSQEAEnNldGV4cGlyYXRpb25Nb250aAEABChJKVYBABFnZXRleHBpcmF0aW9uWWVhcgEAEXNldGV4cGlyYXRpb25ZZWFyAQAJZ2V0c2NoZW1lAQAJc2V0c2NoZW1lAQAIZ2V0dmFsdWUBAAhzZXR2YWx1ZQEACGdldHNjb3BlAQAIc2V0c2NvcGUBAA1nZXRleHBpcmF0aW9uAQASKClMamF2YS91dGlsL0RhdGU7AQANc2V0ZXhwaXJhdGlvbgEAEyhMamF2YS91dGlsL0RhdGU7KVYBAAY8aW5pdD4BAAMoKVYBAAZpbnZva2UBAA1TdGFja01hcFRhYmxlBwBmBwB9BwBpBwB7BwB5AQAKRXhjZXB0aW9ucwEAClNvdXJjZUZpbGUBACZHZXRMb2NhbFRva2VuR2V0TG9jYWxQYXltZW50VG9rZW4uamF2YQwAIQAiDAAjACQMACUAJAwAJgAkDAAnACgMACkAKAwAKgAkDAArACQMACwAJAwALQAuDABNAE4BAAAMAC8AMAEAO2NvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vcnVudGltZS9Db25maWd1cmF0aW9uSGFuZGxlBwB+DAB/AIABAC5jb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL0NhcmRFeHBpcmF0aW9uDABNAIEMAIIAgwcAhAwAhQCGBwCHDACIAIkHAIoMAIsANgwARAA4DACMADYMAEYAOAwAjQA2DABIADgMAI4ASgwASwBMAQATamF2YS9sYW5nL0V4Y2VwdGlvbgwAjwBOAQBPQ29tbW9uUHJvY2Vzc2VzL0NyeXB0b1Byb2Nlc3Nlcy9HZXRMb2NhbFRva2VuL0dldExvY2FsVG9rZW5HZXRMb2NhbFBheW1lbnRUb2tlbgEAEGphdmEvbGFuZy9PYmplY3QBADNjb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL1Rva2VuaXphdGlvbkNvbnRleHQBADRjb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL1Rva2VuaXphdGlvbkNvbnRleHRzAQAOZm9yQ3VycmVudFRpbWUBADcoKUxjb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL1Rva2VuaXphdGlvbkNvbnRleHQ7AQAFKElJKVYBAA5nZXRFbnZpcm9ubWVudAEATyhMamF2YS9sYW5nL1N0cmluZzspTGNvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vcnVudGltZS9FbnZpcm9ubWVudEhhbmRsZTsBADljb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL3J1bnRpbWUvRW52aXJvbm1lbnRIYW5kbGUBABJnZXRQYXltZW50UHJvdmlkZXIBAD8oKUxjb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL1BheW1lbnRUb2tlbml6YXRpb25Qcm92aWRlcjsBADtjb20vd3NnYy9l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</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <confighandle>
                    <xsl:value-of select="$GetConfigHandle/ns1:JavaMethodActivityOutput/MethodReturnValue"/>
                </confighandle>
                <environment>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ENV"/>
                </environment>
                <wsilocaltokenscheme>
                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/PaymentService/TokenConstants/WSILocalTokenScheme,$_globalVariables/ns:GlobalVariables/PaymentService/TokenConstants/EnvId)"/>
                </wsilocaltokenscheme>
                <pan>
                    <xsl:value-of select="tib:trim($Start/root/PAN)"/>
                </pan>
                <xsl:if test="string-length($Start/root/ExpiryMonth) > 0">
                    <xsl:if test="$Start/root/ExpiryMonth">
                        <expirationMonth>
                            <xsl:value-of select="$Start/root/ExpiryMonth"/>
                        </expirationMonth>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($Start/root/ExpiryYear) > 0">
                    <xsl:if test="$Start/root/ExpiryYear">
                        <expirationYear>
                            <xsl:value-of select="$Start/root/ExpiryYear"/>
                        </expirationYear>
                    </xsl:if>
                </xsl:if>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetTransactionDetails">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>144</pd:x>
        <pd:y>70</pd:y>
        <config>
            <variableConfig>/CommonProcesses/InterfaceDetails.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetTransactionDetails</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetConfigHandle</pd:from>
        <pd:to>GetLocalPaymentToken</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetLocalPaymentToken</pd:from>
        <pd:to>AuditEndLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditBeginLog</pd:from>
        <pd:to>GetConfigHandle</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditEndLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTransactionDetails</pd:from>
        <pd:to>AuditBeginLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>