<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://services.wsgc.com/2014/Payment" xmlns:ns="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns3="http://www.wsgc.com/schemas/common/PaymentGatewayCredentials.xsd" xmlns:ns4="http://www.wsgc.com/schemas/common/PaymentGatewayVerifoneCredentials.xsd" xmlns:pfx3="http://ecommerce.wsgc.com/2013/Common" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx4="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/TokenQueryRequest" xmlns:pfx5="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions">
    <xsd:import namespace="http://ecommerce.wsgc.com/2013/Common" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2013/Common/base-types.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/tokenization.xsd"/>
    <xsd:import namespace="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/TokenQueryRequest" schemaLocation="/SharedResources/XMLSchemas/Verifone/UGP-V1/UGPTokenizationRequest.xsd"/>
    <pd:name>BusinessProcesses/Tokenization/RequestProcessors/MapPaymentGatewayRequest.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:TokenizationRequest"/>
    <pd:startX>52</pd:startX>
    <pd:startY>393</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:if test="string-length($Process/root/Error/Type)>0">
                <pfx:TokenizationResponse>
                    <xsl:attribute name="version">
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Tokenization/MessageVersion"/>
                    </xsl:attribute>
                    <SystemContext>
                        <EnvironmentIdentifier>
                            <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                        </EnvironmentIdentifier>
                        <RegionIdentifier>
                            <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                        </RegionIdentifier>
                        <SourceSystemIdentifier>
                            <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix,BW:getHostName())"/>
                        </SourceSystemIdentifier>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/pfx:TokenizationRequest/SystemContext/TransactionId)>0">
                                <TransactionId>
                                    <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/Tokenization/Constants/TransactionIdPrefix,$Start/pfx:TokenizationRequest/SystemContext/TransactionId)"/>
                                </TransactionId>
                            </xsl:when>
                            <xsl:otherwise>
                                <TransactionId>
                                    <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/Tokenization/Constants/TransactionIdPrefix, tib:format-dateTime($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns1:ProcessContext/ProcessId,  $_globalVariables/ns2:GlobalVariables/ENV   , BW:getHostName())"/>
                                </TransactionId>
                            </xsl:otherwise>
                        </xsl:choose>
                        <TransactionTime>
                            <xsl:value-of select="current-dateTime()"/>
                        </TransactionTime>
                    </SystemContext>
                    <xsl:copy-of select="$Start/pfx:TokenizationRequest/PaymentContext"/>
                    <Error>
                        <Type>
                            <xsl:value-of select="$Process/root/Error/Type"/>
                        </Type>
                        <xsl:for-each select="$Process/root/Error/Detail">
                            <Detail>
                                <xsl:value-of select="."/>
                            </Detail>
                        </xsl:for-each>
                        <ErrorMessage>
                            <xsl:value-of select="$Process/root/Error/ErrorMessage"/>
                        </ErrorMessage>
                    </Error>
                </pfx:TokenizationResponse>
            </xsl:if>
            <xsl:if test="if(string-length($TenderSubType/root/TenderSubType)>0)&#xA;then &#xA;$TenderSubType/root/TenderSubType&#xA;else&#xA;$Start/pfx:TokenizationRequest/Tender/Type/SubCode">
                <TenderSubType>
                    <xsl:value-of select="if(string-length($TenderSubType/root/TenderSubType)>0)&#xA;then &#xA;$TenderSubType/root/TenderSubType&#xA;else&#xA;$Start/pfx:TokenizationRequest/Tender/Type/SubCode"/>
                </TenderSubType>
            </xsl:if>
            <paymentgatewayrequest>
                <xsl:value-of select="tib:render-xml($MapPaymentGatewayRequest/pfx4:UGPREQUEST)"/>
            </paymentgatewayrequest>
            <xsl:choose>
                <xsl:when test="string-length($Start/pfx:TokenizationRequest/Tender/AccountNumber)>0">
                    <CardDetails>
                        <PAN>
                            <xsl:value-of select="$Start/pfx:TokenizationRequest/Tender/AccountNumber"/>
                        </PAN>
                        <ExpiryMonth>
                            <xsl:value-of select="$Start/pfx:TokenizationRequest/CardMetadata/CardExpiration/Month"/>
                        </ExpiryMonth>
                        <ExpiryYear>
                            <xsl:value-of select="$Start/pfx:TokenizationRequest/CardMetadata/CardExpiration/Year"/>
                        </ExpiryYear>
                    </CardDetails>
                </xsl:when>
                <xsl:when test="string-length($GetPanfromLocalToken/root/CardDetails/PAN)>0">
                    <CardDetails>
                        <PAN>
                            <xsl:value-of select="$GetPanfromLocalToken/root/CardDetails/PAN"/>
                        </PAN>
                        <ExpiryMonth>
                            <xsl:value-of select="$GetPanfromLocalToken/root/CardDetails/ExpiryMonth"/>
                        </ExpiryMonth>
                        <ExpiryYear>
                            <xsl:value-of select="$GetPanfromLocalToken/root/CardDetails/ExpiryYear"/>
                        </ExpiryYear>
                    </CardDetails>
                </xsl:when>
                <xsl:when test="string-length($GetPanForEncryptedPan/root/CardDetails/PAN)>0">
                    <CardDetails>
                        <PAN>
                            <xsl:value-of select="$GetPanForEncryptedPan/root/CardDetails/PAN"/>
                        </PAN>
                    </CardDetails>
                </xsl:when>
            </xsl:choose>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:TokenizationResponse" minOccurs="0"/>
                    <xsd:element name="TenderSubType" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="paymentgatewayrequest" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="CardDetails" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="PAN" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="ExpiryMonth" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="ExpiryYear" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>905</pd:endX>
    <pd:endY>276</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Process>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="Error" type="pfx3:ErrorType"/>
                        <xsd:element name="NotificationErrorCode" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </Process>
        <TenderSubType>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="TenderSubType" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </TenderSubType>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1414172991752</pd:targetNamespace>
    <pd:activity name="AssignSafeFailure">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>545</pd:x>
        <pd:y>579</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="$_error/ns1:ErrorReport/Class=$_globalVariables/ns2:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:when>
                    <xsl:when test="string-length($GetPanForEncryptedPan/root/Error/Type) > 0">
                        <Error>
                            <Type>
                                <xsl:value-of select="$GetPanForEncryptedPan/root/Error/Type"/>
                            </Type>
                            <xsl:for-each select="$GetPanForEncryptedPan/root/Error/Detail">
                                <Detail>
                                    <xsl:value-of select="."/>
                                </Detail>
                            </xsl:for-each>
                            <ErrorMessage>
                                <xsl:value-of select="$GetPanForEncryptedPan/root/Error/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:when>
                    <xsl:when test="string-length($GetPanfromLocalToken/root/Error/Type) > 0">
                        <Error>
                            <Type>
                                <xsl:value-of select="$GetPanfromLocalToken/root/Error/Type"/>
                            </Type>
                            <xsl:for-each select="$GetPanfromLocalToken/root/Error/Detail">
                                <Detail>
                                    <xsl:value-of select="."/>
                                </Detail>
                            </xsl:for-each>
                            <ErrorMessage>
                                <xsl:value-of select="$GetPanfromLocalToken/root/Error/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:when>
                    <xsl:otherwise>
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignTenderSubType">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>601</pd:x>
        <pd:y>307</pd:y>
        <config>
            <variableName>TenderSubType</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <TenderSubType>
                    <xsl:value-of select="if(string-length($GetTenderSubTypeByBin/root/TenderSubCode)>0)&#xA;then&#xA; $GetTenderSubTypeByBin/root/TenderSubCode&#xA;else&#xA;if($Start/pfx:TokenizationRequest/Tender/Type/SubCode=$_globalVariables/ns2:GlobalVariables/Authorization/PLCCCardType) then concat($Start/pfx:TokenizationRequest/Tender/Type/SubCode,$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/TenderSubCodeSeparator,$Start/pfx:TokenizationRequest/Tender/Type/SubCode)&#xA;else if ($Start/pfx:TokenizationRequest/Tender/Type/SubCode=$_globalVariables/ns2:GlobalVariables/Authorization/CO_BRANDED) then $_globalVariables/ns2:GlobalVariables/Authorization/VISA_WS&#xA;else $Start/pfx:TokenizationRequest/Tender/Type/SubCode"/>
                </TenderSubType>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>301</pd:x>
        <pd:y>582</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetCLEParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>175</pd:x>
        <pd:y>391</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/Tokenization/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetPaymentGatewayVerifoneCredentialParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>316</pd:x>
        <pd:y>390</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentGatewayVerifoneCredentials.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetTenderSubTypeByBin">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>409</pd:x>
        <pd:y>189</pd:y>
        <config>
            <processName>/CommonProcesses/CreditBinRange/GetTenderSubCodeByBinRange.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <AccNum>
                    <xsl:value-of select="if (string-length($Start/pfx:TokenizationRequest/Tender/AccountNumber) > 0)&#xA;  then&#xA;  $Start/pfx:TokenizationRequest/Tender/AccountNumber&#xA;else if (string-length($GetPanForEncryptedPan/root/CardDetails/PAN)>0)&#xA; then&#xA; $GetPanForEncryptedPan/root/CardDetails/PAN&#xA;else if (string-length($GetPanfromLocalToken/root/CardDetails/PAN)>0)&#xA; then&#xA; $GetPanfromLocalToken/root/CardDetails/PAN&#xA;else &#xA;&quot;&quot;"/>
                </AccNum>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogRequestValidationExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>903</pd:x>
        <pd:y>571</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns:ExceptionHandlerRequest>
                <ns:envCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ENV"/>
                </ns:envCode>
                <ns:appCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/AppCode"/>
                </ns:appCode>
                <ns:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns:interfaceCode>
                <ns:hostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </ns:hostName>
                <ns:timeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns:timeStamp>
                <ns:message>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </ns:message>
                <ns:payload>
                    <xsl:value-of select="tib:render-xml($Start/pfx:TokenizationRequest)"/>
                </ns:payload>
                <ns:ErrorLevel>
                    <ns:errorCode>
                        <xsl:value-of select="concat($Process/root/Error/Type, $_globalVariables/ns2:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$Process/root/Error/Detail[1])"/>
                    </ns:errorCode>
                </ns:ErrorLevel>
                <ns:TransactionDetails>
                    <ns:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns:transactionDomain>
                    <ns:transactionType>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Tokenization/CLE/TransactionType"/>
                    </ns:transactionType>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/pfx:TokenizationRequest/SystemContext/TransactionId) > 0">
                            <ns:transactionID>
                                <xsl:value-of select="$Start/pfx:TokenizationRequest/SystemContext/TransactionId"/>
                            </ns:transactionID>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns:transactionID>
                                <xsl:value-of select="concat(tib:format-dateTime($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns1:ProcessContext/ProcessId,  $_globalVariables/ns2:GlobalVariables/ENV   , BW:getHostName())"/>
                            </ns:transactionID>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns:TransactionDetails>
                <xsl:choose>
                    <xsl:when test="string-length($GetPanForEncryptedPan/root/Error/Type) > 0">
                        <ns:ErrorReportType>
                            <xsl:copy-of select="$GetPanForEncryptedPan/root/CLEErrorReport/ancestor-or-self::*/namespace::node()"/>
                            <xsl:copy-of select="$GetPanForEncryptedPan/root/CLEErrorReport/@*"/>
                            <xsl:copy-of select="$GetPanForEncryptedPan/root/CLEErrorReport/node()"/>
                        </ns:ErrorReportType>
                    </xsl:when>
                    <xsl:when test="string-length($GetPanfromLocalToken/root/Error/Type) > 0">
                        <ns:ErrorReportType>
                            <xsl:copy-of select="$GetPanfromLocalToken/root/CLEErrorReport/ancestor-or-self::*/namespace::node()"/>
                            <xsl:copy-of select="$GetPanfromLocalToken/root/CLEErrorReport/@*"/>
                            <xsl:copy-of select="$GetPanfromLocalToken/root/CLEErrorReport/node()"/>
                        </ns:ErrorReportType>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$_error/ns1:ErrorReport">
                            <ns:ErrorReportType>
                                <ns:stackTrace>
                                    <xsl:value-of select="StackTrace"/>
                                </ns:stackTrace>
                                <ns:msg>
                                    <xsl:value-of select="Msg"/>
                                </ns:msg>
                                <ns:fullClass>
                                    <xsl:value-of select="FullClass"/>
                                </ns:fullClass>
                                <ns:class>
                                    <xsl:value-of select="Class"/>
                                </ns:class>
                                <ns:processStack>
                                    <xsl:value-of select="ProcessStack"/>
                                </ns:processStack>
                                <xsl:if test="MsgCode">
                                    <ns:msgCode>
                                        <xsl:value-of select="MsgCode"/>
                                    </ns:msgCode>
                                </xsl:if>
                                <xsl:if test="Data/*">
                                    <ns:data>
                                        <xsl:value-of select="Data/*"/>
                                    </ns:data>
                                </xsl:if>
                            </ns:ErrorReportType>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
            </ns:ExceptionHandlerRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapPaymentGatewayRequest">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>637</pd:x>
        <pd:y>392</pd:y>
        <config>
            <element ref="pfx4:UGPREQUEST"/>
        </config>
        <pd:inputBindings>
            <xsl:variable name="inchannel" select="$Start/pfx:TokenizationRequest/PaymentContext/Channel"/>
            <xsl:variable name="inconcept" select="$Start/pfx:TokenizationRequest/PaymentContext/Concept"/>
            <pfx4:UGPREQUEST>
                <xsl:attribute name="VER">
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/Version"/>
                </xsl:attribute>
                <FUNCTION_TYPE>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/FUNCTION_TYPE"/>
                </FUNCTION_TYPE>
                <PAYMENT_TYPE>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TOKEN_PAYMENT_TYPE"/>
                </PAYMENT_TYPE>
                <COMMAND>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Tokenization/PaymentGateway/Command"/>
                </COMMAND>
                <ACCOUNT>
                    <xsl:value-of select="$GetPaymentGatewayVerifoneCredentialParams/ns4:PaymentGatewayVerifoneCredentials/ns4:PaymentGatewayVerifoneCredential[$inconcept  = ns4:ConceptCode][ns4:ChannelCode=$inchannel]/ns4:Account"/>
                </ACCOUNT>
                <SITE>
                    <xsl:value-of select="$GetPaymentGatewayVerifoneCredentialParams/ns4:PaymentGatewayVerifoneCredentials/ns4:PaymentGatewayVerifoneCredential[$inconcept  = ns4:ConceptCode][ns4:ChannelCode=$inchannel]/ns4:Site"/>
                </SITE>
                <TERM>
                    <xsl:value-of select="$GetPaymentGatewayVerifoneCredentialParams/ns4:PaymentGatewayVerifoneCredentials/ns4:PaymentGatewayVerifoneCredential[$inconcept  = ns4:ConceptCode][ns4:ChannelCode=$inchannel]/ns4:Term"/>
                </TERM>
                <SERIAL_NUM>
                    <xsl:value-of select="$GetPaymentGatewayVerifoneCredentialParams/ns4:PaymentGatewayVerifoneCredentials/ns4:PaymentGatewayVerifoneCredential[$inconcept  = ns4:ConceptCode][ns4:ChannelCode=$inchannel]/ns4:SerialNum"/>
                </SERIAL_NUM>
                <DEVTYPE>
                    <xsl:value-of select="$GetPaymentGatewayVerifoneCredentialParams/ns4:PaymentGatewayVerifoneCredentials/ns4:PaymentGatewayVerifoneCredential[$inconcept  = ns4:ConceptCode][ns4:ChannelCode=$inchannel]/ns4:DevType"/>
                </DEVTYPE>
                <DEVICEKEY>
                    <xsl:value-of select="$GetPaymentGatewayVerifoneCredentialParams/ns4:PaymentGatewayVerifoneCredentials/ns4:PaymentGatewayVerifoneCredential[$inconcept  = ns4:ConceptCode][ns4:ChannelCode=$inchannel]/ns4:DeviceKey"/>
                </DEVICEKEY>
                <xsl:choose>
                    <xsl:when test="string-length($Start/pfx:TokenizationRequest/Tender/AccountNumber)>0">
                        <xsl:if test="$Start/pfx:TokenizationRequest/Tender/AccountNumber">
                            <ACCT_NUM>
                                <xsl:value-of select="$Start/pfx:TokenizationRequest/Tender/AccountNumber"/>
                            </ACCT_NUM>
                        </xsl:if>
                    </xsl:when>
                    <xsl:when test="string-length($GetPanfromLocalToken/root/CardDetails/PAN)>0">
                        <ACCT_NUM>
                            <xsl:value-of select="$GetPanfromLocalToken/root/CardDetails/PAN"/>
                        </ACCT_NUM>
                    </xsl:when>
                    <xsl:when test="string-length($GetPanForEncryptedPan/root/CardDetails/PAN)>0">
                        <ACCT_NUM>
                            <xsl:value-of select="$GetPanForEncryptedPan/root/CardDetails/PAN"/>
                        </ACCT_NUM>
                    </xsl:when>
                </xsl:choose>
                <xsl:if test="string-length($Start/pfx:TokenizationRequest/Tender/Token/@scheme)>0&#xA;and&#xA;$Start/pfx:TokenizationRequest/Tender/Token/@scheme=concat($_globalVariables/ns2:GlobalVariables/PaymentService/TokenConstants/PaymentGatewayTokenScheme,$_globalVariables/ns2:GlobalVariables/PaymentService/TokenConstants/EnvId)">
                    <xsl:if test="$Start/pfx:TokenizationRequest/Tender/Token">
                        <TKN_PAYMENT>
                            <xsl:value-of select="$Start/pfx:TokenizationRequest/Tender/Token"/>
                        </TKN_PAYMENT>
                    </xsl:if>
                </xsl:if>
                <TKN_PROCESS>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TOKEN_PROCESS"/>
                </TKN_PROCESS>
                <xsl:choose>
                    <xsl:when test="string-length($GetPanfromLocalToken/root/CardDetails/ExpiryMonth)>0">
                        <EXP_DATE>
                            <xsl:value-of select="concat(tib:pad-front($GetPanfromLocalToken/root/CardDetails/ExpiryMonth, 2, '0'),tib:right($GetPanfromLocalToken/root/CardDetails/ExpiryYear, 2))"/>
                        </EXP_DATE>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:if test="(string-length($Start/pfx:TokenizationRequest/CardMetadata/CardExpiration/Year)>0) or&#xA;(string-length($Start/pfx:TokenizationRequest/CardMetadata/CardExpiration/Month)>0)">
                            <EXP_DATE>
                                <xsl:value-of select="concat(tib:pad-front($Start/pfx:TokenizationRequest/CardMetadata/CardExpiration/Month, 2, '0'),tib:right($Start/pfx:TokenizationRequest/CardMetadata/CardExpiration/Year, 2))"/>
                            </EXP_DATE>
                        </xsl:if>
                    </xsl:otherwise>
                </xsl:choose>
                <TKN_RENEW>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TKN_RENEW"/>
                </TKN_RENEW>
            </pfx4:UGPREQUEST>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetPanfromLocalToken">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>425</pd:x>
        <pd:y>475</pd:y>
        <config>
            <processName>/CommonProcesses/CryptoProcesses/GetPanFromLocalToken.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <Token>
                    <xsl:value-of select="$Start/pfx:TokenizationRequest/Tender/Token"/>
                </Token>
                <Scheme>
                    <xsl:value-of select="$Start/pfx:TokenizationRequest/Tender/Token/@scheme"/>
                </Scheme>
                <Scope>
                    <xsl:value-of select="$Start/pfx:TokenizationRequest/Tender/Token/@scope"/>
                </Scope>
                <Expiration>
                    <xsl:value-of select="$Start/pfx:TokenizationRequest/Tender/Token/@expiration"/>
                </Expiration>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>744</pd:x>
        <pd:y>76</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Error>
                    <Type>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_CARD_NUMBER/Type"/>
                    </Type>
                    <Detail>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_CARD_NUMBER/Detail"/>
                    </Detail>
                    <ErrorMessage>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_CARD_NUMBER/ErrorMessage"/>
                    </ErrorMessage>
                </Error>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetPanForEncryptedPan">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>228</pd:x>
        <pd:y>190</pd:y>
        <config>
            <processName>/CommonProcesses/CryptoProcesses/GetPanFromEncryptedPan.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <Token>
                    <xsl:value-of select="$Start/pfx:TokenizationRequest/Tender/Token"/>
                </Token>
                <Scheme>
                    <xsl:value-of select="$Start/pfx:TokenizationRequest/Tender/Token/@scheme"/>
                </Scheme>
                <Scope>
                    <xsl:value-of select="$Start/pfx:TokenizationRequest/Tender/Token/@scope"/>
                </Scope>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>68</pd:x>
        <pd:y>188</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx5:ActivityInput/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>210</pd:x>
        <pd:y>480</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx5:ActivityInput/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignError">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>267</pd:x>
        <pd:y>48</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Error>
                    <Type>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/NO_PAN_FROM_TOKEN/Type"/>
                    </Type>
                    <ErrorMessage>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/NO_PAN_FROM_TOKEN/ErrorMessage"/>
                    </ErrorMessage>
                </Error>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignError-1">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>592</pd:x>
        <pd:y>476</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Error>
                    <Type>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/NO_PAN_FROM_TOKEN/Type"/>
                    </Type>
                    <ErrorMessage>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/NO_PAN_FROM_TOKEN/ErrorMessage"/>
                    </ErrorMessage>
                </Error>
                <NotificationErrorCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/NotificationErrorCodes/LOCALTOKEN_DETOKENIZE_ERROR"/>
                </NotificationErrorCode>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignTenderSubType-1">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>504</pd:x>
        <pd:y>329</pd:y>
        <config>
            <variableName>TenderSubType</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <TenderSubType>
                    <xsl:value-of select="tib:tokenize(tib:tokenize($_globalVariables/ns2:GlobalVariables/Tokenization/Constants/ExpectedUsageExemptBinRangeSubCode,'|')[contains(.,upper-case($Start/pfx:TokenizationRequest/ExpectedUsage))],':')[2]"/>
                </TenderSubType>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ValidateTenderSubcode">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>585</pd:x>
        <pd:y>201</pd:y>
        <config>
            <processName>/CommonProcesses/CreditBinRange/ValidateTenderSubCode.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <TransactionType>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Tokenization/CLE/TransactionType"/>
                </TransactionType>
                <RequestTenderSubCode>
                    <xsl:value-of select="$Start/pfx:TokenizationRequest/Tender/Type/SubCode"/>
                </RequestTenderSubCode>
                <EPSTenderType>
                    <xsl:value-of select="$GetTenderSubTypeByBin/root/TenderSubCode"/>
                </EPSTenderType>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignTenderSubType-2">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>751</pd:x>
        <pd:y>264</pd:y>
        <config>
            <variableName>TenderSubType</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:if test="$ValidateTenderSubcode/root/EPSTenderSubCode">
                    <TenderSubType>
                        <xsl:value-of select="$ValidateTenderSubcode/root/EPSTenderSubCode"/>
                    </TenderSubType>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignError-1-1">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>702</pd:x>
        <pd:y>148</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Error>
                    <Type>
                        <xsl:value-of select="$ValidateTenderSubcode/root/Error/Type"/>
                    </Type>
                    <xsl:if test="$ValidateTenderSubcode/root/Error/Detail">
                        <Detail>
                            <xsl:value-of select="$ValidateTenderSubcode/root/Error/Detail"/>
                        </Detail>
                    </xsl:if>
                    <ErrorMessage>
                        <xsl:value-of select="$ValidateTenderSubcode/root/Error/ErrorMessage"/>
                    </ErrorMessage>
                </Error>
                <NotificationErrorCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/NotificationErrorCodes/INVALID_TENDER_SUBCODE_ERROR"/>
                </NotificationErrorCode>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NotifySupport">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>808</pd:x>
        <pd:y>218</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/NotifySupport.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </InterfaceCode>
                <ExceptionCode>
                    <xsl:value-of select="$Process/root/NotificationErrorCode"/>
                </ExceptionCode>
                <ErrorMessage>
                    <xsl:value-of select="$ValidateTenderSubcode/root/Error/Detail"/>
                </ErrorMessage>
                <TransactionType>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Tokenization/CLE/TransactionType"/>
                </TransactionType>
                <TransactionId>
                    <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                </TransactionId>
                <Payload>
                    <xsl:value-of select="tib:render-xml($Start/pfx:TokenizationRequest)"/>
                </Payload>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapPaymentGatewayRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>AssignSafeFailure</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogRequestValidationExceptionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignSafeFailure</pd:from>
        <pd:to>LogRequestValidationExceptionRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>GetPaymentGatewayVerifoneCredentialParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPaymentGatewayVerifoneCredentialParams</pd:from>
        <pd:to>GetTenderSubTypeByBin</pd:to>
        <pd:xpathDescription>PAN</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:TokenizationRequest/Tender/AccountNumber)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignTenderSubType</pd:from>
        <pd:to>MapPaymentGatewayRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTenderSubTypeByBin</pd:from>
        <pd:to>AssignTenderSubType</pd:to>
        <pd:xpathDescription>BIN_MATCH &amp; No SubCode</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($GetTenderSubTypeByBin/root/TenderSubCode) &gt; 0
and
string-length($Start/pfx:TokenizationRequest/Tender/Type/SubCode)=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPaymentGatewayVerifoneCredentialParams</pd:from>
        <pd:to>MapPaymentGatewayRequest</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPaymentGatewayVerifoneCredentialParams</pd:from>
        <pd:to>GetPanfromLocalToken</pd:to>
        <pd:xpathDescription>Local Token</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:TokenizationRequest/Tender/Token)&gt;0 and $Start/pfx:TokenizationRequest/Tender/Token/@isTemporary="true" and not(contains($_globalVariables/ns2:GlobalVariables/PaymentService/TokenConstants/CipherSchemes,tib:substring-before-last($Start/pfx:TokenizationRequest/Tender/Token/@scheme, $_globalVariables/ns2:GlobalVariables/PaymentService/TokenConstants/EnvId)))</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPanfromLocalToken</pd:from>
        <pd:to>GetTenderSubTypeByBin</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTenderSubTypeByBin</pd:from>
        <pd:to>Assign</pd:to>
        <pd:xpathDescription>BIN_MISMATCH</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPaymentGatewayVerifoneCredentialParams</pd:from>
        <pd:to>GetPanForEncryptedPan</pd:to>
        <pd:xpathDescription>CipherPAN</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:TokenizationRequest/Tender/Token/@scheme) &gt; 0 and
contains($_globalVariables/ns2:GlobalVariables/PaymentService/TokenConstants/CipherSchemes,tib:substring-before-last($Start/pfx:TokenizationRequest/Tender/Token/@scheme, $_globalVariables/ns2:GlobalVariables/PaymentService/TokenConstants/EnvId))</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPanForEncryptedPan</pd:from>
        <pd:to>GetTenderSubTypeByBin</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPanForEncryptedPan</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($GetPanForEncryptedPan/root/Error/Type) &gt; 0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPanfromLocalToken</pd:from>
        <pd:to>Generate-Error-1</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($GetPanfromLocalToken/root/Error/Type) &gt; 0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPanfromLocalToken</pd:from>
        <pd:to>AssignError-1</pd:to>
        <pd:xpathDescription>No PAN</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length(tib:trim($GetPanfromLocalToken/root/CardDetails/PAN))=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPanForEncryptedPan</pd:from>
        <pd:to>AssignError</pd:to>
        <pd:xpathDescription>No PAN</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length(tib:trim($GetPanForEncryptedPan/root/CardDetails/PAN))=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignError-1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTenderSubTypeByBin</pd:from>
        <pd:to>AssignTenderSubType-1</pd:to>
        <pd:xpathDescription>OVERRIDE</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>(string-length($Start/pfx:TokenizationRequest/Tender/Type/SubCode)=0
or
string-length($Start/pfx:TokenizationRequest/Tender/Type/SubCode)&gt;0 and 
contains(upper-case($Start/pfx:TokenizationRequest/Tender/Type/SubCode),$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/OtherTenderSubType))
and
string-length($GetTenderSubTypeByBin/root/TenderSubCode) = 0
and
string-length($Start/pfx:TokenizationRequest/ExpectedUsage) &gt; 0
and
string-length(tib:tokenize(tib:tokenize($_globalVariables/ns2:GlobalVariables/Tokenization/Constants/ExpectedUsageExemptBinRangeSubCode,'|')[contains(.,upper-case($Start/pfx:TokenizationRequest/ExpectedUsage))],':')[2])&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignTenderSubType-1</pd:from>
        <pd:to>MapPaymentGatewayRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTenderSubTypeByBin</pd:from>
        <pd:to>ValidateTenderSubcode</pd:to>
        <pd:xpathDescription>BIN_MATCH-Validate</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:TokenizationRequest/Tender/Type/SubCode) &gt; 0
and
(
string-length($GetTenderSubTypeByBin/root/TenderSubCode)&gt;0
or
( string-length($GetTenderSubTypeByBin/root/TenderSubCode)=0 and
not(string-length($Start/pfx:TokenizationRequest/ExpectedUsage) &gt; 0
and
string-length(tib:tokenize(tib:tokenize($_globalVariables/ns2:GlobalVariables/Tokenization/Constants/ExpectedUsageExemptBinRangeSubCode,'|')[contains(.,upper-case($Start/pfx:TokenizationRequest/ExpectedUsage))],':')[2])&gt;0))
)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ValidateTenderSubcode</pd:from>
        <pd:to>AssignTenderSubType-2</pd:to>
        <pd:xpathDescription>Refined-SubCode</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ValidateTenderSubcode/root/EPSTenderSubCode) &gt; 0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignTenderSubType-2</pd:from>
        <pd:to>MapPaymentGatewayRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ValidateTenderSubcode</pd:from>
        <pd:to>AssignError-1-1</pd:to>
        <pd:xpathDescription>ERROR_INVALID_SUBCODE</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignError-1-1</pd:from>
        <pd:to>NotifySupport</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>NotifySupport</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Map Payment Service to Payment Gateway Mapping here</pd:description>
        <pd:x>103</pd:x>
        <pd:y>36</pd:y>
        <pd:width>204</pd:width>
        <pd:height>70</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-6684775</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>