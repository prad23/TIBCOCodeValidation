<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://www.tibco.com/schemas/REST-POC/Schemas/Schema.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns3="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/TEST.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx3="http://services.wsgc.com/2014/Payment" xmlns:pfx4="http://www.wsgc.com/schemas/common/PaymentServiceAuditSwitches.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions">
    <xsd:import namespace="http://www.tibco.com/schemas/REST-POC/Schemas/Schema.xsd" schemaLocation="/Schemas/Schema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/TEST.xsd" schemaLocation="/JSON_GEN_Schemas/TEST.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/lrc-lookup.xsd"/>
    <pd:name>BusinessProcesses/LrcLookup/MessageTransportHandlers/XMLHandler.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Request" type="xsd:string"/>
    </pd:startType>
    <pd:startX>62</pd:startX>
    <pd:startY>166</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="string-length($Map-Error-Data/pfx3:LrcLookupResponse/Error/Type)>0">
                <Response>
                    <xsl:value-of select="tib:render-xml($Map-Error-Data/pfx3:LrcLookupResponse)"/>
                </Response>
            </xsl:when>
            <xsl:otherwise>
                <Response>
                    <xsl:value-of select="tib:render-xml($LrcLookupCommon/pfx3:LrcLookupResponse)"/>
                </Response>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Response" type="xsd:string"/>
    </pd:endType>
    <pd:endX>1268</pd:endX>
    <pd:endY>179</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <KeyParam>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="transactionid" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="consumertransactionid" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="omsorderid" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </KeyParam>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1406742610426</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1402</pd:x>
        <pd:y>377</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogPaymentServiceResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1123</pd:x>
        <pd:y>178</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/AuditLogMessage.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$SetCLEParamsProvider/root/InterfaceCode"/>
                </InterfaceCode>
                <AuditMessageType>
                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/Constants/VALUE_XMLRESPONSE"/>
                </AuditMessageType>
                <payloadTrue>
                    <xsl:value-of select="true()"/>
                </payloadTrue>
                <ns2:LogRequest>
                    <ns2:envCode>
                        <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/ENV"/>
                    </ns2:envCode>
                    <ns2:appCode>
                        <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/CLE/AppCode"/>
                    </ns2:appCode>
                    <ns2:interfaceCode>
                        <xsl:value-of select="$SetCLEParams/root/InterfaceCode"/>
                    </ns2:interfaceCode>
                    <ns2:timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:timestamp>
                    <ns2:message>
                        <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/CLE/EndAuditMessage"/>
                    </ns2:message>
                    <ns2:TransactionDetails>
                        <ns2:transactionDomain>
                            <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                        </ns2:transactionDomain>
                        <ns2:transactionType>
                            <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/LrcLookup/CLE/TransactionType"/>
                        </ns2:transactionType>
                        <ns2:transactionID>
                            <xsl:value-of select="$SetCLEParams/root/TransactionId"/>
                        </ns2:transactionID>
                    </ns2:TransactionDetails>
                    <ns2:AuditInfo>
                        <ns2:payload>
                            <xsl:value-of select="tib:render-xml($LrcLookupCommon/pfx3:LrcLookupResponse)"/>
                        </ns2:payload>
                        <ns2:auditStep>
                            <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/CLE/Constants/AuditEnd"/>
                        </ns2:auditStep>
                    </ns2:AuditInfo>
                </ns2:LogRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Error Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1397</pd:x>
        <pd:y>274</pd:y>
        <config>
            <element ref="pfx3:LrcLookupResponse"/>
        </config>
        <pd:inputBindings>
            <pfx3:LrcLookupResponse>
                <xsl:attribute name="version">
                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/LrcLookup/MessageVersion"/>
                </xsl:attribute>
                <SystemContext>
                    <EnvironmentIdentifier>
                        <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                    </EnvironmentIdentifier>
                    <RegionIdentifier>
                        <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                    </RegionIdentifier>
                    <SourceSystemIdentifier>
                        <xsl:value-of select="concat($_globalVariables/ns3:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                    </SourceSystemIdentifier>
                    <xsl:choose>
                        <xsl:when test="string-length($ValidateXmlRequest/root/TransactionId)>0">
                            <TransactionId>
                                <xsl:value-of select="$ValidateXmlRequest/root/TransactionId"/>
                            </TransactionId>
                        </xsl:when>
                        <xsl:otherwise>
                            <TransactionId>
                                <xsl:value-of select="concat($_globalVariables/ns3:GlobalVariables/LrcLookup/Constants/TransactionIdPrefix,concat(tib:format-dateTime($_globalVariables/ns3:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns1:ProcessContext/ProcessId,  $_globalVariables/ns3:GlobalVariables/ENV   , BW:getHostName()))"/>
                            </TransactionId>
                        </xsl:otherwise>
                    </xsl:choose>
                    <TransactionTime>
                        <xsl:value-of select="current-dateTime()"/>
                    </TransactionTime>
                </SystemContext>
                <xsl:choose>
                    <xsl:when test="exists($ValidateXmlRequest/root/pfx3:LrcLookupRequest/PaymentContext) and not(empty($ValidateXmlRequest/root/pfx3:LrcLookupRequest/PaymentContext))">
                        <xsl:copy-of select="$ValidateXmlRequest/root/pfx3:LrcLookupRequest/PaymentContext"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <PaymentContext>
                            <Concept>
                                <xsl:value-of select="&quot;&quot;"/>
                            </Concept>
                            <Channel>
                                <xsl:value-of select="&quot;&quot;"/>
                            </Channel>
                        </PaymentContext>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$_error/ns1:ErrorReport/Class=$_globalVariables/ns3:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                            </Type>
                            <xsl:if test="string-length($_globalVariables/ns3:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail)>0">
                                <Detail>
                                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                                </Detail>
                            </xsl:if>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:when>
                    <xsl:when test="exists($_error_ValidateXmlRequest/root/Error) and not(empty($_error_ValidateXmlRequest/root/Error))">
                        <xsl:for-each select="$_error_ValidateXmlRequest/root/Error">
                            <Error>
                                <Type>
                                    <xsl:value-of select="Type"/>
                                </Type>
                                <xsl:for-each select="Detail">
                                    <Detail>
                                        <xsl:value-of select="."/>
                                    </Detail>
                                </xsl:for-each>
                                <ErrorMessage>
                                    <xsl:value-of select="ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="exists($_error_GetConceptProviderDetails/root/Error) and not(empty($_error_GetConceptProviderDetails/root/Error))">
                        <xsl:for-each select="$_error_GetConceptProviderDetails/root/Error">
                            <Error>
                                <Type>
                                    <xsl:value-of select="Type"/>
                                </Type>
                                <xsl:for-each select="Detail">
                                    <Detail>
                                        <xsl:value-of select="."/>
                                    </Detail>
                                </xsl:for-each>
                                <ErrorMessage>
                                    <xsl:value-of select="ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                            </Type>
                            <xsl:if test="string-length($_globalVariables/ns3:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail)>0">
                                <Detail>
                                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                                </Detail>
                            </xsl:if>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:otherwise>
                </xsl:choose>
            </pfx3:LrcLookupResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1393</pd:x>
        <pd:y>180</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="exists($_error_ValidateXmlRequest/root/ns2:ExceptionHandlerRequest) and not(empty($_error_ValidateXmlRequest/root/ns2:ExceptionHandlerRequest))">
                    <xsl:copy-of select="$_error_ValidateXmlRequest/root/ns2:ExceptionHandlerRequest"/>
                </xsl:when>
                <xsl:when test="exists($_error_GetConceptProviderDetails/root/ns2:ExceptionHandlerRequest) and not(empty($_error_GetConceptProviderDetails/root/ns2:ExceptionHandlerRequest))">
                    <xsl:copy-of select="$_error_GetConceptProviderDetails/root/ns2:ExceptionHandlerRequest"/>
                </xsl:when>
                <xsl:otherwise>
                    <ns2:ExceptionHandlerRequest>
                        <ns2:envCode>
                            <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/ENV"/>
                        </ns2:envCode>
                        <ns2:appCode>
                            <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/CLE/AppCode"/>
                        </ns2:appCode>
                        <ns2:interfaceCode>
                            <xsl:value-of select="$SetCLEParams/root/InterfaceCode"/>
                        </ns2:interfaceCode>
                        <ns2:hostName>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns2:hostName>
                        <ns2:timeStamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:timeStamp>
                        <ns2:message>
                            <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                        </ns2:message>
                        <ns2:payload>
                            <xsl:value-of select="$Start/Request"/>
                        </ns2:payload>
                        <ns2:ErrorLevel>
                            <ns2:errorCode>
                                <xsl:value-of select="concat($Map-Error-Data/pfx3:LrcLookupResponse/Error/Type, $_globalVariables/ns3:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$Map-Error-Data/pfx3:LrcLookupResponse/Error/Detail[1])"/>
                            </ns2:errorCode>
                        </ns2:ErrorLevel>
                        <ns2:TransactionDetails>
                            <ns2:transactionDomain>
                                <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                            </ns2:transactionDomain>
                            <ns2:transactionType>
                                <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/LrcLookup/CLE/TransactionType"/>
                            </ns2:transactionType>
                            <ns2:transactionID>
                                <xsl:value-of select="$SetCLEParams/root/TransactionId"/>
                            </ns2:transactionID>
                        </ns2:TransactionDetails>
                        <xsl:for-each select="$_error/ns1:ErrorReport">
                            <ns2:ErrorReportType>
                                <ns2:stackTrace>
                                    <xsl:value-of select="StackTrace"/>
                                </ns2:stackTrace>
                                <ns2:msg>
                                    <xsl:value-of select="Msg"/>
                                </ns2:msg>
                                <ns2:fullClass>
                                    <xsl:value-of select="FullClass"/>
                                </ns2:fullClass>
                                <ns2:class>
                                    <xsl:value-of select="Class"/>
                                </ns2:class>
                                <ns2:processStack>
                                    <xsl:value-of select="ProcessStack"/>
                                </ns2:processStack>
                                <xsl:if test="MsgCode">
                                    <ns2:msgCode>
                                        <xsl:value-of select="MsgCode"/>
                                    </ns2:msgCode>
                                </xsl:if>
                                <ns2:data>
                                    <xsl:value-of select="Data/*"/>
                                </ns2:data>
                            </ns2:ErrorReportType>
                        </xsl:for-each>
                    </ns2:ExceptionHandlerRequest>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SetCLEParams">
        <pd:type>com.tibco.pe.core.SetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.setSharedVariable</pd:resourceType>
        <pd:x>283</pd:x>
        <pd:y>168</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/LrcLookup/CLEParams.jobsharedvariable</variableConfig>
            <showResult>true</showResult>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/LrcLookup/CLE/XmlInterfaceCode"/>
                </InterfaceCode>
                <xsl:choose>
                    <xsl:when test="string-length($KeyParam/root/transactionid)>0 or string-length($KeyParam/root/consumertransactionid)>0 or string-length($KeyParam/root/omsorderid)>0">
                        <TransactionId>
                            <xsl:value-of select="concat( $KeyParam/root/omsorderid, $_globalVariables/ns3:GlobalVariables/PaymentService/Constants/TransactionIdSeparator,&#xA;$KeyParam/root/consumertransactionid,$_globalVariables/ns3:GlobalVariables/PaymentService/Constants/TransactionIdSeparator,&#xA;$KeyParam/root/transactionid)"/>
                        </TransactionId>
                    </xsl:when>
                    <xsl:otherwise>
                        <TransactionId>
                            <xsl:value-of select="concat($_globalVariables/ns3:GlobalVariables/LrcLookup/Constants/TransactionIdPrefix,&#xA;tib:format-dateTime($_globalVariables/ns3:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   &#xA;BW:getHostName())"/>
                        </TransactionId>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LrcLookupCommon">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1004</pd:x>
        <pd:y>296</pd:y>
        <config>
            <processName>/BusinessProcesses/LrcLookup/Lookup.process</processName>
        </config>
        <pd:inputBindings>
            <xsl:copy-of select="$ValidateXmlRequest/root/pfx3:LrcLookupRequest"/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ValidateXmlRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>710</pd:x>
        <pd:y>172</pd:y>
        <config>
            <processName>/BusinessProcesses/LrcLookup/RequestProcessors/ValidateXmlRequest.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <paymentservicerequest>
                    <xsl:value-of select="$Start/Request"/>
                </paymentservicerequest>
                <rulename>
                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/LrcLookup/Validation/XmlRequestValidationRCMSXslt"/>
                </rulename>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetConceptProviderDetails">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>414</pd:x>
        <pd:y>170</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/GetConceptProviderDetails.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <paymentservicerequest>
                    <xsl:value-of select="$Start/Request"/>
                </paymentservicerequest>
                <transactionid>
                    <xsl:value-of select="$SetCLEParams/root/TransactionId"/>
                </transactionid>
                <cleInterfaceCode>
                    <xsl:value-of select="$SetCLEParams/root/InterfaceCode"/>
                </cleInterfaceCode>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignCLEParams">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>158</pd:x>
        <pd:y>168</pd:y>
        <config>
            <variableName>KeyParam</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <transactionid>
                    <xsl:value-of select="if(substring(tib:trim(substring-after($Start/Request,&quot;TransactionId&quot;)),1,2)!=&quot;/>&quot;) then&#xA;substring-before(substring-after($Start/Request,&quot;TransactionId>&quot;),&quot;&lt;/&quot;)&#xA;else&#xA;&quot;&quot;"/>
                </transactionid>
                <consumertransactionid>
                    <xsl:value-of select="if(substring(tib:trim(substring-after($Start/Request,&quot;ConsumerTransactionId&quot;)),1,2)!=&quot;/>&quot;) then&#xA;substring-before(substring-after($Start/Request,&quot;ConsumerTransactionId>&quot;),&quot;&lt;/&quot;)&#xA;else&#xA;&quot;&quot;"/>
                </consumertransactionid>
                <omsorderid>
                    <xsl:value-of select="if(substring(tib:trim(substring-after($Start/Request,'omsOrderId=&quot;')),1,1)!='&quot;') then&#xA;substring-before(substring-after($Start/Request,'omsOrderId=&quot;'),'&quot;')&#xA;else&#xA;&quot;&quot;"/>
                </omsorderid>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SetCLEParamsProvider">
        <pd:type>com.tibco.pe.core.SetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.setSharedVariable</pd:resourceType>
        <pd:x>564</pd:x>
        <pd:y>171</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/LrcLookup/CLEParams.jobsharedvariable</variableConfig>
            <showResult>true</showResult>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/LrcLookup/CLE/XmlInterfaceCode"/>
                </InterfaceCode>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="string-length($KeyParam/root/transactionid)>0 or string-length($KeyParam/root/consumertransactionid)>0 or string-length($KeyParam/root/omsorderid)>0">
                        <TransactionId>
                            <xsl:value-of select="concat( $KeyParam/root/omsorderid, $_globalVariables/ns3:GlobalVariables/PaymentService/Constants/TransactionIdSeparator,&#xA;$KeyParam/root/consumertransactionid,$_globalVariables/ns3:GlobalVariables/PaymentService/Constants/TransactionIdSeparator,&#xA;$KeyParam/root/transactionid)"/>
                        </TransactionId>
                    </xsl:when>
                    <xsl:otherwise>
                        <TransactionId>
                            <xsl:value-of select="concat($_globalVariables/ns3:GlobalVariables/LrcLookup/Constants/TransactionIdPrefix,&#xA;tib:format-dateTime($_globalVariables/ns3:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   &#xA;BW:getHostName())"/>
                        </TransactionId>
                    </xsl:otherwise>
                </xsl:choose>
                <targetServiceProvider>
                    <xsl:value-of select="$GetConceptProviderDetails/root/targetserviceprovider"/>
                </targetServiceProvider>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogPaymentServiceRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>858</pd:x>
        <pd:y>177</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/AuditLogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$SetCLEParamsProvider/root/InterfaceCode"/>
                </InterfaceCode>
                <AuditMessageType>
                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/Constants/VALUE_XMLREQUEST"/>
                </AuditMessageType>
                <payloadTrue>
                    <xsl:value-of select="true()"/>
                </payloadTrue>
                <ns2:LogRequest>
                    <ns2:envCode>
                        <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/ENV"/>
                    </ns2:envCode>
                    <ns2:appCode>
                        <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/CLE/AppCode"/>
                    </ns2:appCode>
                    <ns2:interfaceCode>
                        <xsl:value-of select="$SetCLEParams/root/InterfaceCode"/>
                    </ns2:interfaceCode>
                    <ns2:timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:timestamp>
                    <ns2:message>
                        <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/CLE/BeginAuditMessage"/>
                    </ns2:message>
                    <ns2:TransactionDetails>
                        <ns2:transactionDomain>
                            <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                        </ns2:transactionDomain>
                        <ns2:transactionType>
                            <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/LrcLookup/CLE/TransactionType"/>
                        </ns2:transactionType>
                        <ns2:transactionID>
                            <xsl:value-of select="$SetCLEParams/root/TransactionId"/>
                        </ns2:transactionID>
                    </ns2:TransactionDetails>
                    <ns2:AuditInfo>
                        <ns2:payload>
                            <xsl:value-of select="$Start/Request"/>
                        </ns2:payload>
                        <ns2:auditStep>
                            <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/CLE/Constants/AuditBegin"/>
                        </ns2:auditStep>
                    </ns2:AuditInfo>
                </ns2:LogRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>AssignCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogPaymentServiceResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Map Error Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendExceptionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Error Data</pd:from>
        <pd:to>SendExceptionRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LrcLookupCommon</pd:from>
        <pd:to>LogPaymentServiceResponse</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetCLEParams</pd:from>
        <pd:to>GetConceptProviderDetails</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ValidateXmlRequest</pd:from>
        <pd:to>LogPaymentServiceRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetConceptProviderDetails</pd:from>
        <pd:to>SetCLEParamsProvider</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignCLEParams</pd:from>
        <pd:to>SetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetCLEParamsProvider</pd:from>
        <pd:to>ValidateXmlRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogPaymentServiceRequest</pd:from>
        <pd:to>LogPaymentServiceResponse</pd:to>
        <pd:xpathDescription>Otherwise</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogPaymentServiceRequest</pd:from>
        <pd:to>LrcLookupCommon</pd:to>
        <pd:xpathDescription>Valid Request?</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ValidateXmlRequest/root/pfx3:LrcLookupRequest/@version)&gt;0</pd:xpath>
    </pd:transition>
    <pd:label>
        <pd:name>Label (1)</pd:name>
        <pd:description>Input: Xml String</pd:description>
        <pd:x>105</pd:x>
        <pd:y>268</pd:y>
        <pd:width>237</pd:width>
        <pd:height>33</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-3342388</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
    <pd:label>
        <pd:name>Label (1) (1)</pd:name>
        <pd:description>Output: Xml String</pd:description>
        <pd:x>1309</pd:x>
        <pd:y>106</pd:y>
        <pd:width>237</pd:width>
        <pd:height>33</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-3342388</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
    <pd:label>
        <pd:name>Label (1) (2)</pd:name>
        <pd:description>XML Controller</pd:description>
        <pd:x>1295</pd:x>
        <pd:y>17</pd:y>
        <pd:width>237</pd:width>
        <pd:height>33</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-3342388</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>