<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx42="http://www.sterlingcommerce.com/documentation/YFS/SVCActivation/Response" xmlns:pfx21="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XMLSchemas/Verifone/CreditPreAuthorizationResponse.xsd" xmlns:pfx="http://www.tibco.com/schemas/Payment Services/CreditAuthResponseSchema.xsd" xmlns:pfx22="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XMLSchemas/Verifone/CreditPreSvcRedemptionResponse.xsd" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.wsgc.com/schemas/common/PaymentGatewaySVCStatusCodes.xsd" xmlns:ns3="http://www.wsgc.com/schemas/common/PaymentServiceProcessorReturnCodes.xsd" xmlns:ns4="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XMLSchemas/Verifone/GiftActivateResponse.xsd" xmlns:ns5="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Gift/RedemptionResponse" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns6="http://www.wsgc.com/schemas/common/PaymentServiceSVCCardClasss.xsd" xmlns:ns7="http://www.tibco.com/schemas/PaymentServices/SharedResources/PaymentServiceInternal/RECON_SVC_RELOAD.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns71="http://www.tibco.com/schemas/PaymentServices/SharedResources/PaymentServiceInternal/RECON_SVC_REDEMPTION.xsd" xmlns:ns12="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:ns13="http://paymentservice.wsgc.com/2014/PaymentServices/SharedResources/XMLSchemas/PaymentServiceInternal/svc-reconciliationrequest.xsd" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XMLSchemas/Verifone/CreditPreSvcReloadResponse.xsd" xmlns:pfx3="http://services.wsgc.com/2014/Payment" xmlns:pfx5="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Gift/ReloadResponse" xmlns:pfx6="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_SVC_TransactionSearch.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx7="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/TransactionSearchResponse" xmlns:pfx8="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_SVC_TransactionSearchRequest.xsd" xmlns:pfx9="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_SVC_TransactionSearchResponse.xsd">
    <xsd:import namespace="http://www.tibco.com/schemas/Payment Services/CreditAuthResponseSchema.xsd" schemaLocation="/CreditAuthResponse Schema.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/svc-redemption.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/svc-reload.xsd"/>
    <xsd:import namespace="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_SVC_TransactionSearchRequest.xsd" schemaLocation="/SharedResources/XMLSchemas/PaymentServiceInternal/UGP_SVC_TransactionSearchRequest.xsd"/>
    <xsd:import namespace="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_SVC_TransactionSearchResponse.xsd" schemaLocation="/SharedResources/XMLSchemas/PaymentServiceInternal/UGP_SVC_TransactionSearchResponse.xsd"/>
    <pd:name>BusinessProcesses/SvcTransactionSearch/ResponseProcessors/MapPaymentServiceResponse.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="paymentgatewayresponse" type="xsd:string"/>
                    <xsd:element ref="pfx8:UGP_SVC_TransactionSearch"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>27</pd:startX>
    <pd:startY>295</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:choose>
                <xsl:when test="string-length($MapErrorResponse/pfx9:UGP_SVC_TransactionSearch/pfx9:SvcReloadResponse/@version)>0 or string-length($MapErrorResponse/pfx9:UGP_SVC_TransactionSearch/pfx9:SvcRedemptionResponse/@version)>0">
                    <xsl:copy-of select="$MapErrorResponse/pfx9:UGP_SVC_TransactionSearch"/>
                </xsl:when>
                <xsl:when test="string-length($ValidatePaymentGatewayResponse/root/pfx9:UGP_SVC_TransactionSearch/pfx9:SvcRedemptionResponse/@version)>0 or string-length($ValidatePaymentGatewayResponse/root/pfx9:UGP_SVC_TransactionSearch/pfx9:SvcReloadResponse/@version)>0">
                    <xsl:copy-of select="$ValidatePaymentGatewayResponse/root/pfx9:UGP_SVC_TransactionSearch"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:copy-of select="$MapPaymentServiceResponse/root/pfx9:UGP_SVC_TransactionSearch"/>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="string-length($MapPaymentServiceResponse/root/Record_NotFound)>0">
                <Record_NotFound>
                    <xsl:value-of select="$MapPaymentServiceResponse/root/Record_NotFound"/>
                </Record_NotFound>
            </xsl:if>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx9:UGP_SVC_TransactionSearch" minOccurs="0"/>
                    <xsd:element name="Record_NotFound" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1036</pd:endX>
    <pd:endY>282</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <PaymentGatewayResultCodeTransition>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="ErrorType" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="ErrorDetail" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="ErrorMessage" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="ShouldNotify" type="xsd:boolean" minOccurs="0"/>
                        <xsd:element name="NotificationErrorCode" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </PaymentGatewayResultCodeTransition>
        <InterimVars>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="RCFound" type="xsd:boolean" minOccurs="0"/>
                        <xsd:element ref="ns3:PaymentServiceProcessorReturnCodes" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </InterimVars>
        <FinancialDate>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="FinancialDate" type="xsd:date"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </FinancialDate>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1414172991752</pd:targetNamespace>
    <pd:activity name="Assign-FinancialDate">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>309</pd:x>
        <pd:y>47</pd:y>
        <config>
            <variableName>FinancialDate</variableName>
        </config>
        <pd:inputBindings>
            <xsl:variable name="transactionTime" select="if(string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TRANS_DATETIME)>0)&#xA;&#x9; then tib:parse-dateTime(concat( $_globalVariables/ns:GlobalVariables/SvcTransactionSearch/PaymentGateway/DateFormat,' ', $_globalVariables/ns:GlobalVariables/SvcTransactionSearch/PaymentGateway/TimeFormat), $ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TRANS_DATETIME)&#xA;else&#xA;(&#xA; if (string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/@version) >0)&#xA;then $Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/SystemContext/TransactionTime&#xA;else&#xA;$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/SystemContext/TransactionTime&#xA;)"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="cutOffTime" select="tib:format-dateTime($_globalVariables/ns:GlobalVariables/PaymentService/Constants/DTC/DateTimeFormat, concat(  tib:add-to-date(tib:format-date($_globalVariables/ns:GlobalVariables/PaymentService/Constants/DateFormat, current-date()), 0, 0, 1) ,&quot;T&quot;,$_globalVariables/ns:GlobalVariables/PaymentService/Constants/CutOffTime/SVC))"/>
            <root>
                <FinancialDate>
                    <xsl:value-of select="if(tib:compare-dateTime($transactionTime, $cutOffTime)=-1)&#xA;then tib:format-date($_globalVariables/ns:GlobalVariables/PaymentService/Constants/DateFormat, current-date())&#xA;else tib:add-to-date(tib:format-date($_globalVariables/ns:GlobalVariables/PaymentService/Constants/DateFormat, current-date()), 0, 0, 1)"/>
                </FinancialDate>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>602</pd:x>
        <pd:y>550</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetCardClass">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>544</pd:x>
        <pd:y>46</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceSVCCardClasss.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetCLEParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>161</pd:x>
        <pd:y>296</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/SvcTransactionSearch/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogRequestValidationExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1037</pd:x>
        <pd:y>552</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns12:ExceptionHandlerRequest>
                <ns12:envCode>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ENV"/>
                </ns12:envCode>
                <ns12:appCode>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CLE/AppCode"/>
                </ns12:appCode>
                <ns12:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns12:interfaceCode>
                <ns12:hostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </ns12:hostName>
                <ns12:timeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns12:timeStamp>
                <ns12:message>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </ns12:message>
                <ns12:payload>
                    <xsl:value-of select="tib:render-xml($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest)"/>
                </ns12:payload>
                <ns12:ErrorLevel>
                    <ns12:errorCode>
                        <xsl:value-of select="concat($MapErrorResponse/pfx9:UGP_SVC_TransactionSearch/pfx9:SvcRedemptionResponse/Error/Type, $_globalVariables/ns:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$MapErrorResponse/pfx9:UGP_SVC_TransactionSearch/pfx9:SvcReloadResponse/Error/Detail[1])"/>
                    </ns12:errorCode>
                </ns12:ErrorLevel>
                <ns12:TransactionDetails>
                    <ns12:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns12:transactionDomain>
                    <ns12:transactionType>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/SvcTransactionSearch/CLE/TransactionType"/>
                    </ns12:transactionType>
                    <ns12:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns12:transactionID>
                </ns12:TransactionDetails>
                <xsl:for-each select="$_error/ns1:ErrorReport">
                    <ns12:ErrorReportType>
                        <ns12:stackTrace>
                            <xsl:value-of select="StackTrace"/>
                        </ns12:stackTrace>
                        <ns12:msg>
                            <xsl:value-of select="Msg"/>
                        </ns12:msg>
                        <ns12:fullClass>
                            <xsl:value-of select="FullClass"/>
                        </ns12:fullClass>
                        <ns12:class>
                            <xsl:value-of select="Class"/>
                        </ns12:class>
                        <ns12:processStack>
                            <xsl:value-of select="ProcessStack"/>
                        </ns12:processStack>
                        <xsl:if test="MsgCode">
                            <ns12:msgCode>
                                <xsl:value-of select="MsgCode"/>
                            </ns12:msgCode>
                        </xsl:if>
                        <ns12:data>
                            <xsl:value-of select="Data/*"/>
                        </ns12:data>
                    </ns12:ErrorReportType>
                </xsl:for-each>
            </ns12:ExceptionHandlerRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapErrorResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>829</pd:x>
        <pd:y>550</pd:y>
        <config>
            <element ref="pfx9:UGP_SVC_TransactionSearch"/>
        </config>
        <pd:inputBindings>
            <pfx9:UGP_SVC_TransactionSearch>
                <xsl:choose>
                    <xsl:when test="string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/@version)>0">
                        <pfx9:SvcRedemptionResponse>
                            <xsl:attribute name="version">
                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/SvcRedemption/MessageVersion"/>
                            </xsl:attribute>
                            <SystemContext>
                                <EnvironmentIdentifier>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                                </EnvironmentIdentifier>
                                <RegionIdentifier>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                                </RegionIdentifier>
                                <SourceSystemIdentifier>
                                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                                </SourceSystemIdentifier>
                                <xsl:choose>
                                    <xsl:when test="string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/SystemContext/TransactionId)>0">
                                        <TransactionId>
                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/SvcRedemption/Constants/TransactionIdPrefix,$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/SystemContext/TransactionId)"/>
                                        </TransactionId>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <TransactionId>
                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/SvcRedemption/Constants/TransactionIdPrefix,concat(tib:format-dateTime($_globalVariables/ns:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns1:ProcessContext/ProcessId,  $_globalVariables/ns:GlobalVariables/ENV   , BW:getHostName()))"/>
                                        </TransactionId>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <TransactionTime>
                                    <xsl:value-of select="current-dateTime()"/>
                                </TransactionTime>
                            </SystemContext>
                            <xsl:copy-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/PaymentContext"/>
                            <xsl:choose>
                                <xsl:when test="$_error/ns1:ErrorReport/Class=$_globalVariables/ns:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                                    <Error>
                                        <Type>
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                                        </Type>
                                        <Detail>
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                                        </Detail>
                                        <ErrorMessage>
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                                        </ErrorMessage>
                                    </Error>
                                </xsl:when>
                                <xsl:otherwise>
                                    <Error>
                                        <Type>
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                                        </Type>
                                        <Detail>
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                                        </Detail>
                                        <ErrorMessage>
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/ErrorMessage"/>
                                        </ErrorMessage>
                                    </Error>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx9:SvcRedemptionResponse>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx9:SvcReloadResponse>
                            <xsl:attribute name="version">
                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/SvcReload/MessageVersion"/>
                            </xsl:attribute>
                            <SystemContext>
                                <EnvironmentIdentifier>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                                </EnvironmentIdentifier>
                                <RegionIdentifier>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                                </RegionIdentifier>
                                <SourceSystemIdentifier>
                                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                                </SourceSystemIdentifier>
                                <xsl:choose>
                                    <xsl:when test="string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/SystemContext/TransactionId)>0">
                                        <TransactionId>
                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/SvcReload/Constants/TransactionIdPrefix,$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/SystemContext/TransactionId)"/>
                                        </TransactionId>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <TransactionId>
                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/SvcReload/Constants/TransactionIdPrefix,concat(tib:format-dateTime($_globalVariables/ns:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns1:ProcessContext/ProcessId,  $_globalVariables/ns:GlobalVariables/ENV   , BW:getHostName()))"/>
                                        </TransactionId>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <TransactionTime>
                                    <xsl:value-of select="current-dateTime()"/>
                                </TransactionTime>
                            </SystemContext>
                            <xsl:copy-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/PaymentContext"/>
                            <xsl:choose>
                                <xsl:when test="$_error/ns1:ErrorReport/Class=$_globalVariables/ns:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                                    <Error>
                                        <Type>
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                                        </Type>
                                        <Detail>
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                                        </Detail>
                                        <ErrorMessage>
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                                        </ErrorMessage>
                                    </Error>
                                </xsl:when>
                                <xsl:otherwise>
                                    <Error>
                                        <Type>
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                                        </Type>
                                        <Detail>
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                                        </Detail>
                                        <ErrorMessage>
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/ErrorMessage"/>
                                        </ErrorMessage>
                                    </Error>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx9:SvcReloadResponse>
                    </xsl:otherwise>
                </xsl:choose>
            </pfx9:UGP_SVC_TransactionSearch>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapPaymentServiceResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>862</pd:x>
        <pd:y>283</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Record_NotFound" type="xsd:string" minOccurs="0"/>
                            <xsd:element ref="pfx9:UGP_SVC_TransactionSearch" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1])=0 and string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RESULT_CODE)=0">
                    <Record_NotFound>
                        <xsl:value-of select="&quot;true&quot;"/>
                    </Record_NotFound>
                </xsl:if>
                <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1])>0&#xA;or &#xA;string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RESULT_CODE)>0">
                    <xsl:choose>
                        <xsl:when test="string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/@version)>0">
                            <xsl:choose>
                                <xsl:when test="string-length($PaymentGatewayResultCodeTransition/root/ErrorType) >0">
                                    <pfx9:UGP_SVC_TransactionSearch>
                                        <pfx9:SvcRedemptionResponse>
                                            <xsl:attribute name="version">
                                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/SvcRedemption/MessageVersion"/>
                                            </xsl:attribute>
                                            <SystemContext>
                                                <EnvironmentIdentifier>
                                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                                                </EnvironmentIdentifier>
                                                <RegionIdentifier>
                                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                                                </RegionIdentifier>
                                                <SourceSystemIdentifier>
                                                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                                                </SourceSystemIdentifier>
                                                <xsl:choose>
                                                    <xsl:when test="string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/SystemContext/TransactionId)>0">
                                                        <TransactionId>
                                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/SvcRedemption/Constants/TransactionIdPrefix,$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/SystemContext/TransactionId)"/>
                                                        </TransactionId>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <TransactionId>
                                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/SvcRedemption/Constants/TransactionIdPrefix,concat(tib:format-dateTime($_globalVariables/ns:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns1:ProcessContext/ProcessId,  $_globalVariables/ns:GlobalVariables/ENV   , BW:getHostName()))"/>
                                                        </TransactionId>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <TransactionTime>
                                                    <xsl:value-of select="current-dateTime()"/>
                                                </TransactionTime>
                                            </SystemContext>
                                            <xsl:copy-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/PaymentContext"/>
                                            <Error>
                                                <Type>
                                                    <xsl:value-of select="$PaymentGatewayResultCodeTransition/root/ErrorType"/>
                                                </Type>
                                                <xsl:if test="$PaymentGatewayResultCodeTransition/root/ErrorDetail">
                                                    <Detail>
                                                        <xsl:value-of select="$PaymentGatewayResultCodeTransition/root/ErrorDetail"/>
                                                    </Detail>
                                                </xsl:if>
                                                <ErrorMessage>
                                                    <xsl:value-of select="$PaymentGatewayResultCodeTransition/root/ErrorMessage"/>
                                                </ErrorMessage>
                                            </Error>
                                        </pfx9:SvcRedemptionResponse>
                                    </pfx9:UGP_SVC_TransactionSearch>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx9:UGP_SVC_TransactionSearch>
                                        <pfx9:SvcRedemptionResponse>
                                            <xsl:attribute name="version">
                                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/SvcRedemption/MessageVersion"/>
                                            </xsl:attribute>
                                            <SystemContext>
                                                <EnvironmentIdentifier>
                                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                                                </EnvironmentIdentifier>
                                                <RegionIdentifier>
                                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                                                </RegionIdentifier>
                                                <SourceSystemIdentifier>
                                                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                                                </SourceSystemIdentifier>
                                                <xsl:choose>
                                                    <xsl:when test="string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/SystemContext/TransactionId)>0">
                                                        <TransactionId>
                                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/SvcRedemption/Constants/TransactionIdPrefix,$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/SystemContext/TransactionId)"/>
                                                        </TransactionId>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <TransactionId>
                                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/SvcRedemption/Constants/TransactionIdPrefix,concat(tib:format-dateTime($_globalVariables/ns:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns1:ProcessContext/ProcessId,  $_globalVariables/ns:GlobalVariables/ENV   , BW:getHostName()))"/>
                                                        </TransactionId>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <TransactionTime>
                                                    <xsl:value-of select="current-dateTime()"/>
                                                </TransactionTime>
                                            </SystemContext>
                                            <xsl:copy-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/PaymentContext"/>
                                            <OrderContext>
                                                <xsl:attribute name="omsOrderId">
                                                    <xsl:value-of select="if(string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/INVOICE)>0)&#xA;then&#xA;$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/INVOICE&#xA;else&#xA;$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/OrderContext/@omsOrderId"/>
                                                </xsl:attribute>
                                                <OrderTime>
                                                    <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/OrderContext/OrderTime"/>
                                                </OrderTime>
                                            </OrderContext>
                                            <ConsumerTransactionId>
                                                <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/ConsumerTransactionId"/>
                                            </ConsumerTransactionId>
                                            <ConfirmationId>
                                                <xsl:value-of select="if((string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TROUTD))>0)&#xA; then&#xA;$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TROUTD&#xA;else&#xA;&quot;&quot;"/>
                                            </ConfirmationId>
                                            <CurrencyCode>
                                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/CurrencyCode"/>
                                            </CurrencyCode>
                                            <RequestedAmount>
                                                <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/RedemptionAmount"/>
                                            </RequestedAmount>
                                            <RedeemedAmount>
                                                <xsl:value-of select="if((string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/AUTH_AMOUNT))>0)&#xA; then&#xA; number($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/AUTH_AMOUNT)&#xA;else&#xA;0.0"/>
                                            </RedeemedAmount>
                                            <NewBalanceAmount>
                                                <xsl:value-of select="if((string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/AMOUNT_BALANCE))>0)&#xA; then&#xA; number($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/AMOUNT_BALANCE)&#xA;else&#xA;0.0"/>
                                            </NewBalanceAmount>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TRANS_DATETIME) > 0">
                                                <xsl:variable name="transdate" select="tib:tokenize( $ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TRANS_DATETIME,' ')[1]"/>
                                                <xsl:variable name="transtime" select="tib:tokenize( $ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TRANS_DATETIME,' ')[2]"/>
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/TRANSACTION_DATE_TIME"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="tib:create-dateTime(&#xA;tib:tokenize($transdate,$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TransactionDateSeparator)[1],&#xA;tib:tokenize($transdate,$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TransactionDateSeparator)[2],&#xA;tib:tokenize($transdate,$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TransactionDateSeparator)[3],&#xA;tib:tokenize($transtime,$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TransactionTimeSeparator)[1], &#xA;tib:tokenize($transtime,$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TransactionTimeSeparator)[2],&#xA;tib:tokenize($transtime,$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TransactionTimeSeparator)[3])"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RESPONSE_TEXT)>0">
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/RESPONSE_TXT"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RESPONSE_TEXT"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/ACCOUNT)>0 and &#xA;string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/SITE)>0 and &#xA;string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/TERM)>0">
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/CLIENTID"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="concat($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/ACCOUNT,$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/SITE,$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/TERM)"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/INVOICE)>0">
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/INVOICE"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/INVOICE"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TRANS_SEQ_NUM)>0">
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/TRANSACTION_SEQ_NUM"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TRANS_SEQ_NUM"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/INTRN_SEQ_NUM)>0">
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/INTERNAL_SEQ_NUM"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/INTRN_SEQ_NUM"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <xsl:choose>
                                                <xsl:when test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CTROUTD)>0">
                                                    <TransactionMetadata>
                                                        <xsl:attribute name="type">
                                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/CTROUTD"/>
                                                        </xsl:attribute>
                                                        <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CTROUTD"/>
                                                    </TransactionMetadata>
                                                </xsl:when>
                                            </xsl:choose>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CARD_CLASS)>0">
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/CARD_CLASS"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CARD_CLASS"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <FinancialDate>
                                                <xsl:value-of select="$FinancialDate/root/FinancialDate"/>
                                            </FinancialDate>
                                            <Tender>
                                                <Type>
                                                    <Code>
                                                        <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/Tender/Type/Code"/>
                                                    </Code>
                                                    <xsl:if test="$GetCardClass/ns6:PaymentServiceSVCCardClasss/ns6:PaymentServiceSVCCardClass[  ns6:CardClass = $ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CARD_CLASS       ]/ns6:SVCSubType">
                                                        <SubCode>
                                                            <xsl:value-of select="$GetCardClass/ns6:PaymentServiceSVCCardClasss/ns6:PaymentServiceSVCCardClass[  ns6:CardClass = $ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CARD_CLASS       ]/ns6:SVCSubType"/>
                                                        </SubCode>
                                                    </xsl:if>
                                                    <xsl:copy-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/Tender/Type/Tag"/>
                                                </Type>
                                                <AccountNumber>
                                                    <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/Tender/AccountNumber"/>
                                                </AccountNumber>
                                            </Tender>
                                        </pfx9:SvcRedemptionResponse>
                                    </pfx9:UGP_SVC_TransactionSearch>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test="string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/@version)>0">
                            <xsl:choose>
                                <xsl:when test="string-length($PaymentGatewayResultCodeTransition/root/ErrorType) >0">
                                    <pfx9:UGP_SVC_TransactionSearch>
                                        <pfx9:SvcReloadResponse>
                                            <xsl:attribute name="version">
                                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/SvcReload/MessageVersion"/>
                                            </xsl:attribute>
                                            <SystemContext>
                                                <EnvironmentIdentifier>
                                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                                                </EnvironmentIdentifier>
                                                <RegionIdentifier>
                                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                                                </RegionIdentifier>
                                                <SourceSystemIdentifier>
                                                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                                                </SourceSystemIdentifier>
                                                <xsl:choose>
                                                    <xsl:when test="string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/SystemContext/TransactionId)>0">
                                                        <TransactionId>
                                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/SvcReload/Constants/TransactionIdPrefix,$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/SystemContext/TransactionId)"/>
                                                        </TransactionId>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <TransactionId>
                                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/SvcReload/Constants/TransactionIdPrefix,concat(tib:format-dateTime($_globalVariables/ns:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns1:ProcessContext/ProcessId,  $_globalVariables/ns:GlobalVariables/ENV   , BW:getHostName()))"/>
                                                        </TransactionId>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <TransactionTime>
                                                    <xsl:value-of select="current-dateTime()"/>
                                                </TransactionTime>
                                            </SystemContext>
                                            <xsl:copy-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/PaymentContext"/>
                                            <Error>
                                                <Type>
                                                    <xsl:value-of select="$PaymentGatewayResultCodeTransition/root/ErrorType"/>
                                                </Type>
                                                <xsl:if test="$PaymentGatewayResultCodeTransition/root/ErrorDetail">
                                                    <Detail>
                                                        <xsl:value-of select="$PaymentGatewayResultCodeTransition/root/ErrorDetail"/>
                                                    </Detail>
                                                </xsl:if>
                                                <ErrorMessage>
                                                    <xsl:value-of select="$PaymentGatewayResultCodeTransition/root/ErrorMessage"/>
                                                </ErrorMessage>
                                            </Error>
                                        </pfx9:SvcReloadResponse>
                                    </pfx9:UGP_SVC_TransactionSearch>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx9:UGP_SVC_TransactionSearch>
                                        <pfx9:SvcReloadResponse>
                                            <xsl:attribute name="version">
                                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/SvcReload/MessageVersion"/>
                                            </xsl:attribute>
                                            <SystemContext>
                                                <EnvironmentIdentifier>
                                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                                                </EnvironmentIdentifier>
                                                <RegionIdentifier>
                                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                                                </RegionIdentifier>
                                                <SourceSystemIdentifier>
                                                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                                                </SourceSystemIdentifier>
                                                <xsl:choose>
                                                    <xsl:when test="string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/SystemContext/TransactionId)>0">
                                                        <TransactionId>
                                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/SvcReload/Constants/TransactionIdPrefix,$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/SystemContext/TransactionId)"/>
                                                        </TransactionId>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <TransactionId>
                                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/SvcReload/Constants/TransactionIdPrefix,concat(tib:format-dateTime($_globalVariables/ns:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns1:ProcessContext/ProcessId,  $_globalVariables/ns:GlobalVariables/ENV   , BW:getHostName()))"/>
                                                        </TransactionId>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <TransactionTime>
                                                    <xsl:value-of select="current-dateTime()"/>
                                                </TransactionTime>
                                            </SystemContext>
                                            <xsl:copy-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/PaymentContext"/>
                                            <OrderContext>
                                                <xsl:attribute name="omsOrderId">
                                                    <xsl:value-of select="if(string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/SEARCHFIELDS/INVOICE)>0)&#xA;then&#xA;$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/SEARCHFIELDS/INVOICE&#xA;else&#xA;$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/OrderContext/@omsOrderId"/>
                                                </xsl:attribute>
                                                <OrderTime>
                                                    <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/OrderContext/OrderTime"/>
                                                </OrderTime>
                                            </OrderContext>
                                            <ConsumerTransactionId>
                                                <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/ConsumerTransactionId"/>
                                            </ConsumerTransactionId>
                                            <ConfirmationId>
                                                <xsl:value-of select="if((string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TROUTD))>0)&#xA; then&#xA;$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TROUTD&#xA;else&#xA;&quot;&quot;"/>
                                            </ConfirmationId>
                                            <IsPinVerified>
                                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/SvcReload/BWTransformation/BooleanTrue"/>
                                            </IsPinVerified>
                                            <CurrencyCode>
                                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/CurrencyCode"/>
                                            </CurrencyCode>
                                            <ReloadedAmount>
                                                <xsl:value-of select="if((string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/AUTH_AMOUNT))>0)&#xA; then&#xA; number($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/AUTH_AMOUNT)&#xA;else&#xA;0.0"/>
                                            </ReloadedAmount>
                                            <NewBalanceAmount>
                                                <xsl:value-of select="if((string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/AMOUNT_BALANCE))>0)&#xA; then&#xA; number($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/AMOUNT_BALANCE)&#xA;else&#xA;0.0"/>
                                            </NewBalanceAmount>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TRANS_DATETIME) > 0">
                                                <xsl:variable name="transdate" select="tib:tokenize( $ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TRANS_DATETIME,' ')[1]"/>
                                                <xsl:variable name="transtime" select="tib:tokenize( $ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TRANS_DATETIME,' ')[2]"/>
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/TRANSACTION_DATE_TIME"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="tib:create-dateTime(&#xA;tib:tokenize($transdate,$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TransactionDateSeparator)[1],&#xA;tib:tokenize($transdate,$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TransactionDateSeparator)[2],&#xA;tib:tokenize($transdate,$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TransactionDateSeparator)[3],&#xA;tib:tokenize($transtime,$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TransactionTimeSeparator)[1], &#xA;tib:tokenize($transtime,$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TransactionTimeSeparator)[2],&#xA;tib:tokenize($transtime,$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/TransactionTimeSeparator)[3])"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RESPONSE_TEXT)>0">
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/RESPONSE_TXT"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RESPONSE_TEXT"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/ACCOUNT)>0 and&#xA;string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/SITE)>0 and&#xA;string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/TERM)>0">
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/CLIENTID"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="concat($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/ACCOUNT,$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/SITE,$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/TERM)"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/SEARCHFIELDS/INVOICE)>0">
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/INVOICE"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/SEARCHFIELDS/INVOICE"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TRANS_SEQ_NUM)>0">
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/TRANSACTION_SEQ_NUM"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TRANS_SEQ_NUM"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/INTRN_SEQ_NUM)>0">
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/INTERNAL_SEQ_NUM"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/INTRN_SEQ_NUM"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <xsl:choose>
                                                <xsl:when test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CTROUTD)>0">
                                                    <TransactionMetadata>
                                                        <xsl:attribute name="type">
                                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/CTROUTD"/>
                                                        </xsl:attribute>
                                                        <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CTROUTD"/>
                                                    </TransactionMetadata>
                                                </xsl:when>
                                            </xsl:choose>
                                            <xsl:choose>
                                                <xsl:when test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TROUTD)>0">
                                                    <TransactionMetadata>
                                                        <xsl:attribute name="type">
                                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/TROUTD"/>
                                                        </xsl:attribute>
                                                        <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/TROUTD"/>
                                                    </TransactionMetadata>
                                                </xsl:when>
                                            </xsl:choose>
                                            <xsl:if test="string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CARD_CLASS)>0">
                                                <TransactionMetadata>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/Constants/TransactionMetaData/CARD_CLASS"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CARD_CLASS"/>
                                                </TransactionMetadata>
                                            </xsl:if>
                                            <FinancialDate>
                                                <xsl:value-of select="$FinancialDate/root/FinancialDate"/>
                                            </FinancialDate>
                                            <Tender>
                                                <Type>
                                                    <Code>
                                                        <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/Tender/Type/Code"/>
                                                    </Code>
                                                    <xsl:variable name="var" select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CARD_CLASS"/>
                                                    <SubCode>
                                                        <xsl:value-of select="$GetCardClass/ns6:PaymentServiceSVCCardClasss/ns6:PaymentServiceSVCCardClass[  ns6:CardClass = $var       ]/ns6:SVCSubType"/>
                                                    </SubCode>
                                                    <xsl:copy-of select="$ValidatePaymentGatewayResponse/root/pfx9:UGP_SVC_TransactionSearch/pfx9:SvcReloadResponse/Tender/Type/Tag"/>
                                                </Type>
                                                <AccountNumber>
                                                    <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/Tender/AccountNumber"/>
                                                </AccountNumber>
                                            </Tender>
                                        </pfx9:SvcReloadResponse>
                                    </pfx9:UGP_SVC_TransactionSearch>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:copy-of select="$ValidatePaymentGatewayResponse/root/pfx9:UGP_SVC_TransactionSearch"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ValidatePaymentGatewayResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>306</pd:x>
        <pd:y>295</pd:y>
        <config>
            <processName>/BusinessProcesses/SvcTransactionSearch/ResponseProcessors/ValidatePaymentGatewayResponse.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <paymentgatewayresponse>
                    <xsl:value-of select="$Start/root/paymentgatewayresponse"/>
                </paymentgatewayresponse>
                <xsl:choose>
                    <xsl:when test="string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/@version)>0">
                        <transactionid>
                            <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/SystemContext/TransactionId"/>
                        </transactionid>
                    </xsl:when>
                    <xsl:otherwise>
                        <transactionid>
                            <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/SystemContext/TransactionId"/>
                        </transactionid>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:copy-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch"/>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendReconciliationMessage">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>857</pd:x>
        <pd:y>46</pd:y>
        <config>
            <processName>/BusinessProcesses/Reconciliation/SVC/SendSVCReconciliationMessage.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/@version)>0">
                        <ns13:SVCReconciliationRequest>
                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/SystemContext">
                                <ns13:SystemContext>
                                    <EnvironmentIdentifier>
                                        <xsl:value-of select="EnvironmentIdentifier"/>
                                    </EnvironmentIdentifier>
                                    <RegionIdentifier>
                                        <xsl:value-of select="RegionIdentifier"/>
                                    </RegionIdentifier>
                                    <SourceSystemIdentifier>
                                        <xsl:value-of select="SourceSystemIdentifier"/>
                                    </SourceSystemIdentifier>
                                    <TransactionId>
                                        <xsl:value-of select="TransactionId"/>
                                    </TransactionId>
                                    <TransactionTime>
                                        <xsl:value-of select="TransactionTime"/>
                                    </TransactionTime>
                                    <xsl:if test="RoutingSpecification">
                                        <RoutingSpecification>
                                            <xsl:value-of select="RoutingSpecification"/>
                                        </RoutingSpecification>
                                    </xsl:if>
                                    <xsl:if test="TestingMode">
                                        <TestingMode>
                                            <xsl:value-of select="TestingMode"/>
                                        </TestingMode>
                                    </xsl:if>
                                </ns13:SystemContext>
                            </xsl:for-each>
                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/PaymentContext">
                                <ns13:PaymentContext>
                                    <Concept>
                                        <xsl:value-of select="Concept"/>
                                    </Concept>
                                    <Channel>
                                        <xsl:value-of select="Channel"/>
                                    </Channel>
                                    <xsl:choose>
                                        <xsl:when test="string-length(Store)>0">
                                            <xsl:for-each select="Store">
                                                <Store>
                                                    <xsl:if test="StoreId">
                                                        <StoreId>
                                                            <xsl:value-of select="StoreId"/>
                                                        </StoreId>
                                                    </xsl:if>
                                                    <RegisterId>
                                                        <xsl:value-of select="RegisterId"/>
                                                    </RegisterId>
                                                    <xsl:if test="PaymentTerminalId">
                                                        <PaymentTerminalId>
                                                            <xsl:value-of select="PaymentTerminalId"/>
                                                        </PaymentTerminalId>
                                                    </xsl:if>
                                                    <RegisterTransactionId>
                                                        <xsl:value-of select="RegisterTransactionId"/>
                                                    </RegisterTransactionId>
                                                    <xsl:if test="UserId">
                                                        <UserId>
                                                            <xsl:value-of select="UserId"/>
                                                        </UserId>
                                                    </xsl:if>
                                                    <xsl:if test="PosUserId">
                                                        <PosUserId>
                                                            <xsl:value-of select="PosUserId"/>
                                                        </PosUserId>
                                                    </xsl:if>
                                                    <xsl:if test="AssociateId">
                                                        <AssociateId>
                                                            <xsl:value-of select="AssociateId"/>
                                                        </AssociateId>
                                                    </xsl:if>
                                                </Store>
                                            </xsl:for-each>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:for-each select="CareCenter">
                                                <CareCenter>
                                                    <xsl:if test="UserId">
                                                        <UserId>
                                                            <xsl:value-of select="UserId"/>
                                                        </UserId>
                                                    </xsl:if>
                                                    <xsl:if test="AssociateId">
                                                        <AssociateId>
                                                            <xsl:value-of select="AssociateId"/>
                                                        </AssociateId>
                                                    </xsl:if>
                                                </CareCenter>
                                            </xsl:for-each>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </ns13:PaymentContext>
                            </xsl:for-each>
                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/OrderContext">
                                <ns13:OrderContext>
                                    <xsl:attribute name="omsOrderId">
                                        <xsl:value-of select="@omsOrderId"/>
                                    </xsl:attribute>
                                    <OrderTime>
                                        <xsl:value-of select="OrderTime"/>
                                    </OrderTime>
                                </ns13:OrderContext>
                            </xsl:for-each>
                            <ns13:TransactionType>
                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/SvcRedemption/Constants/TransactionIdPrefix"/>
                            </ns13:TransactionType>
                            <ns13:TransactionDateTime>
                                <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/SystemContext/TransactionTime"/>
                            </ns13:TransactionDateTime>
                            <ns13:ConsumerTransactionId>
                                <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/ConsumerTransactionId"/>
                            </ns13:ConsumerTransactionId>
                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/Tender">
                                <ns13:Tender>
                                    <xsl:for-each select="Type">
                                        <Type>
                                            <Code>
                                                <xsl:value-of select="Code"/>
                                            </Code>
                                            <xsl:if test="SubCode">
                                                <SubCode>
                                                    <xsl:value-of select="SubCode"/>
                                                </SubCode>
                                            </xsl:if>
                                            <xsl:for-each select="Tag">
                                                <Tag>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="@type"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="."/>
                                                </Tag>
                                            </xsl:for-each>
                                        </Type>
                                    </xsl:for-each>
                                    <AccountNumber>
                                        <xsl:value-of select="AccountNumber"/>
                                    </AccountNumber>
                                </ns13:Tender>
                            </xsl:for-each>
                            <ns13:CardClass>
                                <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CARD_CLASS"/>
                            </ns13:CardClass>
                            <ns13:CurrencyCode>
                                <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcRedemptionRequest/CurrencyCode"/>
                            </ns13:CurrencyCode>
                            <ns13:TransactionAmount>
                                <xsl:value-of select="if((string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/AUTH_AMOUNT))>0)&#xA; then&#xA; number($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/AUTH_AMOUNT)&#xA;else&#xA;0.0"/>
                            </ns13:TransactionAmount>
                            <ns13:FinancialDate>
                                <xsl:value-of select="$FinancialDate/root/FinancialDate"/>
                            </ns13:FinancialDate>
                        </ns13:SVCReconciliationRequest>
                    </xsl:when>
                    <xsl:otherwise test="string-length($Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/@version)>0">
                        <ns13:SVCReconciliationRequest>
                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/SystemContext">
                                <ns13:SystemContext>
                                    <EnvironmentIdentifier>
                                        <xsl:value-of select="EnvironmentIdentifier"/>
                                    </EnvironmentIdentifier>
                                    <RegionIdentifier>
                                        <xsl:value-of select="RegionIdentifier"/>
                                    </RegionIdentifier>
                                    <SourceSystemIdentifier>
                                        <xsl:value-of select="SourceSystemIdentifier"/>
                                    </SourceSystemIdentifier>
                                    <TransactionId>
                                        <xsl:value-of select="TransactionId"/>
                                    </TransactionId>
                                    <TransactionTime>
                                        <xsl:value-of select="TransactionTime"/>
                                    </TransactionTime>
                                    <xsl:if test="RoutingSpecification">
                                        <RoutingSpecification>
                                            <xsl:value-of select="RoutingSpecification"/>
                                        </RoutingSpecification>
                                    </xsl:if>
                                    <xsl:if test="TestingMode">
                                        <TestingMode>
                                            <xsl:value-of select="TestingMode"/>
                                        </TestingMode>
                                    </xsl:if>
                                </ns13:SystemContext>
                            </xsl:for-each>
                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/PaymentContext">
                                <ns13:PaymentContext>
                                    <Concept>
                                        <xsl:value-of select="Concept"/>
                                    </Concept>
                                    <Channel>
                                        <xsl:value-of select="Channel"/>
                                    </Channel>
                                    <xsl:choose>
                                        <xsl:when test="string-length(Store)>0">
                                            <xsl:for-each select="Store">
                                                <Store>
                                                    <xsl:if test="StoreId">
                                                        <StoreId>
                                                            <xsl:value-of select="StoreId"/>
                                                        </StoreId>
                                                    </xsl:if>
                                                    <RegisterId>
                                                        <xsl:value-of select="RegisterId"/>
                                                    </RegisterId>
                                                    <xsl:if test="PaymentTerminalId">
                                                        <PaymentTerminalId>
                                                            <xsl:value-of select="PaymentTerminalId"/>
                                                        </PaymentTerminalId>
                                                    </xsl:if>
                                                    <RegisterTransactionId>
                                                        <xsl:value-of select="RegisterTransactionId"/>
                                                    </RegisterTransactionId>
                                                    <xsl:if test="UserId">
                                                        <UserId>
                                                            <xsl:value-of select="UserId"/>
                                                        </UserId>
                                                    </xsl:if>
                                                    <xsl:if test="PosUserId">
                                                        <PosUserId>
                                                            <xsl:value-of select="PosUserId"/>
                                                        </PosUserId>
                                                    </xsl:if>
                                                    <xsl:if test="AssociateId">
                                                        <AssociateId>
                                                            <xsl:value-of select="AssociateId"/>
                                                        </AssociateId>
                                                    </xsl:if>
                                                </Store>
                                            </xsl:for-each>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:for-each select="CareCenter">
                                                <CareCenter>
                                                    <xsl:if test="UserId">
                                                        <UserId>
                                                            <xsl:value-of select="UserId"/>
                                                        </UserId>
                                                    </xsl:if>
                                                    <xsl:if test="AssociateId">
                                                        <AssociateId>
                                                            <xsl:value-of select="AssociateId"/>
                                                        </AssociateId>
                                                    </xsl:if>
                                                </CareCenter>
                                            </xsl:for-each>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </ns13:PaymentContext>
                            </xsl:for-each>
                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/OrderContext">
                                <ns13:OrderContext>
                                    <xsl:attribute name="omsOrderId">
                                        <xsl:value-of select="@omsOrderId"/>
                                    </xsl:attribute>
                                    <OrderTime>
                                        <xsl:value-of select="OrderTime"/>
                                    </OrderTime>
                                </ns13:OrderContext>
                            </xsl:for-each>
                            <ns13:TransactionType>
                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/SvcReload/Constants/TransactionIdPrefix"/>
                            </ns13:TransactionType>
                            <ns13:TransactionDateTime>
                                <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/SystemContext/TransactionTime"/>
                            </ns13:TransactionDateTime>
                            <ns13:ConsumerTransactionId>
                                <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/ConsumerTransactionId"/>
                            </ns13:ConsumerTransactionId>
                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/Tender">
                                <ns13:Tender>
                                    <xsl:for-each select="Type">
                                        <Type>
                                            <Code>
                                                <xsl:value-of select="Code"/>
                                            </Code>
                                            <xsl:if test="SubCode">
                                                <SubCode>
                                                    <xsl:value-of select="SubCode"/>
                                                </SubCode>
                                            </xsl:if>
                                            <xsl:for-each select="Tag">
                                                <Tag>
                                                    <xsl:attribute name="type">
                                                        <xsl:value-of select="@type"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="."/>
                                                </Tag>
                                            </xsl:for-each>
                                        </Type>
                                    </xsl:for-each>
                                    <AccountNumber>
                                        <xsl:value-of select="AccountNumber"/>
                                    </AccountNumber>
                                </ns13:Tender>
                            </xsl:for-each>
                            <ns13:CardClass>
                                <xsl:value-of select="$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/CARD_CLASS"/>
                            </ns13:CardClass>
                            <ns13:CurrencyCode>
                                <xsl:value-of select="$Start/root/pfx8:UGP_SVC_TransactionSearch/pfx8:SvcReloadRequest/CurrencyCode"/>
                            </ns13:CurrencyCode>
                            <ns13:TransactionAmount>
                                <xsl:value-of select="if((string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/AUTH_AMOUNT))>0)&#xA; then&#xA; number($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1]/AUTH_AMOUNT)&#xA;else&#xA;0.0"/>
                            </ns13:TransactionAmount>
                            <ns13:FinancialDate>
                                <xsl:value-of select="$FinancialDate/root/FinancialDate"/>
                            </ns13:FinancialDate>
                        </ns13:SVCReconciliationRequest>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LookupResultCode">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>439</pd:x>
        <pd:y>155</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceVerifoneGatewayResultCodes.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="AssignResultCode">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>443</pd:x>
        <pd:y>283</pd:y>
        <config>
            <variableName>InterimVars</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <RCFound>
                    <xsl:value-of select="string-length($LookupResultCode/ns3:PaymentServiceProcessorReturnCodes/ns3:PaymentServiceProcessorReturnCode[$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RESULT_CODE  =  ns3:ProcessorReturnCode][ns3:WSIMessage/@operationScope=$_globalVariables/ns:GlobalVariables/SvcTransactionSearch/BWTransformation/OperationScope|$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/AllOperationScope]/ns3:WSIMessage)>0"/>
                </RCFound>
                <ns3:PaymentServiceProcessorReturnCodes>
                    <xsl:for-each select="$LookupResultCode/ns3:PaymentServiceProcessorReturnCodes/ns3:PaymentServiceProcessorReturnCode[$ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RESULT_CODE  =  ns3:ProcessorReturnCode][ns3:WSIMessage/@operationScope=$_globalVariables/ns:GlobalVariables/SvcTransactionSearch/BWTransformation/OperationScope|$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/AllOperationScope]">
                        <ns3:PaymentServiceProcessorReturnCode>
                            <ns3:ProcessorReturnCode>
                                <xsl:value-of select="ns3:ProcessorReturnCode"/>
                            </ns3:ProcessorReturnCode>
                            <ns3:Description>
                                <xsl:value-of select="ns3:Description"/>
                            </ns3:Description>
                            <xsl:for-each select="ns3:WSIMessage">
                                <ns3:WSIMessage>
                                    <xsl:attribute name="operationScope">
                                        <xsl:value-of select="@operationScope"/>
                                    </xsl:attribute>
                                    <xsl:if test="@errorType">
                                        <xsl:attribute name="errorType">
                                            <xsl:value-of select="@errorType"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="@shouldNotify">
                                        <xsl:attribute name="shouldNotify">
                                            <xsl:value-of select="@shouldNotify"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="@provideTokenOnError">
                                        <xsl:attribute name="provideTokenOnError">
                                            <xsl:value-of select="@provideTokenOnError"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:value-of select="."/>
                                </ns3:WSIMessage>
                            </xsl:for-each>
                        </ns3:PaymentServiceProcessorReturnCode>
                    </xsl:for-each>
                </ns3:PaymentServiceProcessorReturnCodes>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignGenericError">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>626</pd:x>
        <pd:y>162</pd:y>
        <config>
            <variableName>PaymentGatewayResultCodeTransition</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <ErrorType>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/REMOTE_FAILURE/Type"/>
                </ErrorType>
                <ErrorDetail>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/REMOTE_FAILURE/Detail"/>
                </ErrorDetail>
                <ErrorMessage>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonErrors/REMOTE_FAILURE/ErrorMessage"/>
                </ErrorMessage>
                <ShouldNotify>
                    <xsl:value-of select="true()"/>
                </ShouldNotify>
                <NotificationErrorCode>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/NotificationErrorCodes/UNDETERMINABLE_PAYMENT_GATEWAY_ERROR"/>
                </NotificationErrorCode>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignRCError">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>628</pd:x>
        <pd:y>284</pd:y>
        <config>
            <variableName>PaymentGatewayResultCodeTransition</variableName>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var" select="$InterimVars/root/ns3:PaymentServiceProcessorReturnCodes/ns3:PaymentServiceProcessorReturnCode[1]/ns3:WSIMessage[@operationScope=$_globalVariables/ns:GlobalVariables/SvcTransactionSearch/BWTransformation/OperationScope|$_globalVariables/ns:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/AllOperationScope]"/>
            <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:when test="string-length($var/@errorType) >0">
                    <root>
                        <ErrorType>
                            <xsl:value-of select="$var/@errorType"/>
                        </ErrorType>
                        <ErrorDetail>
                            <xsl:value-of select="$var/text()"/>
                        </ErrorDetail>
                        <ErrorMessage>
                            <xsl:value-of select="$InterimVars/root/ns3:PaymentServiceProcessorReturnCodes/ns3:PaymentServiceProcessorReturnCode[1]/ns3:Description"/>
                        </ErrorMessage>
                        <ShouldNotify>
                            <xsl:value-of select="$var/@shouldNotify"/>
                        </ShouldNotify>
                        <NotificationErrorCode>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/NotificationErrorCodes/NOTIFIABLE_SVC_PROCESSORCODE_ERROR"/>
                        </NotificationErrorCode>
                    </root>
                </xsl:when>
                <xsl:otherwise>
                    <root/>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>590</pd:x>
        <pd:y>452</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapPaymentServiceResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ValidatePaymentGatewayResponse</pd:from>
        <pd:to>Assign-FinancialDate</pd:to>
        <pd:xpathDescription>SearchFound</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1])&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>MapErrorResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogRequestValidationExceptionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapErrorResponse</pd:from>
        <pd:to>LogRequestValidationExceptionRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>ValidatePaymentGatewayResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign-FinancialDate</pd:from>
        <pd:to>GetCardClass</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCardClass</pd:from>
        <pd:to>SendReconciliationMessage</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ValidatePaymentGatewayResponse</pd:from>
        <pd:to>Null</pd:to>
        <pd:xpathDescription>SearchNotFound</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendReconciliationMessage</pd:from>
        <pd:to>MapPaymentServiceResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ValidatePaymentGatewayResponse</pd:from>
        <pd:to>LookupResultCode</pd:to>
        <pd:xpathDescription>ErrorResponse</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RECORDS/RECORD[1])=0 and 
string-length($ValidatePaymentGatewayResponse/root/pfx7:UGPRESPONSE/RESULT_CODE)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>LookupResultCode</pd:from>
        <pd:to>AssignResultCode</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignResultCode</pd:from>
        <pd:to>AssignRCError</pd:to>
        <pd:xpathDescription>RC_Found</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$InterimVars/root/RCFound='true'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignResultCode</pd:from>
        <pd:to>AssignGenericError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignGenericError</pd:from>
        <pd:to>MapPaymentServiceResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignRCError</pd:from>
        <pd:to>MapPaymentServiceResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>MapPaymentServiceResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Map Payment Gateway Response to Payment Service Response Mapping here </pd:description>
        <pd:x>1215</pd:x>
        <pd:y>41</pd:y>
        <pd:width>191</pd:width>
        <pd:height>65</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-6684775</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>