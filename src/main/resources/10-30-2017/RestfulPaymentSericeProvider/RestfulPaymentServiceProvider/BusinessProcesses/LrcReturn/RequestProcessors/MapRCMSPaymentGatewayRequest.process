<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://services.wsgc.com/2014/Payment" xmlns:ns="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns3="http://www.wsgc.com/schemas/common/PaymentGatewayCredentials.xsd" xmlns:ns4="http://www.wsgc.com/schemas/common/PaymentGatewayVerifoneCredentials.xsd" xmlns:ns5="http://www.wsgc.com/schemas/common/PaymentServiceSVCBalanceInqPins.xsd" xmlns:pfx3="http://ecommerce.wsgc.com/2013/Common" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns6="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/LrcRedemptionDTCMORequest" xmlns:ns7="http://www.wsgc.com/schemas/common/PaymentServiceDTCMOConceptsChannels.xsd" xmlns:pfx5="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Gift/Redemption" xmlns:ns8="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions">
    <xsd:import namespace="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Gift/Redemption" schemaLocation="/SharedResources/XMLSchemas/Verifone/UGP-V1/UGPGiftRedemptionRequest.xsd"/>
    <xsd:import namespace="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" schemaLocation="/SharedResources/XMLSchemas/CLE/GlobalErrorObject.xsd"/>
    <xsd:import namespace="http://ecommerce.wsgc.com/2013/Common" schemaLocation="/SharedResources/XMLSchemas/2013/Common/base-types.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/lrc-return.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/reward-service-return.xsd"/>
    <pd:name>BusinessProcesses/LrcReturn/RequestProcessors/MapRCMSPaymentGatewayRequest.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:LrcReturnRequest"/>
    <pd:startX>36</pd:startX>
    <pd:startY>153</pd:startY>
    <pd:returnBindings>
        <root>
            <paymentgatewayrequest>
                <xsl:value-of select="tib:render-xml($RCMSCanceRedeemRequest/pfx:ReturnRequest)"/>
            </paymentgatewayrequest>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="paymentgatewayrequest" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>537</pd:endX>
    <pd:endY>150</pd:endY>
    <pd:errorSchemas>
        <ErrorSchema>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element ref="ns:ExceptionHandlerRequest" minOccurs="0"/>
                        <xsd:element name="Error" type="pfx3:ErrorType" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </ErrorSchema>
    </pd:errorSchemas>
    <pd:processVariables>
        <Process>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="Error" type="pfx3:ErrorType"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </Process>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1414172991752</pd:targetNamespace>
    <pd:activity name="AssignSafeFailure">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>453</pd:x>
        <pd:y>343</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="$_error/ns1:ErrorReport/Class=$_globalVariables/ns2:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:when>
                    <xsl:otherwise>
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>274</pd:x>
        <pd:y>344</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetCLEParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>171</pd:x>
        <pd:y>151</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/LrcReturn/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="RCMSCanceRedeemRequest">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>349</pd:x>
        <pd:y>151</pd:y>
        <config>
            <element ref="pfx:ReturnRequest"/>
        </config>
        <pd:inputBindings>
            <pfx:ReturnRequest>
                <xsl:attribute name="version">
                    <xsl:value-of select="$Start/pfx:LrcReturnRequest/@version"/>
                </xsl:attribute>
                <ConsumerTransactionId>
                    <xsl:value-of select="$Start/pfx:LrcReturnRequest/ConsumerTransactionId"/>
                </ConsumerTransactionId>
                <ReturnContext>
                    <Concept>
                        <xsl:value-of select="$Start/pfx:LrcReturnRequest/PaymentContext/Concept"/>
                    </Concept>
                    <Channel>
                        <xsl:value-of select="$Start/pfx:LrcReturnRequest/PaymentContext/Channel"/>
                    </Channel>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/pfx:LrcReturnRequest/PaymentContext/Store)>0">
                            <xsl:for-each select="$Start/pfx:LrcReturnRequest/PaymentContext/Store">
                                <xsl:if test="string-length(RegisterId)>0">
                                    <Store>
                                        <xsl:if test="string-length(StoreId)>0">
                                            <xsl:if test="StoreId">
                                                <StoreId>
                                                    <xsl:value-of select="StoreId"/>
                                                </StoreId>
                                            </xsl:if>
                                        </xsl:if>
                                        <RegisterId>
                                            <xsl:value-of select="RegisterId"/>
                                        </RegisterId>
                                        <xsl:if test="string-length(PaymentTerminalId)>0">
                                            <xsl:if test="PaymentTerminalId">
                                                <PaymentTerminalId>
                                                    <xsl:value-of select="PaymentTerminalId"/>
                                                </PaymentTerminalId>
                                            </xsl:if>
                                        </xsl:if>
                                        <RegisterTransactionId>
                                            <xsl:value-of select="RegisterTransactionId"/>
                                        </RegisterTransactionId>
                                        <xsl:if test="string-length(UserId)>0">
                                            <xsl:if test="UserId">
                                                <UserId>
                                                    <xsl:value-of select="UserId"/>
                                                </UserId>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(PosUserId)>0">
                                            <xsl:if test="PosUserId">
                                                <PosUserId>
                                                    <xsl:value-of select="PosUserId"/>
                                                </PosUserId>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(AssociateId)>0">
                                            <xsl:if test="AssociateId">
                                                <AssociateId>
                                                    <xsl:value-of select="AssociateId"/>
                                                </AssociateId>
                                            </xsl:if>
                                        </xsl:if>
                                    </Store>
                                </xsl:if>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="string-length($Start/pfx:LrcReturnRequest/PaymentContext/CareCenter)>0">
                            <xsl:for-each select="$Start/pfx:LrcReturnRequest/PaymentContext/CareCenter">
                                <xsl:if test="string-length(UserId)>0 or string-length(AssociateId)>0">
                                    <CareCenter>
                                        <xsl:if test="UserId">
                                            <UserId>
                                                <xsl:value-of select="UserId"/>
                                            </UserId>
                                        </xsl:if>
                                        <xsl:if test="AssociateId">
                                            <AssociateId>
                                                <xsl:value-of select="AssociateId"/>
                                            </AssociateId>
                                        </xsl:if>
                                    </CareCenter>
                                </xsl:if>
                            </xsl:for-each>
                        </xsl:when>
                    </xsl:choose>
                    <xsl:copy-of select="$Start/pfx:LrcReturnRequest/OrderContext"/>
                </ReturnContext>
                <CurrencyCode>
                    <xsl:value-of select="$Start/pfx:LrcReturnRequest/CurrencyCode"/>
                </CurrencyCode>
                <ReturnAmount>
                    <xsl:value-of select="$Start/pfx:LrcReturnRequest/ReturnAmount"/>
                </ReturnAmount>
                <xsl:if test="string-length($Start/pfx:LrcReturnRequest/ReturnDescription)>0">
                    <xsl:if test="$Start/pfx:LrcReturnRequest/ReturnDescription">
                        <ReturnDescription>
                            <xsl:value-of select="$Start/pfx:LrcReturnRequest/ReturnDescription"/>
                        </ReturnDescription>
                    </xsl:if>
                </xsl:if>
            </pfx:ReturnRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate_RCMS_REQ_ERROR">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>663</pd:x>
        <pd:y>345</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns8:ActivityInput>
                <xsl:if test="$_error/ns1:ErrorReport/Msg">
                    <message>
                        <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
                <data>
                    <root>
                        <ns:ExceptionHandlerRequest>
                            <ns:envCode>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ENV"/>
                            </ns:envCode>
                            <ns:appCode>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/AppCode"/>
                            </ns:appCode>
                            <ns:interfaceCode>
                                <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                            </ns:interfaceCode>
                            <ns:hostName>
                                <xsl:value-of select="BW:getHostName()"/>
                            </ns:hostName>
                            <ns:timeStamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </ns:timeStamp>
                            <ns:message>
                                <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                            </ns:message>
                            <ns:payload>
                                <xsl:value-of select="tib:render-xml($Start/pfx:LrcReturnRequest)"/>
                            </ns:payload>
                            <ns:ErrorLevel>
                                <ns:errorCode>
                                    <xsl:value-of select="concat($Process/root/Error/Type, $_globalVariables/ns2:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$Process/root/Error/Detail[1])"/>
                                </ns:errorCode>
                            </ns:ErrorLevel>
                            <ns:TransactionDetails>
                                <ns:transactionDomain>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                                </ns:transactionDomain>
                                <ns:transactionType>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/LrcReturn/CLE/TransactionType"/>
                                </ns:transactionType>
                                <ns:transactionID>
                                    <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                                </ns:transactionID>
                            </ns:TransactionDetails>
                            <xsl:for-each select="$_error/ns1:ErrorReport">
                                <ns:ErrorReportType>
                                    <ns:stackTrace>
                                        <xsl:value-of select="StackTrace"/>
                                    </ns:stackTrace>
                                    <ns:msg>
                                        <xsl:value-of select="Msg"/>
                                    </ns:msg>
                                    <ns:fullClass>
                                        <xsl:value-of select="FullClass"/>
                                    </ns:fullClass>
                                    <ns:class>
                                        <xsl:value-of select="Class"/>
                                    </ns:class>
                                    <ns:processStack>
                                        <xsl:value-of select="ProcessStack"/>
                                    </ns:processStack>
                                    <xsl:if test="MsgCode">
                                        <ns:msgCode>
                                            <xsl:value-of select="MsgCode"/>
                                        </ns:msgCode>
                                    </xsl:if>
                                    <ns:data>
                                        <xsl:value-of select="Data/*"/>
                                    </ns:data>
                                </ns:ErrorReportType>
                            </xsl:for-each>
                        </ns:ExceptionHandlerRequest>
                        <xsl:copy-of select="$Process/root/Error"/>
                    </root>
                </data>
            </ns8:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>AssignSafeFailure</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignSafeFailure</pd:from>
        <pd:to>Generate_RCMS_REQ_ERROR</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>RCMSCanceRedeemRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RCMSCanceRedeemRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Map Payment Service to RCMS Payment Gateway Mapping here</pd:description>
        <pd:x>454</pd:x>
        <pd:y>43</pd:y>
        <pd:width>204</pd:width>
        <pd:height>70</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-6684775</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>