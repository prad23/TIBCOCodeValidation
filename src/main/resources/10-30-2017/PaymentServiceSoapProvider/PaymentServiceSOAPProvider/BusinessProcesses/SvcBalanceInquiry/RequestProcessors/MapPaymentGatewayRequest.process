<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://services.wsgc.com/2014/Payment" xmlns:ns="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns3="http://www.wsgc.com/schemas/common/PaymentGatewayCredentials.xsd" xmlns:ns4="http://www.wsgc.com/schemas/common/PaymentServiceSVCBalanceInqPins.xsd" xmlns:ns5="http://www.wsgc.com/schemas/common/PaymentGatewayVerifoneCredentials.xsd" xmlns:ns6="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx3="http://ecommerce.wsgc.com/2013/Common" xmlns:pfx4="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Gift/BalanceInquiry" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions">
    <xsd:import namespace="http://ecommerce.wsgc.com/2013/Common" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2013/Common/base-types.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2014/Payment/svc-balance.xsd"/>
    <xsd:import namespace="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Gift/BalanceInquiry" schemaLocation="/SharedResources/XMLSchemas/Verifone/UGP-V1/UGPGiftBalanceInquiryRequest.xsd"/>
    <pd:name>BusinessProcesses/SvcBalanceInquiry/RequestProcessors/MapPaymentGatewayRequest.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:SvcBalanceInquiryRequest"/>
    <pd:startX>51</pd:startX>
    <pd:startY>152</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:if test="string-length($Process/root/Error/Type) > 0">
                <pfx:SvcBalanceInquiryResponse>
                    <xsl:attribute name="version">
                        <xsl:value-of select="$Start/pfx:SvcBalanceInquiryRequest/@version"/>
                    </xsl:attribute>
                    <SystemContext>
                        <EnvironmentIdentifier>
                            <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                        </EnvironmentIdentifier>
                        <RegionIdentifier>
                            <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                        </RegionIdentifier>
                        <SourceSystemIdentifier>
                            <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix"/>
                        </SourceSystemIdentifier>
                        <TransactionId>
                            <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/SvcBalanceInquiry/Constants/TransactionIdPrefix,$Start/pfx:SvcBalanceInquiryRequest/SystemContext/TransactionId)"/>
                        </TransactionId>
                        <TransactionTime>
                            <xsl:value-of select="current-dateTime()"/>
                        </TransactionTime>
                    </SystemContext>
                    <xsl:copy-of select="$Start/pfx:SvcBalanceInquiryRequest/PaymentContext"/>
                    <Error>
                        <Type>
                            <xsl:value-of select="$Process/root/Error/Type"/>
                        </Type>
                        <xsl:if test="string-length($Process/root/Error/Detail[1])>0">
                            <xsl:for-each select="$Process/root/Error/Detail">
                                <Detail>
                                    <xsl:value-of select="."/>
                                </Detail>
                            </xsl:for-each>
                        </xsl:if>
                        <ErrorMessage>
                            <xsl:value-of select="$Process/root/Error/ErrorMessage"/>
                        </ErrorMessage>
                    </Error>
                </pfx:SvcBalanceInquiryResponse>
            </xsl:if>
            <paymentgatewayrequest>
                <xsl:value-of select="tib:render-xml($MapPaymentGatewayRequest)"/>
            </paymentgatewayrequest>
            <EncryptedPIN>
                <xsl:value-of select="$GetEncryptedPins/root/WSIEncryptedPin"/>
            </EncryptedPIN>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:SvcBalanceInquiryResponse" minOccurs="0"/>
                    <xsd:element name="paymentgatewayrequest" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="EncryptedPIN" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>800</pd:endX>
    <pd:endY>153</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Process>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="Error" type="pfx3:ErrorType"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </Process>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1414172991752</pd:targetNamespace>
    <pd:activity name="AssignSafeFailure">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>631</pd:x>
        <pd:y>424</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="$_error/ns1:ErrorReport/Class=$_globalVariables/ns2:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:when>
                    <xsl:when test="string-length($GetEncryptedPins/root/Error/Type)>0">
                        <Error>
                            <Type>
                                <xsl:value-of select="$GetEncryptedPins/root/Error/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$GetEncryptedPins/root/Error/Detail[1]"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$GetEncryptedPins/root/Error/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:when>
                    <xsl:otherwise>
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>389</pd:x>
        <pd:y>429</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetCLEParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>175</pd:x>
        <pd:y>152</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/SvcBalanceInquiry/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="PaymentGatewayVerifoneCredentialsParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>307</pd:x>
        <pd:y>152</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentGatewayVerifoneCredentials.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogRequestValidationExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>800</pd:x>
        <pd:y>422</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns:ExceptionHandlerRequest>
                <ns:envCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ENV"/>
                </ns:envCode>
                <ns:appCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/AppCode"/>
                </ns:appCode>
                <ns:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns:interfaceCode>
                <ns:hostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </ns:hostName>
                <ns:timeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns:timeStamp>
                <ns:message>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </ns:message>
                <ns:payload>
                    <xsl:value-of select="tib:render-xml($Start/pfx:SvcBalanceInquiryRequest)"/>
                </ns:payload>
                <ns:ErrorLevel>
                    <ns:errorCode>
                        <xsl:value-of select="concat($Process/root/Error/Type, $_globalVariables/ns2:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$Process/root/Error/Detail[1])"/>
                    </ns:errorCode>
                </ns:ErrorLevel>
                <ns:TransactionDetails>
                    <ns:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns:transactionDomain>
                    <ns:transactionType>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/SvcBalanceInquiry/CLE/TransactionType"/>
                    </ns:transactionType>
                    <ns:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns:transactionID>
                </ns:TransactionDetails>
                <xsl:choose>
                    <xsl:when test="string-length($GetEncryptedPins/root/CLEErrorReport/ns:stackTrace)>0">
                        <ns:ErrorReportType>
                            <xsl:if test="$GetEncryptedPins/root/CLEErrorReport/ns:stackTrace">
                                <ns:stackTrace>
                                    <xsl:value-of select="$GetEncryptedPins/root/CLEErrorReport/ns:stackTrace"/>
                                </ns:stackTrace>
                            </xsl:if>
                            <xsl:if test="$GetEncryptedPins/root/CLEErrorReport/ns:msg">
                                <ns:msg>
                                    <xsl:value-of select="$GetEncryptedPins/root/CLEErrorReport/ns:msg"/>
                                </ns:msg>
                            </xsl:if>
                            <xsl:if test="$GetEncryptedPins/root/CLEErrorReport/ns:fullClass">
                                <ns:fullClass>
                                    <xsl:value-of select="$GetEncryptedPins/root/CLEErrorReport/ns:fullClass"/>
                                </ns:fullClass>
                            </xsl:if>
                            <xsl:if test="$GetEncryptedPins/root/CLEErrorReport/ns:class">
                                <ns:class>
                                    <xsl:value-of select="$GetEncryptedPins/root/CLEErrorReport/ns:class"/>
                                </ns:class>
                            </xsl:if>
                            <xsl:if test="$GetEncryptedPins/root/CLEErrorReport/ns:processStack">
                                <ns:processStack>
                                    <xsl:value-of select="$GetEncryptedPins/root/CLEErrorReport/ns:processStack"/>
                                </ns:processStack>
                            </xsl:if>
                            <xsl:if test="$GetEncryptedPins/root/CLEErrorReport/ns:msgCode">
                                <ns:msgCode>
                                    <xsl:value-of select="$GetEncryptedPins/root/CLEErrorReport/ns:msgCode"/>
                                </ns:msgCode>
                            </xsl:if>
                            <xsl:if test="$GetEncryptedPins/root/CLEErrorReport/ns:data">
                                <ns:data>
                                    <xsl:value-of select="$GetEncryptedPins/root/CLEErrorReport/ns:data"/>
                                </ns:data>
                            </xsl:if>
                        </ns:ErrorReportType>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$_error/ns1:ErrorReport">
                            <ns:ErrorReportType>
                                <ns:stackTrace>
                                    <xsl:value-of select="StackTrace"/>
                                </ns:stackTrace>
                                <ns:msg>
                                    <xsl:value-of select="Msg"/>
                                </ns:msg>
                                <ns:fullClass>
                                    <xsl:value-of select="FullClass"/>
                                </ns:fullClass>
                                <ns:class>
                                    <xsl:value-of select="Class"/>
                                </ns:class>
                                <ns:processStack>
                                    <xsl:value-of select="ProcessStack"/>
                                </ns:processStack>
                                <xsl:if test="MsgCode">
                                    <ns:msgCode>
                                        <xsl:value-of select="MsgCode"/>
                                    </ns:msgCode>
                                </xsl:if>
                                <ns:data>
                                    <xsl:value-of select="Data/*"/>
                                </ns:data>
                            </ns:ErrorReportType>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
            </ns:ExceptionHandlerRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapPaymentGatewayRequest">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>610</pd:x>
        <pd:y>153</pd:y>
        <config>
            <element ref="pfx4:UGPREQUEST"/>
        </config>
        <pd:inputBindings>
            <xsl:variable name="inchannel" select="$Start/pfx:SvcBalanceInquiryRequest/PaymentContext/Channel"/>
            <xsl:variable name="inconcept" select="$Start/pfx:SvcBalanceInquiryRequest/PaymentContext/Concept"/>
            <pfx4:UGPREQUEST>
                <xsl:attribute name="VER">
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/Version"/>
                </xsl:attribute>
                <FUNCTION_TYPE>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/FUNCTION_TYPE"/>
                </FUNCTION_TYPE>
                <PAYMENT_TYPE>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/PaymentGateway/VERIFONE/SVC_PAYMENT_TYPE"/>
                </PAYMENT_TYPE>
                <COMMAND>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/SvcBalanceInquiry/PaymentGateway/Command"/>
                </COMMAND>
                <ACCOUNT>
                    <xsl:value-of select="$PaymentGatewayVerifoneCredentialsParams/ns5:PaymentGatewayVerifoneCredentials/ns5:PaymentGatewayVerifoneCredential[$inconcept  = ns5:ConceptCode][ns5:ChannelCode=$inchannel]/ns5:Account"/>
                </ACCOUNT>
                <SITE>
                    <xsl:value-of select="$PaymentGatewayVerifoneCredentialsParams/ns5:PaymentGatewayVerifoneCredentials/ns5:PaymentGatewayVerifoneCredential[$inconcept  = ns5:ConceptCode][ns5:ChannelCode=$inchannel]/ns5:Site"/>
                </SITE>
                <TERM>
                    <xsl:value-of select="$PaymentGatewayVerifoneCredentialsParams/ns5:PaymentGatewayVerifoneCredentials/ns5:PaymentGatewayVerifoneCredential[$inconcept  = ns5:ConceptCode][ns5:ChannelCode=$inchannel]/ns5:Term"/>
                </TERM>
                <SERIAL_NUM>
                    <xsl:value-of select="$PaymentGatewayVerifoneCredentialsParams/ns5:PaymentGatewayVerifoneCredentials/ns5:PaymentGatewayVerifoneCredential[$inconcept  = ns5:ConceptCode][ns5:ChannelCode=$inchannel]/ns5:SerialNum"/>
                </SERIAL_NUM>
                <DEVTYPE>
                    <xsl:value-of select="$PaymentGatewayVerifoneCredentialsParams/ns5:PaymentGatewayVerifoneCredentials/ns5:PaymentGatewayVerifoneCredential[$inconcept  = ns5:ConceptCode][ns5:ChannelCode=$inchannel]/ns5:DevType"/>
                </DEVTYPE>
                <DEVICEKEY>
                    <xsl:value-of select="$PaymentGatewayVerifoneCredentialsParams/ns5:PaymentGatewayVerifoneCredentials/ns5:PaymentGatewayVerifoneCredential[$inconcept  = ns5:ConceptCode][ns5:ChannelCode=$inchannel]/ns5:DeviceKey"/>
                </DEVICEKEY>
                <ACCT_NUM>
                    <xsl:value-of select="$Start/pfx:SvcBalanceInquiryRequest/Tender/AccountNumber"/>
                </ACCT_NUM>
                <xsl:if test="string-length($Start/pfx:SvcBalanceInquiryRequest/PaymentContext/Store/UserId)>0 or&#xA;string-length($Start/pfx:SvcBalanceInquiryRequest/PaymentContext/CareCenter/AssociateId)>0">
                    <CLERK_ID>
                        <xsl:value-of select="if(string-length($Start/pfx:SvcBalanceInquiryRequest/PaymentContext/Store/UserId)>0) then&#xA;tib:left($Start/pfx:SvcBalanceInquiryRequest/PaymentContext/Store/UserId,8)&#xA;else&#xA;tib:left($Start/pfx:SvcBalanceInquiryRequest/PaymentContext/CareCenter/AssociateId,8)"/>
                    </CLERK_ID>
                </xsl:if>
                <xsl:if test="$Start/pfx:SvcBalanceInquiryRequest/OrderContext/@omsOrderId">
                    <INVOICE>
                        <xsl:value-of select="$Start/pfx:SvcBalanceInquiryRequest/OrderContext/@omsOrderId"/>
                    </INVOICE>
                </xsl:if>
                <PIN_BLOCK>
                    <xsl:value-of select="$GetEncryptedPins/root/FirstDataEncryptedPin"/>
                </PIN_BLOCK>
            </pfx4:UGPREQUEST>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetEncryptedPins">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>453</pd:x>
        <pd:y>154</pd:y>
        <config>
            <processName>/CommonProcesses/CryptoProcesses/GetEncryptedPins.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <Pin>
                    <xsl:value-of select="$Start/pfx:SvcBalanceInquiryRequest/Pin"/>
                </Pin>
                <FirstDataPinEncryptionScheme>
                    <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/PaymentService/TokenConstants/PinEncryptionScheme,&#xA;$_globalVariables/ns2:GlobalVariables/PaymentService/TokenConstants/EnvId)"/>
                </FirstDataPinEncryptionScheme>
                <FirstDataKeyId>
                    <xsl:value-of select="$Start/pfx:SvcBalanceInquiryRequest/PaymentContext/Concept"/>
                </FirstDataKeyId>
                <WSIPinEncryptionScheme>
                    <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/PaymentService/TokenConstants/WSIPinEncryptionScheme,&#xA;$_globalVariables/ns2:GlobalVariables/PaymentService/TokenConstants/EnvId)"/>
                </WSIPinEncryptionScheme>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>454</pd:x>
        <pd:y>265</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput/>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapPaymentGatewayRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>AssignSafeFailure</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogRequestValidationExceptionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignSafeFailure</pd:from>
        <pd:to>LogRequestValidationExceptionRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>PaymentGatewayVerifoneCredentialsParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PaymentGatewayVerifoneCredentialsParams</pd:from>
        <pd:to>GetEncryptedPins</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetEncryptedPins</pd:from>
        <pd:to>MapPaymentGatewayRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetEncryptedPins</pd:from>
        <pd:to>GenerateError</pd:to>
        <pd:xpathDescription>OnError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($GetEncryptedPins/root/Error/Type)&gt;0</pd:xpath>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Map Payment Service to Payment Gateway Mapping here</pd:description>
        <pd:x>418</pd:x>
        <pd:y>55</pd:y>
        <pd:width>245</pd:width>
        <pd:height>48</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-6684775</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>