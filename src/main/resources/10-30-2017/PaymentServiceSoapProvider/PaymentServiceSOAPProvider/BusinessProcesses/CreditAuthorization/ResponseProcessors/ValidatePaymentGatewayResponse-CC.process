<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx10="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Credit/PreAuthorizationResponse" xmlns:pfx11="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_PG_AuthorizationValidationResult.xsd" xmlns:pfx="http://services.wsgc.com/2014/Payment" xmlns:ns="http://www.wsgc.com/schemas/common/PaymentServiceValidations.xsd" xmlns:ns12="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:regexGenerator="java://regexGenerator" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://www.wsgc.com/schemas/common/PaymentServiceErrorTypes.xsd" xmlns:pfx3="http://ecommerce.wsgc.com/2013/Common" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XMLSchemas/Verifone/CreditPreAuthorizationResponse.xsd" xmlns:pfx5="http://www.wsgc.com/schemas/service/PaymentError.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XMLSchemas/Verifone/GiftActivateResponse.xsd">
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2014/Payment/credit-authorization.xsd"/>
    <xsd:import namespace="http://ecommerce.wsgc.com/2013/Common" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2013/Common/base-types.xsd"/>
    <xsd:import namespace="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Credit/PreAuthorizationResponse" schemaLocation="/SharedResources/XMLSchemas/Verifone/UGP/CreditPreAuthorizationResponse.xsd"/>
    <xsd:import namespace="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Credit/PreAuthorizationResponse" schemaLocation="/SharedResources/XMLSchemas/Verifone/UGP-V1/UGPCreditPreAuthorizationResponse.xsd"/>
    <xsd:import namespace="http://www.wsgc.com/schemas/service/PaymentError.xsd" schemaLocation="/SharedResources/XMLSchemas/PaymentServiceInternal/PaymentErrorSchema.xsd"/>
    <xsd:import namespace="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_PG_AuthorizationValidationResult.xsd" schemaLocation="/SharedResources/XMLSchemas/PaymentServiceInternal/UGP_PG_AuthorizationValidationResult.xsd"/>
    <pd:name>BusinessProcesses/CreditAuthorization/ResponseProcessors/ValidatePaymentGatewayResponse-CC.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="paymentgatewayresponse" type="xsd:string"/>
                    <xsd:element name="transactionid" type="xsd:string"/>
                    <xsd:element ref="pfx:CreditCardAuthorizationRequest"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>49</pd:startX>
    <pd:startY>184</pd:startY>
    <pd:returnBindings>
        <root>
            <pfx10:UGPRESPONSE>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/@RSA)>0">
                    <xsl:attribute name="RSA">
                        <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/@RSA"/>
                    </xsl:attribute>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/@RSV)>0">
                    <xsl:attribute name="RSV">
                        <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/@RSV"/>
                    </xsl:attribute>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/ACCOUNT)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/ACCOUNT">
                        <ACCOUNT>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/ACCOUNT"/>
                        </ACCOUNT>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/SITE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/SITE">
                        <SITE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/SITE"/>
                        </SITE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TERM)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TERM">
                        <TERM>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TERM"/>
                        </TERM>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/COMMAND)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/COMMAND">
                        <COMMAND>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/COMMAND"/>
                        </COMMAND>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/RESULT_CODE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/RESULT_CODE">
                        <RESULT_CODE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/RESULT_CODE"/>
                        </RESULT_CODE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/RESPONSE_TEXT)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/RESPONSE_TEXT">
                        <RESPONSE_TEXT>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/RESPONSE_TEXT"/>
                        </RESPONSE_TEXT>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/RESULT)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/RESULT">
                        <RESULT>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/RESULT"/>
                        </RESULT>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TRACE_CODE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TRACE_CODE">
                        <TRACE_CODE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TRACE_CODE"/>
                        </TRACE_CODE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AUTH_CODE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AUTH_CODE">
                        <AUTH_CODE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AUTH_CODE"/>
                        </AUTH_CODE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/PAYMENT_MEDIA)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/PAYMENT_MEDIA">
                        <PAYMENT_MEDIA>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/PAYMENT_MEDIA"/>
                        </PAYMENT_MEDIA>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/PAYMENT_TYPE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/PAYMENT_TYPE">
                        <PAYMENT_TYPE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/PAYMENT_TYPE"/>
                        </PAYMENT_TYPE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AVS_CODE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AVS_CODE">
                        <AVS_CODE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AVS_CODE"/>
                        </AVS_CODE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/CVV2_CODE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/CVV2_CODE">
                        <CVV2_CODE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/CVV2_CODE"/>
                        </CVV2_CODE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/CMRCL_FLAG)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/CMRCL_FLAG">
                        <CMRCL_FLAG>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/CMRCL_FLAG"/>
                        </CMRCL_FLAG>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/BATCH_NUM)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/BATCH_NUM">
                        <BATCH_NUM>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/BATCH_NUM"/>
                        </BATCH_NUM>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/CTROUTD)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/CTROUTD">
                        <CTROUTD>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/CTROUTD"/>
                        </CTROUTD>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TA_TOKEN)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TA_TOKEN">
                        <TA_TOKEN>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TA_TOKEN"/>
                        </TA_TOKEN>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AVAIL_BALANCE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AVAIL_BALANCE">
                        <AVAIL_BALANCE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AVAIL_BALANCE"/>
                        </AVAIL_BALANCE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TRANS_AMOUNT)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TRANS_AMOUNT">
                        <TRANS_AMOUNT>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TRANS_AMOUNT"/>
                        </TRANS_AMOUNT>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TRANS_DATETIME)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TRANS_DATETIME">
                        <TRANS_DATETIME>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TRANS_DATETIME"/>
                        </TRANS_DATETIME>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/PPCV)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/PPCV">
                        <PPCV>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/PPCV"/>
                        </PPCV>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AUTH_AMOUNT)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AUTH_AMOUNT">
                        <AUTH_AMOUNT>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AUTH_AMOUNT"/>
                        </AUTH_AMOUNT>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AVAIL_AMOUNT)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AVAIL_AMOUNT">
                        <AVAIL_AMOUNT>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AVAIL_AMOUNT"/>
                        </AVAIL_AMOUNT>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/ORIG_TRANS_AMOUNT)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/ORIG_TRANS_AMOUNT">
                        <ORIG_TRANS_AMOUNT>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/ORIG_TRANS_AMOUNT"/>
                        </ORIG_TRANS_AMOUNT>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DIFF_AMOUNT_DUE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DIFF_AMOUNT_DUE">
                        <DIFF_AMOUNT_DUE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DIFF_AMOUNT_DUE"/>
                        </DIFF_AMOUNT_DUE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/INTRN_SEQ_NUM)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/INTRN_SEQ_NUM">
                        <INTRN_SEQ_NUM>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/INTRN_SEQ_NUM"/>
                        </INTRN_SEQ_NUM>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/INVOICE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/INVOICE">
                        <INVOICE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/INVOICE"/>
                        </INVOICE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/PY_RESP_CODE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/PY_RESP_CODE">
                        <PY_RESP_CODE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/PY_RESP_CODE"/>
                        </PY_RESP_CODE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/REFERENCE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/REFERENCE">
                        <REFERENCE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/REFERENCE"/>
                        </REFERENCE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/RESPONSE_CODE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/RESPONSE_CODE">
                        <RESPONSE_CODE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/RESPONSE_CODE"/>
                        </RESPONSE_CODE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TERMINATION_STATUS)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TERMINATION_STATUS">
                        <TERMINATION_STATUS>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TERMINATION_STATUS"/>
                        </TERMINATION_STATUS>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TRANS_SEQ_NUM)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TRANS_SEQ_NUM">
                        <TRANS_SEQ_NUM>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TRANS_SEQ_NUM"/>
                        </TRANS_SEQ_NUM>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TROUTD)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TROUTD">
                        <TROUTD>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TROUTD"/>
                        </TROUTD>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AUTH_RESP_CODE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AUTH_RESP_CODE">
                        <AUTH_RESP_CODE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/AUTH_RESP_CODE"/>
                        </AUTH_RESP_CODE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_ACCT_NUM)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_ACCT_NUM">
                        <DUP_ACCT_NUM>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_ACCT_NUM"/>
                        </DUP_ACCT_NUM>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_AUTH_CODE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_AUTH_CODE">
                        <DUP_AUTH_CODE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_AUTH_CODE"/>
                        </DUP_AUTH_CODE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_CTROUTD)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_CTROUTD">
                        <DUP_CTROUTD>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_CTROUTD"/>
                        </DUP_CTROUTD>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_INVOICE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_INVOICE">
                        <DUP_INVOICE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_INVOICE"/>
                        </DUP_INVOICE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_PAYMENT_MEDIA)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_PAYMENT_MEDIA">
                        <DUP_PAYMENT_MEDIA>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_PAYMENT_MEDIA"/>
                        </DUP_PAYMENT_MEDIA>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_TRANS_AMOUNT)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_TRANS_AMOUNT">
                        <DUP_TRANS_AMOUNT>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_TRANS_AMOUNT"/>
                        </DUP_TRANS_AMOUNT>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_TROUTD)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_TROUTD">
                        <DUP_TROUTD>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_TROUTD"/>
                        </DUP_TROUTD>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/STATUS_CODE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/STATUS_CODE">
                        <STATUS_CODE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/STATUS_CODE"/>
                        </STATUS_CODE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/BATCH_TRACE_ID)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/BATCH_TRACE_ID">
                        <BATCH_TRACE_ID>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/BATCH_TRACE_ID"/>
                        </BATCH_TRACE_ID>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_PROCESS)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_PROCESS">
                        <TKN_PROCESS>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_PROCESS"/>
                        </TKN_PROCESS>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_USED)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_USED">
                        <TKN_USED>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_USED"/>
                        </TKN_USED>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_MATCHING)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_MATCHING">
                        <TKN_MATCHING>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_MATCHING"/>
                        </TKN_MATCHING>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_PAYMENT)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_PAYMENT">
                        <TKN_PAYMENT>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_PAYMENT"/>
                        </TKN_PAYMENT>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_EXPDATE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_EXPDATE">
                        <TKN_EXPDATE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/TKN_EXPDATE"/>
                        </TKN_EXPDATE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_AVS_CODE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_AVS_CODE">
                        <DUP_AVS_CODE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_AVS_CODE"/>
                        </DUP_AVS_CODE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_CVV2_CODE)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_CVV2_CODE">
                        <DUP_CVV2_CODE>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_CVV2_CODE"/>
                        </DUP_CVV2_CODE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/ACCT_NUM)>0">
                    <ACCT_NUM>
                        <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/ACCT_NUM"/>
                    </ACCT_NUM>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_TRANS_DATETIME)>0">
                    <xsl:if test="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_TRANS_DATETIME">
                        <DUP_TRANS_DATETIME>
                            <xsl:value-of select="$ParsePaymentGatewayResponse/pfx10:UGPRESPONSE/DUP_TRANS_DATETIME"/>
                        </DUP_TRANS_DATETIME>
                    </xsl:if>
                </xsl:if>
            </pfx10:UGPRESPONSE>
            <xsl:if test="string-length($Process/root/Type) > 0">
                <pfx:CreditCardAuthorizationResponse>
                    <xsl:attribute name="version">
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Authorization/MessageVersion"/>
                    </xsl:attribute>
                    <SystemContext>
                        <EnvironmentIdentifier>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                        </EnvironmentIdentifier>
                        <RegionIdentifier>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                        </RegionIdentifier>
                        <SourceSystemIdentifier>
                            <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                        </SourceSystemIdentifier>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/root/pfx:CreditCardAuthorizationRequest/SystemContext/TransactionId)>0">
                                <TransactionId>
                                    <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/Authorization/Constants/TransactionIdPrefix,$Start/root/pfx:CreditCardAuthorizationRequest/SystemContext/TransactionId)"/>
                                </TransactionId>
                            </xsl:when>
                            <xsl:otherwise>
                                <TransactionId>
                                    <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/Authorization/Constants/TransactionIdPrefix, tib:format-dateTime($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns2:ProcessContext/ProcessId,  $_globalVariables/ns1:GlobalVariables/ENV   , BW:getHostName())"/>
                                </TransactionId>
                            </xsl:otherwise>
                        </xsl:choose>
                        <TransactionTime>
                            <xsl:value-of select="current-dateTime()"/>
                        </TransactionTime>
                    </SystemContext>
                    <xsl:copy-of select="$Start/root/pfx:CreditCardAuthorizationRequest/PaymentContext"/>
                    <xsl:for-each select="$Process/root/Type">
                        <Error>
                            <Type>
                                <xsl:value-of select="."/>
                            </Type>
                            <xsl:if test="string-length(../Detail[1])>0">
                                <xsl:for-each select="../Detail">
                                    <Detail>
                                        <xsl:value-of select="."/>
                                    </Detail>
                                </xsl:for-each>
                            </xsl:if>
                            <ErrorMessage>
                                <xsl:value-of select="../ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:for-each>
                </pfx:CreditCardAuthorizationResponse>
            </xsl:if>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx10:UGPRESPONSE" minOccurs="0"/>
                    <xsd:element ref="pfx:CreditCardAuthorizationResponse" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>904</pd:endX>
    <pd:endY>241</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Process>
            <xsd:element name="root" type="pfx3:ErrorType"/>
        </Process>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1416874785849</pd:targetNamespace>
    <pd:activity name="ParsePaymentGatewayResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>676</pd:x>
        <pd:y>185</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx10:UGPRESPONSE"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="tib:render-xml($ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx10:UGPRESPONSE)"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Validate">
        <pd:type>com.tibco.plugin.xml.XMLTransformActivity</pd:type>
        <pd:resourceType>ae.activities.XMLTransformActivity</pd:resourceType>
        <pd:x>394</pd:x>
        <pd:y>180</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <engine>Saxon</engine>
        </config>
        <pd:inputBindings>
            <textInput>
                <xmlString>
                    <xsl:value-of select="$Start/root/paymentgatewayresponse"/>
                </xmlString>
                <stylesheet>
                    <xsl:value-of select="$GetVariable/ns:PaymentServiceValidations/ns:PaymentServiceValidation[ns:RuleName = $_globalVariables/ns1:GlobalVariables/Authorization/Validation/UGP_PaymentGatewayResponseValidationXslt]/ns:RuleContent"/>
                </stylesheet>
                <parameter>
                    <name>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/XSLT_VALIDATION_PARAM"/>
                    </name>
                    <value>
                        <xsl:value-of select="tib:render-xml($GetParams/ns4:PaymentServiceErrorTypes)"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="true()"/>
                    </isXMLDocument>
                </parameter>
                <parameter>
                    <name>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/XSLT_DATE_FORMAT"/>
                    </name>
                    <value>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Authorization/PaymentGateway/CCTimeFormat"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="false()"/>
                    </isXMLDocument>
                </parameter>
                <parameter>
                    <name>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/XSLT_DATE_FORMAT_REGEX"/>
                    </name>
                    <value>
                        <xsl:value-of select="regexGenerator:Generate_Regex($_globalVariables/ns1:GlobalVariables/Authorization/PaymentGateway/CCTimeFormat)"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="false()"/>
                    </isXMLDocument>
                </parameter>
            </textInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>240</pd:x>
        <pd:y>180</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceValidations.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ParseValidationResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>532</pd:x>
        <pd:y>182</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx11:PG_AuthorizationValidationResult"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Validate/xmlString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>314</pd:x>
        <pd:y>455</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogRequestValidationExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>900</pd:x>
        <pd:y>454</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns12:ExceptionHandlerRequest>
                <ns12:envCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                </ns12:envCode>
                <ns12:appCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLEAppCode"/>
                </ns12:appCode>
                <ns12:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns12:interfaceCode>
                <ns12:hostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </ns12:hostName>
                <ns12:timeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns12:timeStamp>
                <ns12:message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </ns12:message>
                <ns12:payload>
                    <xsl:value-of select="$Start/root/paymentgatewayresponse"/>
                </ns12:payload>
                <ns12:ErrorLevel>
                    <ns12:errorCode>
                        <xsl:value-of select="concat($Process/root/Type, $_globalVariables/ns1:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$Process/root/Detail[1])"/>
                    </ns12:errorCode>
                </ns12:ErrorLevel>
                <ns12:TransactionDetails>
                    <ns12:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns12:transactionDomain>
                    <ns12:transactionType>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Authorization/CLE/TransactionType"/>
                    </ns12:transactionType>
                    <ns12:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns12:transactionID>
                </ns12:TransactionDetails>
                <xsl:for-each select="$_error/ns2:ErrorReport">
                    <ns12:ErrorReportType>
                        <ns12:stackTrace>
                            <xsl:value-of select="StackTrace"/>
                        </ns12:stackTrace>
                        <ns12:msg>
                            <xsl:value-of select="Msg"/>
                        </ns12:msg>
                        <ns12:fullClass>
                            <xsl:value-of select="FullClass"/>
                        </ns12:fullClass>
                        <ns12:class>
                            <xsl:value-of select="Class"/>
                        </ns12:class>
                        <ns12:processStack>
                            <xsl:value-of select="ProcessStack"/>
                        </ns12:processStack>
                        <xsl:if test="MsgCode">
                            <ns12:msgCode>
                                <xsl:value-of select="MsgCode"/>
                            </ns12:msgCode>
                        </xsl:if>
                        <ns12:data>
                            <xsl:value-of select="Data/*"/>
                        </ns12:data>
                    </ns12:ErrorReportType>
                </xsl:for-each>
            </ns12:ExceptionHandlerRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignFailure">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>582</pd:x>
        <pd:y>454</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="$_error/ns2:ErrorReport/Class=$_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                    <root>
                        <Type>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                        </Type>
                        <Detail>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                        </Detail>
                        <ErrorMessage>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                        </ErrorMessage>
                    </root>
                </xsl:when>
                <xsl:otherwise>
                    <root>
                        <Type>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                        </Type>
                        <Detail>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                        </Detail>
                        <ErrorMessage>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/ErrorMessage"/>
                        </ErrorMessage>
                    </root>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetCLEParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>150</pd:x>
        <pd:y>297</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/CreditAuthorization/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="AssignNonDetermisticError">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>528</pd:x>
        <pd:y>350</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Type>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/NONDETERMINISTIC_PAYMENTGATEWAY_RESPONSE/Type"/>
                </Type>
                <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx5:Errors/pfx5:Error/pfx5:Detail">
                    <Detail>
                        <xsl:value-of select="."/>
                    </Detail>
                </xsl:for-each>
                <xsl:variable name="ErrMsg" select="tib:concat-sequence-format($ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx5:Errors/pfx5:Error/pfx5:ErrorMessage, $_globalVariables/ns1:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator, true())"/>
                <xsl:choose>
                    <xsl:when test="string-length($ErrMsg)&lt;=$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/MaximumErrorMessageLength">
                        <ErrorMessage>
                            <xsl:value-of select="$ErrMsg"/>
                        </ErrorMessage>
                    </xsl:when>
                    <xsl:otherwise>
                        <ErrorMessage>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/GENERIC_ERROR/InvIncompleteRespErr"/>
                        </ErrorMessage>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignCriticalInfoMissingError">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>901</pd:x>
        <pd:y>53</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Type>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/MISSING_CRITICAL_FIELD_PAYMENTGATEWAY_RESPONSE/Type"/>
                </Type>
                <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx5:Errors/pfx5:Error/pfx5:Detail">
                    <Detail>
                        <xsl:value-of select="."/>
                    </Detail>
                </xsl:for-each>
                <ErrorMessage>
                    <xsl:value-of select="tib:concat-sequence-format($ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx5:Errors/pfx5:Error/pfx5:ErrorMessage, $_globalVariables/ns1:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator, true())"/>
                </ErrorMessage>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>136</pd:x>
        <pd:y>89</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceErrorTypes.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="SendExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>681</pd:x>
        <pd:y>53</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns12:ExceptionHandlerRequest>
                <ns12:envCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                </ns12:envCode>
                <ns12:appCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/AppCode"/>
                </ns12:appCode>
                <ns12:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns12:interfaceCode>
                <ns12:hostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </ns12:hostName>
                <ns12:timeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns12:timeStamp>
                <ns12:message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/MISSING_CRITICAL_FIELD_PAYMENTGATEWAY_RESPONSE/ErrorMessage"/>
                </ns12:message>
                <ns12:payload>
                    <xsl:value-of select="tib:render-xml($ParseValidationResponse/pfx11:PG_AuthorizationValidationResult)"/>
                </ns12:payload>
                <ns12:ErrorLevel>
                    <ns12:errorCode>
                        <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/MISSING_CRITICAL_FIELD_PAYMENTGATEWAY_RESPONSE/Type, $_globalVariables/ns1:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/MISSING_CRITICAL_FIELD_PAYMENTGATEWAY_RESPONSE/Detail)"/>
                    </ns12:errorCode>
                </ns12:ErrorLevel>
                <ns12:TransactionDetails>
                    <ns12:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns12:transactionDomain>
                    <ns12:transactionType>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Authorization/CLE/TransactionType"/>
                    </ns12:transactionType>
                    <ns12:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns12:transactionID>
                </ns12:TransactionDetails>
            </ns12:ExceptionHandlerRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>Validate</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Validate</pd:from>
        <pd:to>ParseValidationResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseValidationResponse</pd:from>
        <pd:to>AssignNonDetermisticError</pd:to>
        <pd:xpathDescription>NonDeteminstic</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx5:Errors/pfx5:Error[pfx5:Type=$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/NONDETERMINISTIC_PAYMENTGATEWAY_RESPONSE/Type]/pfx5:Type)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ParsePaymentGatewayResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>AssignFailure</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogRequestValidationExceptionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignFailure</pd:from>
        <pd:to>LogRequestValidationExceptionRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignNonDetermisticError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseValidationResponse</pd:from>
        <pd:to>ParsePaymentGatewayResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParsePaymentGatewayResponse</pd:from>
        <pd:to>SendExceptionRequest</pd:to>
        <pd:xpathDescription>Sensitive Data</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>(count($ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx5:Errors/pfx5:Error) &gt;1 
and
exists($ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx5:Errors/pfx5:Error[pfx5:Type=$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/MISSING_CRITICAL_FIELD_PAYMENTGATEWAY_RESPONSE/Type]/pfx5:Type) and $_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/WARNING_AS_ERROR=$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/BooleanSuccess
)
or
(count($ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx5:Errors/pfx5:Error) =1
and
exists($ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx5:Errors/pfx5:Error[pfx5:Type=$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/MISSING_CRITICAL_FIELD_PAYMENTGATEWAY_RESPONSE/Type]/pfx5:Type) and $_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/WARNING_AS_ERROR=$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/BooleanSuccess
and
not( contains($ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx5:Errors/pfx5:Error[1]/pfx5:ErrorMessage,$_globalVariables/ns1:GlobalVariables/Authorization/RetryConditionErrorDetail)))</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignCriticalInfoMissingError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetParams</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendExceptionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:xpathDescription>WARN_AS_SUCCESS</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendExceptionRequest</pd:from>
        <pd:to>AssignCriticalInfoMissingError</pd:to>
        <pd:xpathDescription>WARN_AS_ERROR</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/WARNING_AS_ERROR="true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ParsePaymentGatewayResponse</pd:from>
        <pd:to>AssignCriticalInfoMissingError</pd:to>
        <pd:xpathDescription>DUP_AUTH_CODE missing</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>(count($ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx5:Errors/pfx5:Error) =1
and
( contains($ParseValidationResponse/pfx11:PG_AuthorizationValidationResult/pfx5:Errors/pfx5:Error[1]/pfx5:ErrorMessage,$_globalVariables/ns1:GlobalVariables/Authorization/RetryConditionErrorDetail)))</pd:xpath>
    </pd:transition>
    <pd:label>
        <pd:name>Label (1) (2)</pd:name>
        <pd:description>XML Request Validator</pd:description>
        <pd:x>86</pd:x>
        <pd:y>26</pd:y>
        <pd:width>152</pd:width>
        <pd:height>33</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-3342388</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>