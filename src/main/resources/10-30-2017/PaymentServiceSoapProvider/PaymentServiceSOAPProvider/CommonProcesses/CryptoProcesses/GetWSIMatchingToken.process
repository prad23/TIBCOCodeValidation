<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx2="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://ecommerce.wsgc.com/2013/Common" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="www.tibco.com/plugin/java/JavaMethodActivityOutput" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="www.tibco.com/plugin/java/JavaMethodActivityInput" xmlns:ns3="http://www.tibco.com/pe/EngineTypes">
    <pd:name>CommonProcesses/CryptoProcesses/GetWSIMatchingToken.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="PAN" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>27</pd:startX>
    <pd:startY>84</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:if test="string-length($Error/root/ErrorMessage)=0">
                <TokenDetails>
                    <WSIMatchingTokenScheme>
                        <xsl:value-of select="$GetMatchingToken/javaCodeActivityOutput/matchtokenscheme"/>
                    </WSIMatchingTokenScheme>
                    <WSIMatchingTokenValue>
                        <xsl:value-of select="$GetMatchingToken/javaCodeActivityOutput/matchtokenvalue"/>
                    </WSIMatchingTokenValue>
                </TokenDetails>
            </xsl:if>
            <xsl:if test="string-length($Error/root/ErrorMessage)>0">
                <Error>
                    <Type>
                        <xsl:value-of select="$Error/root/ErrorType"/>
                    </Type>
                    <xsl:if test="$Error/root/ErrorDetail">
                        <Detail>
                            <xsl:value-of select="$Error/root/ErrorDetail"/>
                        </Detail>
                    </xsl:if>
                    <ErrorMessage>
                        <xsl:value-of select="$Error/root/ErrorMessage"/>
                    </ErrorMessage>
                </Error>
            </xsl:if>
            <xsl:if test="string-length($Error/root/CLE/ErrorReportType)>0">
                <CLEErrorReport>
                    <xsl:copy-of select="$Error/root/CLE/ErrorReportType/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$Error/root/CLE/ErrorReportType/@*"/>
                    <xsl:copy-of select="$Error/root/CLE/ErrorReportType/node()"/>
                </CLEErrorReport>
            </xsl:if>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="TokenDetails" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="WSIMatchingTokenScheme" type="xsd:string"/>
                                <xsd:element name="WSIMatchingTokenValue" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="Error" type="pfx:ErrorType" minOccurs="0"/>
                    <xsd:element name="CLEErrorReport" type="pfx2:ErrorReportType" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>767</pd:endX>
    <pd:endY>84</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Error>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="ErrorType" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="ErrorDetail" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="ErrorMessage" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="CLE" minOccurs="0">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="ErrorReportType" type="pfx2:ErrorReportType"/>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </Error>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1430416777192</pd:targetNamespace>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>619</pd:x>
        <pd:y>189</pd:y>
        <config>
            <variableName>Error</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <ErrorType>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonInternalErrors/WSIMatchingToken/COMMON_INTERNAL_ERROR_WSI_MATCHING_TOKEN/Type"/>
                </ErrorType>
                <xsl:if test="string-length($_globalVariables/ns:GlobalVariables/PaymentService/CommonInternalErrors/WSIMatchingToken/COMMON_INTERNAL_ERROR_WSI_MATCHING_TOKEN/Detail)>0">
                    <ErrorDetail>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonInternalErrors/WSIMatchingToken/COMMON_INTERNAL_ERROR_WSI_MATCHING_TOKEN/Detail"/>
                    </ErrorDetail>
                </xsl:if>
                <ErrorMessage>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CommonInternalErrors/WSIMatchingToken/COMMON_INTERNAL_ERROR_WSI_MATCHING_TOKEN/ErrorMessage"/>
                </ErrorMessage>
                <CLE>
                    <ErrorReportType>
                        <xsl:if test="$_error/ns3:ErrorReport/StackTrace">
                            <pfx2:stackTrace>
                                <xsl:value-of select="$_error/ns3:ErrorReport/StackTrace"/>
                            </pfx2:stackTrace>
                        </xsl:if>
                        <xsl:if test="$_error/ns3:ErrorReport/Msg">
                            <pfx2:msg>
                                <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                            </pfx2:msg>
                        </xsl:if>
                        <xsl:if test="$_error/ns3:ErrorReport/FullClass">
                            <pfx2:fullClass>
                                <xsl:value-of select="$_error/ns3:ErrorReport/FullClass"/>
                            </pfx2:fullClass>
                        </xsl:if>
                        <xsl:if test="$_error/ns3:ErrorReport/Class">
                            <pfx2:class>
                                <xsl:value-of select="$_error/ns3:ErrorReport/Class"/>
                            </pfx2:class>
                        </xsl:if>
                        <xsl:if test="$_error/ns3:ErrorReport/ProcessStack">
                            <pfx2:processStack>
                                <xsl:value-of select="$_error/ns3:ErrorReport/ProcessStack"/>
                            </pfx2:processStack>
                        </xsl:if>
                        <xsl:if test="$_error/ns3:ErrorReport/MsgCode">
                            <pfx2:msgCode>
                                <xsl:value-of select="$_error/ns3:ErrorReport/MsgCode"/>
                            </pfx2:msgCode>
                        </xsl:if>
                        <pfx2:data>
                            <xsl:value-of select="tib:render-xml($_error/ns3:ErrorReport/Data/*)"/>
                        </pfx2:data>
                    </ErrorReportType>
                </CLE>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuditBeginLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>238</pd:x>
        <pd:y>84</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/AuditLogMessage.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$GetTransactionDetails/root/InterfaceCode"/>
                </InterfaceCode>
                <AuditMessageType>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/IngrianRequest"/>
                </AuditMessageType>
                <payloadTrue>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/PayloadTrue"/>
                </payloadTrue>
                <pfx2:LogRequest>
                    <pfx2:envCode>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ENV"/>
                    </pfx2:envCode>
                    <pfx2:appCode>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CLE/AppCode"/>
                    </pfx2:appCode>
                    <pfx2:interfaceCode>
                        <xsl:value-of select="$GetTransactionDetails/root/InterfaceCode"/>
                    </pfx2:interfaceCode>
                    <pfx2:timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx2:timestamp>
                    <pfx2:message>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/IngrianRequestMsg"/>
                    </pfx2:message>
                    <pfx2:TransactionDetails>
                        <pfx2:transactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                        </pfx2:transactionDomain>
                        <pfx2:transactionType>
                            <xsl:value-of select="$GetTransactionDetails/root/TransactionType"/>
                        </pfx2:transactionType>
                        <pfx2:transactionID>
                            <xsl:value-of select="$GetTransactionDetails/root/TransactionId"/>
                        </pfx2:transactionID>
                    </pfx2:TransactionDetails>
                    <pfx2:AuditInfo>
                        <pfx2:payload>
                            <xsl:value-of select="''"/>
                        </pfx2:payload>
                        <pfx2:auditStep>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/IngrianRequest"/>
                        </pfx2:auditStep>
                    </pfx2:AuditInfo>
                </pfx2:LogRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuditEndLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>639</pd:x>
        <pd:y>84</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/AuditLogMessage.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$GetTransactionDetails/root/InterfaceCode"/>
                </InterfaceCode>
                <AuditMessageType>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/IngrianResponse"/>
                </AuditMessageType>
                <payloadTrue>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/PayloadTrue"/>
                </payloadTrue>
                <pfx2:LogRequest>
                    <pfx2:envCode>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ENV"/>
                    </pfx2:envCode>
                    <pfx2:appCode>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CLE/AppCode"/>
                    </pfx2:appCode>
                    <pfx2:interfaceCode>
                        <xsl:value-of select="$GetTransactionDetails/root/InterfaceCode"/>
                    </pfx2:interfaceCode>
                    <pfx2:timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx2:timestamp>
                    <pfx2:message>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/IngrianResponseMsg"/>
                    </pfx2:message>
                    <pfx2:TransactionDetails>
                        <pfx2:transactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                        </pfx2:transactionDomain>
                        <pfx2:transactionType>
                            <xsl:value-of select="$GetTransactionDetails/root/TransactionType"/>
                        </pfx2:transactionType>
                        <pfx2:transactionID>
                            <xsl:value-of select="$GetTransactionDetails/root/TransactionId"/>
                        </pfx2:transactionID>
                    </pfx2:TransactionDetails>
                    <pfx2:AuditInfo>
                        <pfx2:payload>
                            <xsl:value-of select="''"/>
                        </pfx2:payload>
                        <pfx2:auditStep>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CryptoProcesses/CLE/IngrianResponse"/>
                        </pfx2:auditStep>
                    </pfx2:AuditInfo>
                </pfx2:LogRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>482</pd:x>
        <pd:y>188</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetConfigHandle">
        <pd:type>com.tibco.plugin.java.JavaMethodActivity</pd:type>
        <pd:resourceType>ae.activities.JavaMethodActivity</pd:resourceType>
        <pd:x>365</pd:x>
        <pd:y>84</pd:y>
        <config>
            <ConstructDeclaredClass>false</ConstructDeclaredClass>
            <CacheConstructedClass>false</CacheConstructedClass>
            <InvokeCleanupMethod>false</InvokeCleanupMethod>
            <JavaGlobalInstance>/CommonProcesses/CryptoProcesses/CryptoEnvironment.serviceagent</JavaGlobalInstance>
            <MethodInfo>
                <className>com.wsgc.ecommerce.tokenization.runtime.EnvironmentHandle</className>
                <methodName>getConfigurationHandle</methodName>
                <methodReturn>com.wsgc.ecommerce.tokenization.runtime.ConfigurationHandle</methodReturn>
            </MethodInfo>
        </config>
        <pd:inputBindings>
            <ns2:JavaMethodActivityInput/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetMatchingToken">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>492</pd:x>
        <pd:y>84</pd:y>
        <config>
            <fileName>GetWSIMatchingTokenGetMatchingToken</fileName>
            <packageName>CommonProcesses.CryptoProcesses.GetWSIMatchingToken</packageName>
            <fullsource>package CommonProcesses.CryptoProcesses.GetWSIMatchingToken;
import java.util.*;
import java.io.*;
import com.wsgc.ecommerce.tokenization.runtime.ConfigurationHandle;
import com.wsgc.ecommerce.tokenization.MatchingToken;
public class GetWSIMatchingTokenGetMatchingToken{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected Object confighandle = null;
	protected String environment = "";
	protected String pan = "";
	protected String scheme = "";
	protected String matchtokenscheme = "";
	protected String matchtokenvalue = "";
	public Object getconfighandle() {
		return confighandle;
	}
	public void setconfighandle(Object val) {
		confighandle = val;
	}
	public String getenvironment() {
		return environment;
	}
	public void setenvironment(String val) {
		environment = val;
	}
	public String getpan() {
		return pan;
	}
	public void setpan(String val) {
		pan = val;
	}
	public String getscheme() {
		return scheme;
	}
	public void setscheme(String val) {
		scheme = val;
	}
	public String getmatchtokenscheme() {
		return matchtokenscheme;
	}
	public void setmatchtokenscheme(String val) {
		matchtokenscheme = val;
	}
	public String getmatchtokenvalue() {
		return matchtokenvalue;
	}
	public void setmatchtokenvalue(String val) {
		matchtokenvalue = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public GetWSIMatchingTokenGetMatchingToken() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : Object confighandle
	In  : String environment
	In  : String pan
	In  : String scheme
	Out : String matchtokenscheme
	Out : String matchtokenvalue
* Available Variables: DO NOT MODIFY *****/
try{
com.wsgc.ecommerce.tokenization.runtime.ConfigurationHandle ch = (com.wsgc.ecommerce.tokenization.runtime.ConfigurationHandle) getconfighandle();

MatchingToken mt = ch.getEnvironment(environment).getMatchingProvider().getMatchingToken(scheme, pan);

setmatchtokenvalue(mt.getValue());
setmatchtokenscheme(mt.getScheme());

} catch (Exception e) {

		e.printStackTrace();
	throw e;
	}      


}
}
</fullsource>
            <outputData>
                <row>
                    <fieldName>matchtokenscheme</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>matchtokenvalue</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </outputData>
            <inputData>
                <row>
                    <fieldName>confighandle</fieldName>
                    <fieldType>ObjectReference</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>environment</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>pan</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>scheme</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
            </inputData>
            <byteCode>
                <class>
                    <name>GetWSIMatchingTokenGetMatchingToken</name>
                    <byteCode>yv66vgAAADMAXAkAFAA4CQAUADkJABQAOgkAFAA7CQAUADwJABQAPQoAFQA+CAA/CgAUAEAHAEELAAoAQgoAQwBECwBFAEYKAEcASAoAFABJCgBHAEoKABQASwcATAoAEgBNBwBOBwBPAQAMY29uZmlnaGFuZGxlAQASTGphdmEvbGFuZy9PYmplY3Q7AQALZW52aXJvbm1lbnQBABJMamF2YS9sYW5nL1N0cmluZzsBAANwYW4BAAZzY2hlbWUBABBtYXRjaHRva2Vuc2NoZW1lAQAPbWF0Y2h0b2tlbnZhbHVlAQAPZ2V0Y29uZmlnaGFuZGxlAQAUKClMamF2YS9sYW5nL09iamVjdDsBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQAPc2V0Y29uZmlnaGFuZGxlAQAVKExqYXZhL2xhbmcvT2JqZWN0OylWAQAOZ2V0ZW52aXJvbm1lbnQBABQoKUxqYXZhL2xhbmcvU3RyaW5nOwEADnNldGVudmlyb25tZW50AQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAGZ2V0cGFuAQAGc2V0cGFuAQAJZ2V0c2NoZW1lAQAJc2V0c2NoZW1lAQATZ2V0bWF0Y2h0b2tlbnNjaGVtZQEAE3NldG1hdGNodG9rZW5zY2hlbWUBABJnZXRtYXRjaHRva2VudmFsdWUBABJzZXRtYXRjaHRva2VudmFsdWUBAAY8aW5pdD4BAAMoKVYBAAZpbnZva2UBAA1TdGFja01hcFRhYmxlBwBMAQAKRXhjZXB0aW9ucwEAClNvdXJjZUZpbGUBAChHZXRXU0lNYXRjaGluZ1Rva2VuR2V0TWF0Y2hpbmdUb2tlbi5qYXZhDAAWABcMABgAGQwAGgAZDAAbABkMABwAGQwAHQAZDAAwADEBAAAMAB4AHwEAO2NvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vcnVudGltZS9Db25maWd1cmF0aW9uSGFuZGxlDABQAFEHAFIMAFMAVAcAVQwAVgBXBwBYDABZACUMAC8AJwwAWgAlDAAtACcBABNqYXZhL2xhbmcvRXhjZXB0aW9uDABbADEBAFdDb21tb25Qcm9jZXNzZXMvQ3J5cHRvUHJvY2Vzc2VzL0dldFdTSU1hdGNoaW5nVG9rZW4vR2V0V1NJTWF0Y2hpbmdUb2tlbkdldE1hdGNoaW5nVG9rZW4BABBqYXZhL2xhbmcvT2JqZWN0AQAOZ2V0RW52aXJvbm1lbnQBAE8oTGphdmEvbGFuZy9TdHJpbmc7KUxjb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL3J1bnRpbWUvRW52aXJvbm1lbnRIYW5kbGU7AQA5Y29tL3dzZ2MvZWNvbW1lcmNlL3Rva2VuaXphdGlvbi9ydW50aW1lL0Vudmlyb25tZW50SGFuZGxlAQATZ2V0TWF0Y2hpbmdQcm92aWRlcgEAOSgpTGNvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vTWF0Y2hpbmdUb2tlblByb3ZpZGVyOwEANWNvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vTWF0Y2hpbmdUb2tlblByb3ZpZGVyAQAQZ2V0TWF0Y2hpbmdUb2tlbgEAVShMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL1N0cmluZzspTGNvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vTWF0Y2hpbmdUb2tlbjsBAC1jb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL01hdGNoaW5nVG9rZW4BAAhnZXRWYWx1ZQEACWdldFNjaGVtZQEAD3ByaW50U3RhY2tUcmFjZQAhABQAFQAAAAYABAAWABcAAAAEABgAGQAAAAQAGgAZAAAABAAbABkAAAAEABwAGQAAAAQAHQAZAAAADgABAB4AHwABACAAAAAdAAEAAQAAAAUqtAABsAAAAAEAIQAAAAYAAQAAAA8AAQAiACMAAQAgAAAAIgACAAIAAAAGKiu1AAGxAAAAAQAhAAAACgACAAAAEgAFABMAAQAkACUAAQAgAAAAHQABAAEAAAAFKrQAArAAAAABACEAAAAGAAEAAAAVAAEAJgAnAAEAIAAAACIAAgACAAAABiortQACsQAAAAEAIQAAAAoAAgAAABgABQAZAAEAKAAlAAEAIAAAAB0AAQABAAAABSq0AAOwAAAAAQAhAAAABgABAAAAGwABACkAJwABACAAAAAiAAIAAgAAAAYqK7UAA7EAAAABACEAAAAKAAIAAAAeAAUAHwABACoAJQABACAAAAAdAAEAAQAAAAUqtAAEsAAAAAEAIQAAAAYAAQAAACEAAQArACcAAQAgAAAAIgACAAIAAAAGKiu1AASxAAAAAQAhAAAACgACAAAAJAAFACUAAQAsACUAAQAgAAAAHQABAAEAAAAFKrQABbAAAAABACEAAAAGAAEAAAAnAAEALQAnAAEAIAAAACIAAgACAAAABiortQAFsQAAAAEAIQAAAAoAAgAAACoABQArAAEALgAlAAEAIAAAAB0AAQABAAAABSq0AAawAAAAAQAhAAAABgABAAAALQABAC8AJwABACAAAAAiAAIAAgAAAAYqK7UABrEAAAABACEAAAAKAAIAAAAwAAUAMQABADAAMQABACAAAABcAAIAAQAAACgqtwAHKgG1AAEqEgi1AAIqEgi1AAMqEgi1AAQqEgi1AAUqEgi1AAaxAAAAAQAhAAAAIgAIAAAAMwAEAAgACQAJAA8ACgAVAAsAGwAMACEADQAnADQAAQAyADEAAgAgAAAAiwADAAMAAAA+KrYACcAACkwrKrQAArkACwIAtgAMKrQABCq0AAO5AA0DAE0qLLYADrYADyostgAQtgARpwAKTCu2ABMrv7EAAQAAADMANgASAAIAIQAAACYACQAAAD8ACABBACMAQwArAEQAMwBKADYARgA3AEgAOwBJAD0ATQAzAAAABwACdgcANAYANQAAAAQAAQASAAEANgAAAAIANw==</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <confighandle>
                    <xsl:value-of select="$GetConfigHandle/ns1:JavaMethodActivityOutput/MethodReturnValue"/>
                </confighandle>
                <environment>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ENV"/>
                </environment>
                <pan>
                    <xsl:value-of select="tib:trim($Start/root/PAN)"/>
                </pan>
                <scheme>
                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/PaymentService/TokenConstants/WSIMarketingHashScheme,$_globalVariables/ns:GlobalVariables/PaymentService/TokenConstants/EnvId)"/>
                </scheme>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetTransactionDetails">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>121</pd:x>
        <pd:y>84</pd:y>
        <config>
            <variableConfig>/CommonProcesses/InterfaceDetails.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetTransactionDetails</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetConfigHandle</pd:from>
        <pd:to>GetMatchingToken</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetMatchingToken</pd:from>
        <pd:to>AuditEndLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditEndLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditBeginLog</pd:from>
        <pd:to>GetConfigHandle</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTransactionDetails</pd:from>
        <pd:to>AuditBeginLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>