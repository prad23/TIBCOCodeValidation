<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://services.wsgc.com/2014/Payment" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns3="http://www.wsgc.com/schemas/common/PaymentServiceValidations.xsd" xmlns:ns4="http://www.wsgc.com/schemas/common/PaymentServiceErrorTypes.xsd" xmlns:ns5="http://www.wsgc.com/schemas/TibcoInternal/GenericEntityDataTranslator.xsd" xmlns:pfx3="http://services.wsgc.com/soap/paymentservice.wsdl" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx5="http://ecommerce.wsgc.com/2013/Common" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:pfx8="http://www.sterlingcommerce.com/documentation/YFS/LRCReturn/Request" xmlns:pfx41="http://www.wsgc.com/schemas/service/PaymentError.xsd">
    <xsd:import namespace="http://ecommerce.wsgc.com/2013/Common" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2013/Common/base-types.xsd"/>
    <xsd:import namespace="http://www.wsgc.com/schemas/service/PaymentError.xsd" schemaLocation="/SharedResources/XMLSchemas/PaymentServiceInternal/PaymentErrorSchema.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/lrc-return.xsd"/>
    <xsd:import namespace="http://www.sterlingcommerce.com/documentation/YFS/LRCReturn/Request" schemaLocation="/SharedResources/XMLSchemas/Sterling/Payment/LRCReturnRequest.xsd"/>
    <wsdl:import namespace="http://services.wsgc.com/soap/paymentservice.wsdl" location="/WSDL/PaymentServices.wsdl"/>
    <pd:name>BusinessProcesses/LrcReturn/RequestProcessors/ValidateSOAPRequest.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx8:Payment"/>
    <pd:startX>80</pd:startX>
    <pd:startY>210</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:if test="string-length($MapSOAPRequestToPaymentServiceRequest/pfx:LrcReturnRequest/@version)=0">
                <pfx:LrcReturnResponse>
                    <xsl:attribute name="version">
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/LrcReturn/MessageVersion"/>
                    </xsl:attribute>
                    <SystemContext>
                        <EnvironmentIdentifier>
                            <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                        </EnvironmentIdentifier>
                        <RegionIdentifier>
                            <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                        </RegionIdentifier>
                        <SourceSystemIdentifier>
                            <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                        </SourceSystemIdentifier>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/pfx8:Payment/@MsgTransactionID)>0">
                                <TransactionId>
                                    <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/LrcReturn/Constants/TransactionIdPrefix,$Start/pfx8:Payment/@MsgTransactionID)"/>
                                </TransactionId>
                            </xsl:when>
                            <xsl:otherwise>
                                <TransactionId>
                                    <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/LrcReturn/Constants/TransactionIdPrefix,concat(tib:format-dateTime($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns1:ProcessContext/ProcessId,  $_globalVariables/ns2:GlobalVariables/ENV   , BW:getHostName()))"/>
                                </TransactionId>
                            </xsl:otherwise>
                        </xsl:choose>
                        <TransactionTime>
                            <xsl:value-of select="current-dateTime()"/>
                        </TransactionTime>
                    </SystemContext>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/pfx8:Payment/@EnterpriseCode) > 0">
                            <PaymentContext>
                                <Concept>
                                    <xsl:value-of select="$Start/pfx8:Payment/@EnterpriseCode"/>
                                </Concept>
                                <Channel>
                                    <xsl:value-of select="$Start/pfx8:Payment/@EntryType"/>
                                </Channel>
                            </PaymentContext>
                        </xsl:when>
                        <xsl:otherwise>
                            <PaymentContext>
                                <Concept>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </Concept>
                                <Channel>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </Channel>
                            </PaymentContext>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="$Process/root/Error">
                        <Error>
                            <Type>
                                <xsl:value-of select="Type"/>
                            </Type>
                            <xsl:for-each select="Detail">
                                <Detail>
                                    <xsl:value-of select="."/>
                                </Detail>
                            </xsl:for-each>
                            <ErrorMessage>
                                <xsl:value-of select="ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:for-each>
                </pfx:LrcReturnResponse>
            </xsl:if>
            <xsl:if test="string-length($MapSOAPRequestToPaymentServiceRequest/pfx:LrcReturnRequest/@version)>0">
                <xsl:copy-of select="$MapSOAPRequestToPaymentServiceRequest/pfx:LrcReturnRequest"/>
            </xsl:if>
            <xsl:choose>
                <xsl:when test="string-length($Start/pfx8:Payment/@MsgTransactionID)>0">
                    <TransactionId>
                        <xsl:value-of select="concat($Start/pfx8:Payment/@MsgTransactionID,$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/TransactionIdSeparator,$Start/pfx8:Payment/@OrderNo)"/>
                    </TransactionId>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:if test="$Process/root/TransactionId">
                        <TransactionId>
                            <xsl:value-of select="$Process/root/TransactionId"/>
                        </TransactionId>
                    </xsl:if>
                </xsl:otherwise>
            </xsl:choose>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:LrcReturnResponse" minOccurs="0"/>
                    <xsd:element ref="pfx:LrcReturnRequest" minOccurs="0"/>
                    <xsd:element name="TransactionId" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>920</pd:endX>
    <pd:endY>346</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Process>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="Error" type="pfx5:ErrorType"/>
                        <xsd:element name="TransactionId" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </Process>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1414172991752</pd:targetNamespace>
    <pd:activity name="AssignSafeFailure">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>754</pd:x>
        <pd:y>479</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="$_error/ns1:ErrorReport/Class=$_globalVariables/ns2:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:when>
                    <xsl:when test="$_error/ns1:ErrorReport/Class=$_globalVariables/ns2:GlobalVariables/PaymentService/ValidationConstants/XML_TRANSFORMATION_EXCEPTION_CLASS">
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:when>
                    <xsl:otherwise>
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:otherwise>
                </xsl:choose>
                <TransactionId>
                    <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/LrcReturn/Constants/TransactionIdPrefix,&#xA;tib:format-dateTime($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   &#xA;BW:getHostName())"/>
                </TransactionId>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignOtherError">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>564</pd:x>
        <pd:y>347</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Error>
                    <xsl:choose>
                        <xsl:when test="string-length($ParseValidationResponse/pfx41:Errors/pfx41:Error[./pfx41:Type=$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INCOMPLETE_REQUEST_MULTIPLE_ISSUES/Type])>0&#xA;and&#xA;string-length($ParseValidationResponse/pfx41:Errors/pfx41:Error[./pfx41:Type=$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST_MULTIPLE_ISSUES/Type])>0">
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INCOMPLETE_INVALID_REQUEST_MULTIPLE_ISSUES/Type"/>
                            </Type>
                        </xsl:when>
                        <xsl:when test="string-length($ParseValidationResponse/pfx41:Errors/pfx41:Error[./pfx41:Type=$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INCOMPLETE_REQUEST_MULTIPLE_ISSUES/Type])>0">
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INCOMPLETE_REQUEST_MULTIPLE_ISSUES/Type"/>
                            </Type>
                        </xsl:when>
                        <xsl:otherwise>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST_MULTIPLE_ISSUES/Type"/>
                            </Type>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="$ParseValidationResponse/pfx41:Errors/pfx41:Error/pfx41:Detail">
                        <Detail>
                            <xsl:value-of select="."/>
                        </Detail>
                    </xsl:for-each>
                    <xsl:variable name="ErrMsg" select="tib:concat-sequence-format($ParseValidationResponse/pfx41:Errors/pfx41:Error/pfx41:ErrorMessage ,$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,true())"/>
                    <xsl:choose>
                        <xsl:when test="string-length($ErrMsg)&lt;=200">
                            <ErrorMessage>
                                <xsl:value-of select="$ErrMsg"/>
                            </ErrorMessage>
                        </xsl:when>
                        <xsl:otherwise>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/GENERIC_ERROR/InvIncompleteReqErr"/>
                            </ErrorMessage>
                        </xsl:otherwise>
                    </xsl:choose>
                </Error>
                <TransactionId>
                    <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/LrcReturn/Constants/TransactionIdPrefix,&#xA;tib:format-dateTime($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   &#xA;BW:getHostName())"/>
                </TransactionId>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>563</pd:x>
        <pd:y>477</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetPaymentErrorType">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>238</pd:x>
        <pd:y>100</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceErrorTypes.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetPaymentValidationParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>238</pd:x>
        <pd:y>209</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceValidations.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogRequestValidationExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>921</pd:x>
        <pd:y>481</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns:ExceptionHandlerRequest>
                <ns:envCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ENV"/>
                </ns:envCode>
                <ns:appCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/AppCode"/>
                </ns:appCode>
                <ns:interfaceCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/LrcReturn/CLE/SoapInterfaceCode"/>
                </ns:interfaceCode>
                <ns:hostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </ns:hostName>
                <ns:timeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns:timeStamp>
                <ns:message>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </ns:message>
                <ns:payload>
                    <xsl:value-of select="tib:render-xml($Start/pfx8:Payment)"/>
                </ns:payload>
                <ns:ErrorLevel>
                    <ns:errorCode>
                        <xsl:value-of select="concat($Process/root/Error/Type, $_globalVariables/ns2:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$Process/root/Error/Detail[1])"/>
                    </ns:errorCode>
                </ns:ErrorLevel>
                <ns:TransactionDetails>
                    <ns:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns:transactionDomain>
                    <ns:transactionType>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/LrcReturn/CLE/TransactionType"/>
                    </ns:transactionType>
                    <ns:transactionID>
                        <xsl:value-of select="$Process/root/TransactionId"/>
                    </ns:transactionID>
                </ns:TransactionDetails>
                <xsl:for-each select="$_error/ns1:ErrorReport">
                    <ns:ErrorReportType>
                        <ns:stackTrace>
                            <xsl:value-of select="StackTrace"/>
                        </ns:stackTrace>
                        <ns:msg>
                            <xsl:value-of select="Msg"/>
                        </ns:msg>
                        <ns:fullClass>
                            <xsl:value-of select="FullClass"/>
                        </ns:fullClass>
                        <ns:class>
                            <xsl:value-of select="Class"/>
                        </ns:class>
                        <ns:processStack>
                            <xsl:value-of select="ProcessStack"/>
                        </ns:processStack>
                        <xsl:if test="MsgCode">
                            <ns:msgCode>
                                <xsl:value-of select="MsgCode"/>
                            </ns:msgCode>
                        </xsl:if>
                        <ns:data>
                            <xsl:value-of select="Data/*"/>
                        </ns:data>
                    </ns:ErrorReportType>
                </xsl:for-each>
            </ns:ExceptionHandlerRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapSOAPRequestToPaymentServiceRequest">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>913</pd:x>
        <pd:y>70</pd:y>
        <config>
            <element ref="pfx:LrcReturnRequest"/>
        </config>
        <pd:inputBindings>
            <pfx:LrcReturnRequest>
                <xsl:attribute name="version">
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/LrcReturn/MessageVersion"/>
                </xsl:attribute>
                <SystemContext>
                    <EnvironmentIdentifier>
                        <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@EnvIdentifier"/>
                    </EnvironmentIdentifier>
                    <RegionIdentifier>
                        <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@RegIdentifier"/>
                    </RegionIdentifier>
                    <SourceSystemIdentifier>
                        <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@SourceSysID"/>
                    </SourceSystemIdentifier>
                    <TransactionId>
                        <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@MsgTransactionID"/>
                    </TransactionId>
                    <TransactionTime>
                        <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@MsgTransactionTime"/>
                    </TransactionTime>
                </SystemContext>
                <PaymentContext>
                    <Concept>
                        <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@EnterpriseCode"/>
                    </Concept>
                    <Channel>
                        <xsl:value-of select="if($ParseSOAPRequest/pfx8:Payment/@EntryType=$_globalVariables/ns2:GlobalVariables/LrcReturn/BWTransformation/ECOMChannel &#xA;or &#xA;$ParseSOAPRequest/pfx8:Payment/@EntryType= $_globalVariables/ns2:GlobalVariables/LrcReturn/BWTransformation/WEBChannel &#xA;or&#xA;$ParseSOAPRequest/pfx8:Payment/@EntryType= $_globalVariables/ns2:GlobalVariables/LrcReturn/BWTransformation/ECOMMChannel)&#xA;then&#xA;$_globalVariables/ns2:GlobalVariables/LrcReturn/BWTransformation/ECOMChannel&#xA;else if($ParseSOAPRequest/pfx8:Payment/@EntryType=$_globalVariables/ns2:GlobalVariables/LrcReturn/BWTransformation/CCUIChannel&#xA;or &#xA;$ParseSOAPRequest/pfx8:Payment/@EntryType=$_globalVariables/ns2:GlobalVariables/LrcReturn/BWTransformation/CCAChannel)&#xA;then &#xA;$_globalVariables/ns2:GlobalVariables/LrcReturn/BWTransformation/CCUIChannel&#xA;else&#xA;$Start/pfx8:Payment/@EntryType"/>
                    </Channel>
                    <CareCenter>
                        <xsl:if test="string-length($ParseSOAPRequest/pfx8:Payment/@EnteredBy) > 0&#xA;and&#xA;$ParseSOAPRequest/pfx8:Payment/@DocumentType !=$_globalVariables/ns2:GlobalVariables/LrcReturn/SterlingCancelDocType">
                            <AssociateId>
                                <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@EnteredBy"/>
                            </AssociateId>
                        </xsl:if>
                    </CareCenter>
                </PaymentContext>
                <OrderContext>
                    <xsl:attribute name="omsOrderId">
                        <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@OrderNo"/>
                    </xsl:attribute>
                    <OrderTime>
                        <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@OrderDate"/>
                    </OrderTime>
                </OrderContext>
                <ConsumerTransactionId>
                    <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@ChargeTransactionKey"/>
                </ConsumerTransactionId>
                <Tender>
                    <Type>
                        <Code>
                            <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@PaymentType"/>
                        </Code>
                        <xsl:if test="string-length($ParseSOAPRequest/pfx8:Payment/@PaymentReference6)>0">
                            <SubCode>
                                <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@PaymentReference6"/>
                            </SubCode>
                        </xsl:if>
                    </Type>
                    <CertificateNumber>
                        <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@SvcNo"/>
                    </CertificateNumber>
                </Tender>
                <CurrencyCode>
                    <xsl:value-of select="$ParseSOAPRequest/pfx8:Payment/@Currency"/>
                </CurrencyCode>
                <ReturnAmount>
                    <xsl:value-of select="abs($ParseSOAPRequest/pfx8:Payment/@RequestAmount)"/>
                </ReturnAmount>
                <xsl:if test="count($GenericEntityTranslator/ns5:EntityNameValuePairs/ns5:EntityNameValue[ns5:EntityName=$ParseSOAPRequest/pfx8:Payment/@DocumentType]/ns5:EntityValue)>0">
                    <xsl:if test="$GenericEntityTranslator/ns5:EntityNameValuePairs/ns5:EntityNameValue[ns5:EntityName=$ParseSOAPRequest/pfx8:Payment/@DocumentType]/ns5:EntityValue[1]">
                        <ReturnDescription>
                            <xsl:value-of select="$GenericEntityTranslator/ns5:EntityNameValuePairs/ns5:EntityNameValue[ns5:EntityName=$ParseSOAPRequest/pfx8:Payment/@DocumentType]/ns5:EntityValue[1]"/>
                        </ReturnDescription>
                    </xsl:if>
                </xsl:if>
            </pfx:LrcReturnRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseValidationResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>562</pd:x>
        <pd:y>209</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx41:Errors"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Validate/xmlString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseSOAPRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>566</pd:x>
        <pd:y>66</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx8:Payment"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="tib:render-xml($Start/pfx8:Payment)"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Validate">
        <pd:type>com.tibco.plugin.xml.XMLTransformActivity</pd:type>
        <pd:resourceType>ae.activities.XMLTransformActivity</pd:resourceType>
        <pd:x>399</pd:x>
        <pd:y>209</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <engine>Saxon</engine>
        </config>
        <pd:inputBindings>
            <textInput>
                <xmlString>
                    <xsl:value-of select="tib:render-xml($Start/pfx8:Payment)"/>
                </xmlString>
                <xsl:variable name="var" select="$_globalVariables/ns2:GlobalVariables/LrcReturn/Validation/SoapRequestValidationXslt"/>
                <stylesheet>
                    <xsl:value-of select="$GetPaymentValidationParams/ns3:PaymentServiceValidations/ns3:PaymentServiceValidation[ns3:RuleName =$var]/ns3:RuleContent"/>
                </stylesheet>
                <parameter>
                    <name>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/ValidationConstants/XSLT_VALIDATION_PARAM"/>
                    </name>
                    <value>
                        <xsl:value-of select="tib:render-xml($GetPaymentErrorType/ns4:PaymentServiceErrorTypes)"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="true()"/>
                    </isXMLDocument>
                </parameter>
            </textInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenericEntityTranslator">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>713</pd:x>
        <pd:y>69</pd:y>
        <config>
            <processName>/CommonProcesses/GenericEntityTranslator.process</processName>
        </config>
        <pd:inputBindings>
            <EntityDataTranslatorInput>
                <EntityLookupData>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/LookupTranslation/GenericEntityTranslator/EntityLookUpData"/>
                </EntityLookupData>
                <FieldDelimiter>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/LookupTranslation/GenericEntityTranslator/FieldDelimiter"/>
                </FieldDelimiter>
                <RecordDelimiter>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/LookupTranslation/GenericEntityTranslator/RecordDelimiter"/>
                </RecordDelimiter>
            </EntityDataTranslatorInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>AssignSafeFailure</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapSOAPRequestToPaymentServiceRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseSOAPRequest</pd:from>
        <pd:to>GenericEntityTranslator</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseValidationResponse</pd:from>
        <pd:to>AssignOtherError</pd:to>
        <pd:xpathDescription>Failed</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ParseValidationResponse/pfx41:Errors/pfx41:Error[1]/pfx41:Type)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignOtherError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseValidationResponse</pd:from>
        <pd:to>ParseSOAPRequest</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignSafeFailure</pd:from>
        <pd:to>LogRequestValidationExceptionRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogRequestValidationExceptionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetPaymentValidationParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPaymentValidationParams</pd:from>
        <pd:to>Validate</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Validate</pd:from>
        <pd:to>ParseValidationResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetPaymentErrorType</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPaymentErrorType</pd:from>
        <pd:to>Validate</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GenericEntityTranslator</pd:from>
        <pd:to>MapSOAPRequestToPaymentServiceRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Transform SOAP to Xml here</pd:description>
        <pd:x>1112</pd:x>
        <pd:y>71</pd:y>
        <pd:width>191</pd:width>
        <pd:height>40</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-3342388</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>