<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://services.wsgc.com/2014/Payment" xmlns:ns="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns3="http://www.wsgc.com/schemas/common/PaymentGatewayCredentials.xsd" xmlns:ns4="http://www.wsgc.com/schemas/common/PaymentGatewayVerifoneCredentials.xsd" xmlns:ns5="http://www.wsgc.com/schemas/common/PaymentServiceSVCBalanceInqPins.xsd" xmlns:pfx3="http://ecommerce.wsgc.com/2013/Common" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns6="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/LrcRedemptionDTCMORequest" xmlns:ns7="http://www.wsgc.com/schemas/common/PaymentServiceDTCMOConceptsChannels.xsd" xmlns:pfx5="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Gift/Redemption" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions">
    <xsd:import namespace="http://ecommerce.wsgc.com/2013/Common" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2013/Common/base-types.xsd"/>
    <xsd:import namespace="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Gift/Redemption" schemaLocation="/SharedResources/XMLSchemas/Verifone/UGP-V1/UGPGiftRedemptionRequest.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/lrc-redemption.xsd"/>
    <pd:name>BusinessProcesses/LrcRedemption/RequestProcessors/MapPaymentGatewayRequest.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:LrcRedemptionRequest"/>
    <pd:startX>96</pd:startX>
    <pd:startY>151</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:if test="string-length($Process/root/Error/Type)>0">
                <pfx:LrcRedemptionResponse>
                    <xsl:attribute name="version">
                        <xsl:value-of select="$Start/pfx:LrcRedemptionRequest/@version"/>
                    </xsl:attribute>
                    <SystemContext>
                        <EnvironmentIdentifier>
                            <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                        </EnvironmentIdentifier>
                        <RegionIdentifier>
                            <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                        </RegionIdentifier>
                        <SourceSystemIdentifier>
                            <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix,BW:getHostName())"/>
                        </SourceSystemIdentifier>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/pfx:LrcRedemptionRequest/SystemContext/TransactionId)>0">
                                <TransactionId>
                                    <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/LrcRedemption/Constants/TransactionIdPrefix,$Start/pfx:LrcRedemptionRequest/SystemContext/TransactionId)"/>
                                </TransactionId>
                            </xsl:when>
                            <xsl:otherwise>
                                <TransactionId>
                                    <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/SvcActivation/Constants/TransactionIdPrefix, tib:format-dateTime($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns1:ProcessContext/ProcessId,  $_globalVariables/ns2:GlobalVariables/ENV   , BW:getHostName())"/>
                                </TransactionId>
                            </xsl:otherwise>
                        </xsl:choose>
                        <TransactionTime>
                            <xsl:value-of select="current-dateTime()"/>
                        </TransactionTime>
                    </SystemContext>
                    <xsl:copy-of select="$Start/pfx:LrcRedemptionRequest/PaymentContext"/>
                    <Error>
                        <Type>
                            <xsl:value-of select="$Process/root/Error/Type"/>
                        </Type>
                        <Detail>
                            <xsl:value-of select="$Process/root/Error/Detail[1]"/>
                        </Detail>
                        <ErrorMessage>
                            <xsl:value-of select="$Process/root/Error/ErrorMessage"/>
                        </ErrorMessage>
                    </Error>
                </pfx:LrcRedemptionResponse>
            </xsl:if>
            <paymentgatewayrequest>
                <xsl:value-of select="$Render-Data/Text"/>
            </paymentgatewayrequest>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:LrcRedemptionResponse" minOccurs="0"/>
                    <xsd:element name="paymentgatewayrequest" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>747</pd:endX>
    <pd:endY>151</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Process>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="Error" type="pfx3:ErrorType"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </Process>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1414172991752</pd:targetNamespace>
    <pd:activity name="AssignSafeFailure">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>513</pd:x>
        <pd:y>345</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="$_error/ns1:ErrorReport/Class=$_globalVariables/ns2:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:when>
                    <xsl:otherwise>
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>274</pd:x>
        <pd:y>345</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetCLEParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>214</pd:x>
        <pd:y>151</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/LrcRedemption/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogRequestValidationExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>743</pd:x>
        <pd:y>345</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns:ExceptionHandlerRequest>
                <ns:envCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ENV"/>
                </ns:envCode>
                <ns:appCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/AppCode"/>
                </ns:appCode>
                <ns:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns:interfaceCode>
                <ns:hostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </ns:hostName>
                <ns:timeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns:timeStamp>
                <ns:message>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </ns:message>
                <ns:payload>
                    <xsl:value-of select="tib:render-xml($Start/pfx:LrcRedemptionRequest)"/>
                </ns:payload>
                <ns:ErrorLevel>
                    <ns:errorCode>
                        <xsl:value-of select="concat($Process/root/Error/Type, $_globalVariables/ns2:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$Process/root/Error/Detail[1])"/>
                    </ns:errorCode>
                </ns:ErrorLevel>
                <ns:TransactionDetails>
                    <ns:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns:transactionDomain>
                    <ns:transactionType>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/LrcRedemption/CLE/TransactionType"/>
                    </ns:transactionType>
                    <ns:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns:transactionID>
                </ns:TransactionDetails>
                <xsl:for-each select="$_error/ns1:ErrorReport">
                    <ns:ErrorReportType>
                        <ns:stackTrace>
                            <xsl:value-of select="StackTrace"/>
                        </ns:stackTrace>
                        <ns:msg>
                            <xsl:value-of select="Msg"/>
                        </ns:msg>
                        <ns:fullClass>
                            <xsl:value-of select="FullClass"/>
                        </ns:fullClass>
                        <ns:class>
                            <xsl:value-of select="Class"/>
                        </ns:class>
                        <ns:processStack>
                            <xsl:value-of select="ProcessStack"/>
                        </ns:processStack>
                        <xsl:if test="MsgCode">
                            <ns:msgCode>
                                <xsl:value-of select="MsgCode"/>
                            </ns:msgCode>
                        </xsl:if>
                        <ns:data>
                            <xsl:value-of select="Data/*"/>
                        </ns:data>
                    </ns:ErrorReportType>
                </xsl:for-each>
            </ns:ExceptionHandlerRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render Data">
        <pd:type>com.tibco.plugin.parse.RenderActivity</pd:type>
        <pd:resourceType>ae.activities.RenderActivity</pd:resourceType>
        <pd:x>482</pd:x>
        <pd:y>150</pd:y>
        <config>
            <ParseSharedConfig>/SharedResources/DataFormat/PaymentService/LrcRedemptionRequest.sharedparse</ParseSharedConfig>
        </config>
        <pd:inputBindings>
            <Rows>
                <ns6:LrcRedemptionDTCMORequest>
                    <ns6:TransactionID>
                        <xsl:value-of select="concat(tib:right(tib:pad($Start/pfx:LrcRedemptionRequest/ConsumerTransactionId, 15, 0),15),tib:format-dateTime($_globalVariables/ns2:GlobalVariables/LrcRedemption/DTCMO/TimeFormat, current-dateTime()))"/>
                    </ns6:TransactionID>
                    <ns6:RequestType>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/RequestType"/>
                    </ns6:RequestType>
                    <ns6:PaymentType>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/PaymentType"/>
                    </ns6:PaymentType>
                    <ns6:LRCOverrideFlag>
                        <xsl:value-of select="if(string-length($Start/pfx:LrcRedemptionRequest/CanOverrideExpiration) > 0)&#xA;then&#xA;if($Start/pfx:LrcRedemptionRequest/CanOverrideExpiration='true')&#xA;  then&#xA;    $_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/IsOverridden&#xA;  else&#xA;  $_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/IsNotOverridden&#xA;else&#xA;  if(string-length($Start/pfx:LrcRedemptionRequest/Authorization/Metadata[@type=$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/TransactionMetaData/ExpirationOveridden])> 0)&#xA;       then&#xA;          if($Start/pfx:LrcRedemptionRequest/Authorization/Metadata[@type=$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/TransactionMetaData/ExpirationOveridden]='true') &#xA;                 then&#xA;         &#x9;&#x9; $_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/IsOverridden&#xA;&#x9;&#x9;    else&#xA;       &#x9;&#x9;         $_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/IsNotOverridden&#xA;     else&#xA;          $_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/IsNotOverridden"/>
                    </ns6:LRCOverrideFlag>
                    <ns6:Concept>
                        <xsl:value-of select="$GetPaymentServiceDTCMOConceptsChannels/ns7:PaymentServiceDTCConceptsChannels/ns7:PaymentServiceDTCMOConceptChannel[$Start/pfx:LrcRedemptionRequest/PaymentContext/Concept  = ns7:EPSConceptCode]/ns7:DTCMOConceptCode"/>
                    </ns6:Concept>
                    <ns6:Channel>
                        <xsl:value-of select="$GetPaymentServiceDTCMOConceptsChannels/ns7:PaymentServiceDTCConceptsChannels/ns7:PaymentServiceDTCMOConceptChannel[$Start/pfx:LrcRedemptionRequest/PaymentContext/Channel  = ns7:EPSChannelCode]/ns7:DTCMOChannelCode"/>
                    </ns6:Channel>
                    <ns6:OrderNumber>
                        <xsl:value-of select="$Start/pfx:LrcRedemptionRequest/OrderContext/@omsOrderId"/>
                    </ns6:OrderNumber>
                    <ns6:CertificateNumber>
                        <xsl:value-of select="$Start/pfx:LrcRedemptionRequest/Tender/CertificateNumber"/>
                    </ns6:CertificateNumber>
                    <ns6:Transactiondate>
                        <xsl:value-of select="tib:format-dateTime($_globalVariables/ns2:GlobalVariables/LrcRedemption/DTCMO/TransactionDateFormat,$Start/pfx:LrcRedemptionRequest/SystemContext/TransactionTime)"/>
                    </ns6:Transactiondate>
                    <ns6:Transactiontime>
                        <xsl:value-of select="tib:format-dateTime($_globalVariables/ns2:GlobalVariables/LrcRedemption/DTCMO/TransactionTimeFormat,$Start/pfx:LrcRedemptionRequest/SystemContext/TransactionTime)"/>
                    </ns6:Transactiontime>
                    <ns6:OrderTotal>
                        <xsl:value-of select="tib:string-round-fraction($Start/pfx:LrcRedemptionRequest/LegacySupport/OrderTotalAmount, 2)"/>
                    </ns6:OrderTotal>
                    <ns6:OrderTaker>
                        <xsl:value-of select="if($Start/pfx:LrcRedemptionRequest/PaymentContext/Channel=$_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/ECOMChannel &#xA;or&#xA;$Start/pfx:LrcRedemptionRequest/PaymentContext/Channel=$_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/ECOMMChannel&#xA;or&#xA;$Start/pfx:LrcRedemptionRequest/PaymentContext/Channel=$_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/WEBChannel)&#xA;then&#xA;$_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/Internet&#xA;else&#xA;if($Start/pfx:LrcRedemptionRequest/PaymentContext/Channel=$_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/CCUIChannel&#xA;or&#xA;$Start/pfx:LrcRedemptionRequest/PaymentContext/Channel=$_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/CCAChannel)&#xA;then&#xA;$_globalVariables/ns2:GlobalVariables/LrcRedemption/BWTransformation/UserId&#xA;else&#xA;&quot;&quot;"/>
                    </ns6:OrderTaker>
                    <ns6:OrderDate>
                        <xsl:value-of select="tib:format-dateTime($_globalVariables/ns2:GlobalVariables/LrcRedemption/DTCMO/OrderDateFormat,$Start/pfx:LrcRedemptionRequest/OrderContext/OrderTime)"/>
                    </ns6:OrderDate>
                    <ns6:Redeemedamount>
                        <xsl:value-of select="$Start/pfx:LrcRedemptionRequest/RedemptionAmount"/>
                    </ns6:Redeemedamount>
                </ns6:LrcRedemptionDTCMORequest>
            </Rows>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetPaymentServiceDTCMOConceptsChannels">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>351</pd:x>
        <pd:y>152</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceDTCMOConceptsChannels.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>AssignSafeFailure</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogRequestValidationExceptionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignSafeFailure</pd:from>
        <pd:to>LogRequestValidationExceptionRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>GetPaymentServiceDTCMOConceptsChannels</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render Data</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPaymentServiceDTCMOConceptsChannels</pd:from>
        <pd:to>Render Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Map Payment Service to Payment Gateway Mapping here</pd:description>
        <pd:x>454</pd:x>
        <pd:y>43</pd:y>
        <pd:width>204</pd:width>
        <pd:height>70</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-6684775</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>