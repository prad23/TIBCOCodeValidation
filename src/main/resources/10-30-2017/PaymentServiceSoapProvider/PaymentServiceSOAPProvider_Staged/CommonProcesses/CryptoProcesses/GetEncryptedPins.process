<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx2="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:pfx3="http://ecommerce.wsgc.com/2013/Common" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://services.wsgc.com/2014/Payment" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="www.tibco.com/plugin/java/JavaMethodActivityOutput" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.tibco.com/pe/EngineTypes">
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/base-types.xsd"/>
    <pd:name>CommonProcesses/CryptoProcesses/GetEncryptedPins.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Pin" type="xsd:string"/>
                    <xsd:element name="FirstDataPinEncryptionScheme" type="xsd:string"/>
                    <xsd:element name="FirstDataKeyId" type="xsd:string"/>
                    <xsd:element name="WSIPinEncryptionScheme" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>34</pd:startX>
    <pd:startY>100</pd:startY>
    <pd:returnBindings>
        <root>
            <FirstDataEncryptedPin>
                <xsl:value-of select="substring-after($GetEncryptedPins/javaCodeActivityOutput/firstdataencryptedpin, $_globalVariables/ns1:GlobalVariables/PaymentService/TokenConstants/FirstDataEncryptedPinSeparator)"/>
            </FirstDataEncryptedPin>
            <WSIEncryptedPin>
                <xsl:value-of select="concat($Start/root/WSIPinEncryptionScheme    ,   &#xA;$_globalVariables/ns1:GlobalVariables/PaymentService/TokenConstants/WSIEncryptedPinSchemeSeparator , &#xA;$GetEncryptedPins/javaCodeActivityOutput/wsiencryptedpin)"/>
            </WSIEncryptedPin>
            <xsl:if test="string-length($Error/root/ErrorType)>0">
                <Error>
                    <Type>
                        <xsl:value-of select="$Error/root/ErrorType"/>
                    </Type>
                    <xsl:if test="$Error/root/ErrorDetail">
                        <Detail>
                            <xsl:value-of select="$Error/root/ErrorDetail"/>
                        </Detail>
                    </xsl:if>
                    <ErrorMessage>
                        <xsl:value-of select="$Error/root/ErrorMessage"/>
                    </ErrorMessage>
                </Error>
            </xsl:if>
            <xsl:if test="string-length($Error/root/CLE/ErrorReportType)>0">
                <CLEErrorReport>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:stackTrace">
                        <pfx2:stackTrace>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:stackTrace"/>
                        </pfx2:stackTrace>
                    </xsl:if>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:msg">
                        <pfx2:msg>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:msg"/>
                        </pfx2:msg>
                    </xsl:if>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:fullClass">
                        <pfx2:fullClass>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:fullClass"/>
                        </pfx2:fullClass>
                    </xsl:if>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:class">
                        <pfx2:class>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:class"/>
                        </pfx2:class>
                    </xsl:if>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:processStack">
                        <pfx2:processStack>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:processStack"/>
                        </pfx2:processStack>
                    </xsl:if>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:msgCode">
                        <pfx2:msgCode>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:msgCode"/>
                        </pfx2:msgCode>
                    </xsl:if>
                    <xsl:if test="$Error/root/CLE/ErrorReportType/pfx2:data">
                        <pfx2:data>
                            <xsl:value-of select="$Error/root/CLE/ErrorReportType/pfx2:data"/>
                        </pfx2:data>
                    </xsl:if>
                </CLEErrorReport>
            </xsl:if>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="FirstDataEncryptedPin" type="xsd:string"/>
                    <xsd:element name="WSIEncryptedPin" type="xsd:string"/>
                    <xsd:element name="Error" type="pfx3:ErrorType" minOccurs="0"/>
                    <xsd:element name="CLEErrorReport" type="pfx2:ErrorReportType" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>672</pd:endX>
    <pd:endY>100</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Error>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="ErrorType" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="ErrorDetail" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="ErrorMessage" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="CLE" minOccurs="0">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="ErrorReportType" type="pfx2:ErrorReportType"/>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </Error>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1434558035038</pd:targetNamespace>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>508</pd:x>
        <pd:y>238</pd:y>
        <config>
            <variableName>Error</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <ErrorType>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonInternalErrors/EncryptedPin/COMMON_INTERNAL_ERROR_ENCRYPTED_PIN/Type"/>
                </ErrorType>
                <ErrorDetail>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonInternalErrors/EncryptedPin/COMMON_INTERNAL_ERROR_ENCRYPTED_PIN/Detail"/>
                </ErrorDetail>
                <ErrorMessage>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonInternalErrors/EncryptedPin/COMMON_INTERNAL_ERROR_ENCRYPTED_PIN/ErrorMessage"/>
                </ErrorMessage>
                <CLE>
                    <ErrorReportType>
                        <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                            <pfx2:stackTrace>
                                <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                            </pfx2:stackTrace>
                        </xsl:if>
                        <xsl:if test="$_error/ns2:ErrorReport/Msg">
                            <pfx2:msg>
                                <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                            </pfx2:msg>
                        </xsl:if>
                        <xsl:if test="$_error/ns2:ErrorReport/FullClass">
                            <pfx2:fullClass>
                                <xsl:value-of select="$_error/ns2:ErrorReport/FullClass"/>
                            </pfx2:fullClass>
                        </xsl:if>
                        <xsl:if test="$_error/ns2:ErrorReport/Class">
                            <pfx2:class>
                                <xsl:value-of select="$_error/ns2:ErrorReport/Class"/>
                            </pfx2:class>
                        </xsl:if>
                        <pfx2:processStack>
                            <xsl:value-of select="$_error/ns2:ErrorReport/ProcessStack"/>
                        </pfx2:processStack>
                        <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                            <pfx2:msgCode>
                                <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                            </pfx2:msgCode>
                        </xsl:if>
                        <pfx2:data>
                            <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport/Data/*)"/>
                        </pfx2:data>
                    </ErrorReportType>
                </CLE>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuditBeginLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>244</pd:x>
        <pd:y>100</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/AuditLogMessage.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$GetTransactionDetails/root/InterfaceCode"/>
                </InterfaceCode>
                <AuditMessageType>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CryptoProcesses/CLE/IngrianRequest"/>
                </AuditMessageType>
                <payloadTrue>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CryptoProcesses/CLE/PayloadTrue"/>
                </payloadTrue>
                <pfx2:LogRequest>
                    <pfx2:envCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                    </pfx2:envCode>
                    <pfx2:appCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/AppCode"/>
                    </pfx2:appCode>
                    <pfx2:interfaceCode>
                        <xsl:value-of select="$GetTransactionDetails/root/InterfaceCode"/>
                    </pfx2:interfaceCode>
                    <pfx2:timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx2:timestamp>
                    <pfx2:message>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CryptoProcesses/CLE/IngrianRequestMsg"/>
                    </pfx2:message>
                    <pfx2:TransactionDetails>
                        <pfx2:transactionDomain>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                        </pfx2:transactionDomain>
                        <pfx2:transactionType>
                            <xsl:value-of select="$GetTransactionDetails/root/TransactionType"/>
                        </pfx2:transactionType>
                        <pfx2:transactionID>
                            <xsl:value-of select="$GetTransactionDetails/root/TransactionId"/>
                        </pfx2:transactionID>
                    </pfx2:TransactionDetails>
                    <pfx2:AuditInfo>
                        <pfx2:payload>
                            <xsl:value-of select="''"/>
                        </pfx2:payload>
                        <pfx2:auditStep>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CryptoProcesses/CLE/IngrianRequest"/>
                        </pfx2:auditStep>
                    </pfx2:AuditInfo>
                </pfx2:LogRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuditEndLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>584</pd:x>
        <pd:y>100</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/AuditLogMessage.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$GetTransactionDetails/root/InterfaceCode"/>
                </InterfaceCode>
                <AuditMessageType>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CryptoProcesses/CLE/IngrianResponse"/>
                </AuditMessageType>
                <payloadTrue>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CryptoProcesses/CLE/PayloadTrue"/>
                </payloadTrue>
                <pfx2:LogRequest>
                    <pfx2:envCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                    </pfx2:envCode>
                    <pfx2:appCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/AppCode"/>
                    </pfx2:appCode>
                    <pfx2:interfaceCode>
                        <xsl:value-of select="$GetTransactionDetails/root/InterfaceCode"/>
                    </pfx2:interfaceCode>
                    <pfx2:timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx2:timestamp>
                    <pfx2:message>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CryptoProcesses/CLE/IngrianResponseMsg"/>
                    </pfx2:message>
                    <pfx2:TransactionDetails>
                        <xsl:if test="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain">
                            <pfx2:transactionDomain>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                            </pfx2:transactionDomain>
                        </xsl:if>
                        <pfx2:transactionType>
                            <xsl:value-of select="$GetTransactionDetails/root/TransactionType"/>
                        </pfx2:transactionType>
                        <pfx2:transactionID>
                            <xsl:value-of select="$GetTransactionDetails/root/TransactionId"/>
                        </pfx2:transactionID>
                    </pfx2:TransactionDetails>
                    <pfx2:AuditInfo>
                        <pfx2:payload>
                            <xsl:value-of select="''"/>
                        </pfx2:payload>
                        <pfx2:auditStep>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CryptoProcesses/CLE/IngrianResponse"/>
                        </pfx2:auditStep>
                    </pfx2:AuditInfo>
                </pfx2:LogRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>297</pd:x>
        <pd:y>237</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetConfigHandle">
        <pd:type>com.tibco.plugin.java.JavaMethodActivity</pd:type>
        <pd:resourceType>ae.activities.JavaMethodActivity</pd:resourceType>
        <pd:x>349</pd:x>
        <pd:y>100</pd:y>
        <config>
            <ConstructDeclaredClass>false</ConstructDeclaredClass>
            <CacheConstructedClass>false</CacheConstructedClass>
            <InvokeCleanupMethod>false</InvokeCleanupMethod>
            <JavaGlobalInstance>/CommonProcesses/CryptoProcesses/CryptoEnvironment.serviceagent</JavaGlobalInstance>
            <MethodInfo>
                <className>com.wsgc.ecommerce.tokenization.runtime.EnvironmentHandle</className>
                <methodName>getConfigurationHandle</methodName>
                <methodReturn>com.wsgc.ecommerce.tokenization.runtime.ConfigurationHandle</methodReturn>
            </MethodInfo>
        </config>
        <pd:inputBindings>
            <ns1:JavaMethodActivityInput xmlns:ns1="www.tibco.com/plugin/java/JavaMethodActivityInput"/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetEncryptedPins">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>466</pd:x>
        <pd:y>100</pd:y>
        <config>
            <fileName>GetEncryptedPinsGetEncryptedPins</fileName>
            <packageName>CommonProcesses.CryptoProcesses.GetEncryptedPins</packageName>
            <fullsource>package CommonProcesses.CryptoProcesses.GetEncryptedPins;
import java.util.*;
import java.io.*;
import com.wsgc.ecommerce.tokenization.runtime.ConfigurationHandle;
import com.wsgc.ecommerce.tokenization.PinToken;
import com.wsgc.ecommerce.tokenization.TokenizationContext;
import com.wsgc.ecommerce.tokenization.TokenizationContexts;
import com.wsgc.ecommerce.tokenization.CardExpiration;


public class GetEncryptedPinsGetEncryptedPins{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected Object confighandle = null;
	protected String environment = "";
	protected String pin = "";
	protected String firstdatapinencryptionscheme = "";
	protected String firstdatapinencryptionkeyid = "";
	protected String wsipinencryptionscheme = "";
	protected String firstdataencryptedpin = "";
	protected String wsiencryptedpin = "";
	public Object getconfighandle() {
		return confighandle;
	}
	public void setconfighandle(Object val) {
		confighandle = val;
	}
	public String getenvironment() {
		return environment;
	}
	public void setenvironment(String val) {
		environment = val;
	}
	public String getpin() {
		return pin;
	}
	public void setpin(String val) {
		pin = val;
	}
	public String getfirstdatapinencryptionscheme() {
		return firstdatapinencryptionscheme;
	}
	public void setfirstdatapinencryptionscheme(String val) {
		firstdatapinencryptionscheme = val;
	}
	public String getfirstdatapinencryptionkeyid() {
		return firstdatapinencryptionkeyid;
	}
	public void setfirstdatapinencryptionkeyid(String val) {
		firstdatapinencryptionkeyid = val;
	}
	public String getwsipinencryptionscheme() {
		return wsipinencryptionscheme;
	}
	public void setwsipinencryptionscheme(String val) {
		wsipinencryptionscheme = val;
	}
	public String getfirstdataencryptedpin() {
		return firstdataencryptedpin;
	}
	public void setfirstdataencryptedpin(String val) {
		firstdataencryptedpin = val;
	}
	public String getwsiencryptedpin() {
		return wsiencryptedpin;
	}
	public void setwsiencryptedpin(String val) {
		wsiencryptedpin = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public GetEncryptedPinsGetEncryptedPins() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : Object confighandle
	In  : String environment
	In  : String pin
	In  : String firstdatapinencryptionscheme
	In  : String firstdatapinencryptionkeyid
	In  : String wsipinencryptionscheme
	Out : String firstdataencryptedpin
	Out : String wsiencryptedpin
* Available Variables: DO NOT MODIFY *****/


//com.wsgc.ecommerce.tokenization.PaymentToken pt = null;
try{
com.wsgc.ecommerce.tokenization.runtime.ConfigurationHandle ch = (com.wsgc.ecommerce.tokenization.runtime.ConfigurationHandle) getconfighandle();

TokenizationContext ctx =com.wsgc.ecommerce.tokenization.TokenizationContexts.forCurrentTime();

com.wsgc.ecommerce.tokenization.PinToken firstdatatoken = ch.getEnvironment(environment).getPinProvider().tokenize(firstdatapinencryptionscheme, firstdatapinencryptionkeyid, pin,  ctx);
 firstdataencryptedpin = firstdatatoken.getValue();

/*
com.wsgc.ecommerce.tokenization.PinToken wsitoken= ch.getEnvironment(environment).getPinProvider().tokenize(wsipinencryptionscheme,  pin,  ctx);
wsiencryptedpin = wsitoken.getValue();
*/
com.wsgc.ecommerce.tokenization.PaymentToken wsitoken = ch.getEnvironment(environment).getPaymentProvider().tokenize(wsipinencryptionscheme, pin,  null, ctx);
wsiencryptedpin = wsitoken.getValue();

} catch (Exception e) {

e.printStackTrace();
throw e;

}


}
}
</fullsource>
            <inputData>
                <row>
                    <fieldName>confighandle</fieldName>
                    <fieldType>ObjectReference</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>environment</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>pin</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>firstdatapinencryptionscheme</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>firstdatapinencryptionkeyid</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>wsipinencryptionscheme</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </inputData>
            <outputData>
                <row>
                    <fieldName>firstdataencryptedpin</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>wsiencryptedpin</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </outputData>
            <byteCode>
                <class>
                    <name>GetEncryptedPinsGetEncryptedPins</name>
                    <byteCode>yv66vgAAADMAcQkAFwBBCQAXAEIJABcAQwkAFwBECQAXAEUJABcARgkAFwBHCQAXAEgKABgASQgASgoAFwBLBwBMCgBNAE4LAAwATwoAUABRCwBSAFMKAFQAVQoAUABWCwBXAFgKAFkAVQcAWgoAFQBbBwBcBwBdAQAMY29uZmlnaGFuZGxlAQASTGphdmEvbGFuZy9PYmplY3Q7AQALZW52aXJvbm1lbnQBABJMamF2YS9sYW5nL1N0cmluZzsBAANwaW4BABxmaXJzdGRhdGFwaW5lbmNyeXB0aW9uc2NoZW1lAQAbZmlyc3RkYXRhcGluZW5jcnlwdGlvbmtleWlkAQAWd3NpcGluZW5jcnlwdGlvbnNjaGVtZQEAFWZpcnN0ZGF0YWVuY3J5cHRlZHBpbgEAD3dzaWVuY3J5cHRlZHBpbgEAD2dldGNvbmZpZ2hhbmRsZQEAFCgpTGphdmEvbGFuZy9PYmplY3Q7AQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAD3NldGNvbmZpZ2hhbmRsZQEAFShMamF2YS9sYW5nL09iamVjdDspVgEADmdldGVudmlyb25tZW50AQAUKClMamF2YS9sYW5nL1N0cmluZzsBAA5zZXRlbnZpcm9ubWVudAEAFShMamF2YS9sYW5nL1N0cmluZzspVgEABmdldHBpbgEABnNldHBpbgEAH2dldGZpcnN0ZGF0YXBpbmVuY3J5cHRpb25zY2hlbWUBAB9zZXRmaXJzdGRhdGFwaW5lbmNyeXB0aW9uc2NoZW1lAQAeZ2V0Zmlyc3RkYXRhcGluZW5jcnlwdGlvbmtleWlkAQAec2V0Zmlyc3RkYXRhcGluZW5jcnlwdGlvbmtleWlkAQAZZ2V0d3NpcGluZW5jcnlwdGlvbnNjaGVtZQEAGXNldHdzaXBpbmVuY3J5cHRpb25zY2hlbWUBABhnZXRmaXJzdGRhdGFlbmNyeXB0ZWRwaW4BABhzZXRmaXJzdGRhdGFlbmNyeXB0ZWRwaW4BABJnZXR3c2llbmNyeXB0ZWRwaW4BABJzZXR3c2llbmNyeXB0ZWRwaW4BAAY8aW5pdD4BAAMoKVYBAAZpbnZva2UBAA1TdGFja01hcFRhYmxlBwBaAQAKRXhjZXB0aW9ucwEAClNvdXJjZUZpbGUBACVHZXRFbmNyeXB0ZWRQaW5zR2V0RW5jcnlwdGVkUGlucy5qYXZhDAAZABoMABsAHAwAHQAcDAAeABwMAB8AHAwAIAAcDAAhABwMACIAHAwAOQA6AQAADAAjACQBADtjb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL3J1bnRpbWUvQ29uZmlndXJhdGlvbkhhbmRsZQcAXgwAXwBgDABhAGIHAGMMAGQAZQcAZgwAZwBoBwBpDABqACoMAGsAbAcAbQwAZwBuBwBvAQATamF2YS9sYW5nL0V4Y2VwdGlvbgwAcAA6AQBRQ29tbW9uUHJvY2Vzc2VzL0NyeXB0b1Byb2Nlc3Nlcy9HZXRFbmNyeXB0ZWRQaW5zL0dldEVuY3J5cHRlZFBpbnNHZXRFbmNyeXB0ZWRQaW5zAQAQamF2YS9sYW5nL09iamVjdAEANGNvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vVG9rZW5pemF0aW9uQ29udGV4dHMBAA5mb3JDdXJyZW50VGltZQEANygpTGNvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vVG9rZW5pemF0aW9uQ29udGV4dDsBAA5nZXRFbnZpcm9ubWVudAEATyhMamF2YS9sYW5nL1N0cmluZzspTGNvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vcnVudGltZS9FbnZpcm9ubWVudEhhbmRsZTsBADljb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL3J1bnRpbWUvRW52aXJvbm1lbnRIYW5kbGUBAA5nZXRQaW5Qcm92aWRlcgEAOygpTGNvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vUGluVG9rZW5pemF0aW9uUHJvdmlkZXI7AQA3Y29tL3dzZ2MvZWNvbW1lcmNlL3Rva2VuaXphdGlvbi9QaW5Ub2tlbml6YXRpb25Qcm92aWRlcgEACHRva2VuaXplAQCXKExqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvU3RyaW5nO0xjb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL1Rva2VuaXphdGlvbkNvbnRleHQ7KUxjb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL1BpblRva2VuOwEAKGNvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vUGluVG9rZW4BAAhnZXRWYWx1ZQEAEmdldFBheW1lbnRQcm92aWRlcgEAPygpTGNvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vUGF5bWVudFRva2VuaXphdGlvblByb3ZpZGVyOwEAO2NvbS93c2djL2Vjb21tZXJjZS90b2tlbml6YXRpb24vUGF5bWVudFRva2VuaXphdGlvblByb3ZpZGVyAQC5KExqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvU3RyaW5nO0xjb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL0NhcmRFeHBpcmF0aW9uO0xjb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL1Rva2VuaXphdGlvbkNvbnRleHQ7KUxjb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL1BheW1lbnRUb2tlbjsBACxjb20vd3NnYy9lY29tbWVyY2UvdG9rZW5pemF0aW9uL1BheW1lbnRUb2tlbgEAD3ByaW50U3RhY2tUcmFjZQAhABcAGAAAAAgABAAZABoAAAAEABsAHAAAAAQAHQAcAAAABAAeABwAAAAEAB8AHAAAAAQAIAAcAAAABAAhABwAAAAEACIAHAAAABIAAQAjACQAAQAlAAAAHQABAAEAAAAFKrQAAbAAAAABACYAAAAGAAEAAAAWAAEAJwAoAAEAJQAAACIAAgACAAAABiortQABsQAAAAEAJgAAAAoAAgAAABkABQAaAAEAKQAqAAEAJQAAAB0AAQABAAAABSq0AAKwAAAAAQAmAAAABgABAAAAHAABACsALAABACUAAAAiAAIAAgAAAAYqK7UAArEAAAABACYAAAAKAAIAAAAfAAUAIAABAC0AKgABACUAAAAdAAEAAQAAAAUqtAADsAAAAAEAJgAAAAYAAQAAACIAAQAuACwAAQAlAAAAIgACAAIAAAAGKiu1AAOxAAAAAQAmAAAACgACAAAAJQAFACYAAQAvACoAAQAlAAAAHQABAAEAAAAFKrQABLAAAAABACYAAAAGAAEAAAAoAAEAMAAsAAEAJQAAACIAAgACAAAABiortQAEsQAAAAEAJgAAAAoAAgAAACsABQAsAAEAMQAqAAEAJQAAAB0AAQABAAAABSq0AAWwAAAAAQAmAAAABgABAAAALgABADIALAABACUAAAAiAAIAAgAAAAYqK7UABbEAAAABACYAAAAKAAIAAAAxAAUAMgABADMAKgABACUAAAAdAAEAAQAAAAUqtAAGsAAAAAEAJgAAAAYAAQAAADQAAQA0ACwAAQAlAAAAIgACAAIAAAAGKiu1AAaxAAAAAQAmAAAACgACAAAANwAFADgAAQA1ACoAAQAlAAAAHQABAAEAAAAFKrQAB7AAAAABACYAAAAGAAEAAAA6AAEANgAsAAEAJQAAACIAAgACAAAABiortQAHsQAAAAEAJgAAAAoAAgAAAD0ABQA+AAEANwAqAAEAJQAAAB0AAQABAAAABSq0AAiwAAAAAQAmAAAABgABAAAAQAABADgALAABACUAAAAiAAIAAgAAAAYqK7UACLEAAAABACYAAAAKAAIAAABDAAUARAABADkAOgABACUAAABwAAIAAQAAADQqtwAJKgG1AAEqEgq1AAIqEgq1AAMqEgq1AAQqEgq1AAUqEgq1AAYqEgq1AAcqEgq1AAixAAAAAQAmAAAAKgAKAAAARgAEAA0ACQAOAA8ADwAVABAAGwARACEAEgAnABMALQAUADMARwABADsAOgACACUAAAC9AAUABQAAAGYqtgALwAAMTLgADU0rKrQAArkADgIAtgAPKrQABCq0AAUqtAADLLkAEAUATiottgARtQAHKyq0AAK5AA4CALYAEiq0AAYqtAADASy5ABMFADoEKhkEtgAUtQAIpwAKTCu2ABYrv7EAAQAAAFsAXgAVAAIAJgAAAC4ACwAAAFcACABZAAwAWwAsAFwANABiAFIAYwBbAGoAXgBlAF8AZwBjAGgAZQBtADwAAAAJAAL3AF4HAD0GAD4AAAAEAAEAFQABAD8AAAACAEA=</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <confighandle>
                    <xsl:value-of select="$GetConfigHandle/ns:JavaMethodActivityOutput/MethodReturnValue"/>
                </confighandle>
                <environment>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                </environment>
                <pin>
                    <xsl:value-of select="$Start/root/Pin"/>
                </pin>
                <firstdatapinencryptionscheme>
                    <xsl:value-of select="$Start/root/FirstDataPinEncryptionScheme"/>
                </firstdatapinencryptionscheme>
                <firstdatapinencryptionkeyid>
                    <xsl:value-of select="$Start/root/FirstDataKeyId"/>
                </firstdatapinencryptionkeyid>
                <wsipinencryptionscheme>
                    <xsl:value-of select="$Start/root/WSIPinEncryptionScheme"/>
                </wsipinencryptionscheme>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetTransactionDetails">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>136</pd:x>
        <pd:y>100</pd:y>
        <config>
            <variableConfig>/CommonProcesses/InterfaceDetails.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetTransactionDetails</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetConfigHandle</pd:from>
        <pd:to>GetEncryptedPins</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetEncryptedPins</pd:from>
        <pd:to>AuditEndLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditBeginLog</pd:from>
        <pd:to>GetConfigHandle</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditEndLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTransactionDetails</pd:from>
        <pd:to>AuditBeginLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>