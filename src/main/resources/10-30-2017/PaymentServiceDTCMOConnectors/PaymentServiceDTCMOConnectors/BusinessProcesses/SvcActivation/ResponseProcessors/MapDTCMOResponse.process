<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx21="http://www.wsgc.com/schemas/common/PaymentServiceAuditSwitches.xsd" xmlns:pfx="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/IBMiAdapterConfiguration/OutboundMessage/Data_Structures/PublicationService" xmlns:ns="http://services.wsgc.com/2014/Payment" xmlns:ns12="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:ns13="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/IBMiAdapterConfiguration/OutboundMessage/OutboundMessage" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx1="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/IBMiAdapterConfiguration/DataQueueWrite/DataQueueWrite" xmlns:ns4="http://www.tibco.com/pe/EngineTypes" xmlns:pfx2="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/Tokenization/OutboundMessage/OutboundMessage" xmlns:ns5="http://schemas.tibco.com/bw/plugins/ae/5.0/aeExceptions" xmlns:pfx3="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/Tokenization/OutboundMessage/Data_Structures/TokenizationPublisher" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx4="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/Tokenization/DataQueueWrite/DataQueueWrite" xmlns:pfx5="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/SVCActivation/OutboundMessage/OutboundMessage" xmlns:pfx6="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/SVCActivation/DataQueueWrite/DataQueueWrite" xmlns:ns9="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/SVCActivation/OutboundMessage/Data_Structures/SVCActivationPublisher" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions">
    <xsd:import namespace="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/IBMiAdapterConfiguration/OutboundMessage/Data_Structures/PublicationService" schemaLocation="/AESchemas/ae/as400/IBMiAdapterConfiguration/OutboundMessage/Data_Structures/PublicationService.aeschema"/>
    <xsd:import namespace="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/Tokenization/OutboundMessage/Data_Structures/TokenizationPublisher" schemaLocation="/AESchemas/ae/as400/Tokenization/OutboundMessage/Data_Structures/TokenizationPublisher.aeschema"/>
    <xsd:import namespace="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/Tokenization/OutboundMessage/OutboundMessage" schemaLocation="/AESchemas/ae/as400/Tokenization/OutboundMessage/OutboundMessage.aeschema"/>
    <xsd:import namespace="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/Tokenization/DataQueueWrite/DataQueueWrite" schemaLocation="/AESchemas/ae/as400/Tokenization/DataQueueWrite/DataQueueWrite.aeschema"/>
    <xsd:import namespace="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/SVCActivation/OutboundMessage/OutboundMessage" schemaLocation="/AESchemas/ae/as400/SVCActivation/OutboundMessage/OutboundMessage.aeschema"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2014/Payment/svc-activation.xsd"/>
    <xsd:import namespace="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/SVCActivation/DataQueueWrite/DataQueueWrite" schemaLocation="/AESchemas/ae/as400/SVCActivation/DataQueueWrite/DataQueueWrite.aeschema"/>
    <pd:name>BusinessProcesses/SvcActivation/ResponseProcessors/MapDTCMOResponse.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx5:SVCActivationPublisher"/>
                    <xsd:element name="SvcActivationCommon">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element ref="ns:SvcActivationResponse"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>27</pd:startX>
    <pd:startY>35</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$MapAdapterResponse/pfx6:SVCActivationSubscriber"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx6:SVCActivationSubscriber"/>
    <pd:endX>594</pd:endX>
    <pd:endY>35</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1428698665830</pd:targetNamespace>
    <pd:activity name="MapAdapterResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>437</pd:x>
        <pd:y>35</pd:y>
        <config>
            <element ref="pfx6:SVCActivationSubscriber"/>
        </config>
        <pd:inputBindings>
            <pfx6:SVCActivationSubscriber>
                <xsl:variable name="Entry" select="$Start/root/pfx5:SVCActivationPublisher/Entry"/>
                <xsl:variable name="CommonResponse" select="$Start/root/SvcActivationCommon/ns:SvcActivationResponse"/>
                <Entry>
                    <OutputDataQueue>
                        <xsl:value-of select="tib:pad-and-limit($Entry/OutputDataQueue,20)"/>
                    </OutputDataQueue>
                    <CorrelationID>
                        <xsl:value-of select="tib:pad-and-limit($Entry/CorrelationID,20)"/>
                    </CorrelationID>
                    <Version>
                        <xsl:value-of select="tib:pad-and-limit($Entry/Version, 15)"/>
                    </Version>
                    <EnvironmentIdentifier>
                        <xsl:value-of select="tib:pad-and-limit($Entry/EnvironmentIdentifier,10)"/>
                    </EnvironmentIdentifier>
                    <RegionIdentifier>
                        <xsl:value-of select="tib:pad-and-limit($Entry/RegionIdentifier,10)"/>
                    </RegionIdentifier>
                    <SourceSystemIdentifier>
                        <xsl:value-of select="tib:pad-and-limit($Entry/SourceSystemIdentifier,50)"/>
                    </SourceSystemIdentifier>
                    <TransactionId>
                        <xsl:value-of select="tib:pad-and-limit($Entry/TransactionId,80)"/>
                    </TransactionId>
                    <TransactionTime>
                        <xsl:value-of select="tib:pad(tib:format-dateTime($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/DTC/DateTimeFormat, $Entry/TransactionTime), 30)"/>
                    </TransactionTime>
                    <Concept>
                        <xsl:value-of select="tib:pad-and-limit($Entry/Concept,5)"/>
                    </Concept>
                    <Channel>
                        <xsl:value-of select="tib:pad-and-limit($Entry/Channel,10)"/>
                    </Channel>
                    <AssociateId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/AssociateId),10)"/>
                    </AssociateId>
                    <OrderNumber>
                        <xsl:value-of select="tib:pad-and-limit($Entry/OrderNumber,20)"/>
                    </OrderNumber>
                    <ConsumerTransactionId>
                        <xsl:choose>
                            <xsl:when test="exists(tib:pad-and-limit($Entry/ConsumerTransactionId,80))">
                                <xsl:value-of select="tib:pad-and-limit($Entry/ConsumerTransactionId,80)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ConsumerTransactionId>
                    <ConfirmationId>
                        <xsl:choose>
                            <xsl:when test="exists(tib:pad-and-limit($CommonResponse/ConfirmationId,80))">
                                <xsl:value-of select="tib:pad-and-limit($CommonResponse/ConfirmationId,80)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ConfirmationId>
                    <ActivationCode>
                        <xsl:choose>
                            <xsl:when test="exists(tib:pad-and-limit($CommonResponse/ActivationCode,30))">
                                <xsl:value-of select="tib:pad-and-limit($CommonResponse/ActivationCode,30)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ActivationCode>
                    <CurrencyCode>
                        <xsl:choose>
                            <xsl:when test="exists(tib:pad-and-limit($CommonResponse/CurrencyCode,3))">
                                <xsl:value-of select="tib:pad-and-limit($CommonResponse/CurrencyCode,3)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </CurrencyCode>
                    <BalanceAmount>
                        <xsl:choose>
                            <xsl:when test="exists(tib:pad-and-limit($CommonResponse/BalanceAmount,20))">
                                <xsl:value-of select="tib:pad-and-limit($CommonResponse/BalanceAmount,20)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </BalanceAmount>
                    <TransactionMetadata1>
                        <xsl:choose>
                            <xsl:when test="exists(tib:pad-and-limit($CommonResponse/TransactionMetadata[1],80))">
                                <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[1],80)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </TransactionMetadata1>
                    <TransactionMetadataType1>
                        <xsl:choose>
                            <xsl:when test="exists(tib:pad-and-limit($CommonResponse/TransactionMetadata[1]/@type,30))">
                                <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[1]/@type,30)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </TransactionMetadataType1>
                    <TransactionMetadata2>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[2],80)"/>
                    </TransactionMetadata2>
                    <TransactionMetadataType2>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[2]/@type,30)"/>
                    </TransactionMetadataType2>
                    <TransactionMetadata3>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[3],80)"/>
                    </TransactionMetadata3>
                    <TransactionMetadataType3>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[3]/@type,30)"/>
                    </TransactionMetadataType3>
                    <TransactionMetadata4>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[4],80)"/>
                    </TransactionMetadata4>
                    <TransactionMetadataType4>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[4]/@type,30)"/>
                    </TransactionMetadataType4>
                    <TransactionMetadata5>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[5],80)"/>
                    </TransactionMetadata5>
                    <TransactionMetadataType5>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[5]/@type,30)"/>
                    </TransactionMetadataType5>
                    <TransactionMetadata6>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[6],80)"/>
                    </TransactionMetadata6>
                    <TransactionMetadataType6>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[6]/@type,30)"/>
                    </TransactionMetadataType6>
                    <TransactionMetadata7>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[7],80)"/>
                    </TransactionMetadata7>
                    <TransactionMetadataType7>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[7]/@type,30)"/>
                    </TransactionMetadataType7>
                    <TransactionMetadata8>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[8],80)"/>
                    </TransactionMetadata8>
                    <TransactionMetadataType8>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[8]/@type,30)"/>
                    </TransactionMetadataType8>
                    <TransactionMetadata9>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[9],80)"/>
                    </TransactionMetadata9>
                    <TransactionMetadataType9>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[9]/@type,30)"/>
                    </TransactionMetadataType9>
                    <TransactionMetadata10>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[10],80)"/>
                    </TransactionMetadata10>
                    <TransactionMetadataType10>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/TransactionMetadata[10]/@type,30)"/>
                    </TransactionMetadataType10>
                    <Code>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/Tender/Type/Code,40)"/>
                    </Code>
                    <SubCode>
                        <xsl:value-of select="tib:pad-and-limit($CommonResponse/Tender/Type/SubCode,40)"/>
                    </SubCode>
                    <AccountNumber>
                        <xsl:choose>
                            <xsl:when test="exists(tib:pad-and-limit($CommonResponse/Tender/AccountNumber,20))">
                                <xsl:value-of select="tib:pad-and-limit($CommonResponse/Tender/AccountNumber,20)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </AccountNumber>
                    <FinancialDate>
                        <xsl:value-of select="tib:pad-and-limit(substring-before(current-dateTime(), &quot;T&quot;),20)"/>
                    </FinancialDate>
                    <Type>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Type),100)"/>
                    </Type>
                    <Detail1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[1]),100)"/>
                    </Detail1>
                    <Detail2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[2]),100)"/>
                    </Detail2>
                    <Detail3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[3]),100)"/>
                    </Detail3>
                    <Detail4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[4]),100)"/>
                    </Detail4>
                    <Detail5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[5]),100)"/>
                    </Detail5>
                    <Detail6>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[6]),100)"/>
                    </Detail6>
                    <Detail7>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[7]),100)"/>
                    </Detail7>
                    <Detail8>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[8]),100)"/>
                    </Detail8>
                    <Detail9>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[9]),100)"/>
                    </Detail9>
                    <Detail10>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[10]),100)"/>
                    </Detail10>
                    <Detail11>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[11]),100)"/>
                    </Detail11>
                    <Detail12>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[12]),100)"/>
                    </Detail12>
                    <Detail13>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[13]),100)"/>
                    </Detail13>
                    <Detail14>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[14]),100)"/>
                    </Detail14>
                    <Detail15>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/Detail[15]),100)"/>
                    </Detail15>
                    <ErrorMessage>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CommonResponse/Error/ErrorMessage),200)"/>
                    </ErrorMessage>
                </Entry>
            </pfx6:SVCActivationSubscriber>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetCLEParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>286</pd:x>
        <pd:y>35</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/SvcActivation/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetAppAuditSwitchesVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>154</pd:x>
        <pd:y>35</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceAppAuditSwitches.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>MapAdapterResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetAppAuditSwitchesVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>MapAdapterResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAppAuditSwitchesVariable</pd:from>
        <pd:to>GetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>