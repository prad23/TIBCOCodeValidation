<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://services.wsgc.com/2014/Payment" xmlns:ns="http://www.wsgc.com/schemas/common/PaymentServiceValidations.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:regexGenerator="java://regexGenerator" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns5="http://www.wsgc.com/schemas/common/PaymentServiceErrorTypes.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:pfx10="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_PG_GiftReloadValidationResult.xsd" xmlns:pfx11="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Gift/ReloadResponse" xmlns:pfx12="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_PG_SvcTransactionSearchValidationResult.xsd" xmlns:pfx13="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/TransactionSearchResponse" xmlns:pfx14="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_SVC_TransactionSearch.xsd" xmlns:pfx15="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_SVC_TransactionSearchRequest.xsd" xmlns:ns12="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:pfx16="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_SVC_TransactionSearchResponse.xsd" xmlns:pfx3="http://ecommerce.wsgc.com/2013/Common" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XMLSchemas/Verifone/SvcReloadResponse.xsd" xmlns:pfx5="http://www.wsgc.com/schemas/service/PaymentError.xsd" xmlns:pfx6="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XMLSchemas/Verifone/GiftRedemptionResponse.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx8="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Gift/RedemptionResponse" xmlns:pfx9="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_PG_GiftRedemptionValidationResult.xsd">
    <xsd:import namespace="http://ecommerce.wsgc.com/2013/Common" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2013/Common/base-types.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XMLSchemas/Verifone/SvcReloadResponse.xsd" schemaLocation="/SharedResources/XMLSchemas/Verifone/SvcReloadResponse.xsd"/>
    <xsd:import namespace="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_PG_GiftRedemptionValidationResult.xsd" schemaLocation="/SharedResources/UGP_PG_GiftRedemptionValidationResult.xsd"/>
    <xsd:import namespace="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Gift/RedemptionResponse" schemaLocation="/SharedResources/XMLSchemas/Verifone/UGP-V1/UGPGiftRedemptionResponse.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/svc-reload.xsd"/>
    <xsd:import namespace="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/Gift/ReloadResponse" schemaLocation="/SharedResources/XMLSchemas/Verifone/UGP-V1/UGPGiftReloadResponse.xsd"/>
    <xsd:import namespace="http://www.services.wsgc.com/2014/Payment/Verfione/UGP/TransactionSearchResponse" schemaLocation="/SharedResources/XMLSchemas/Verifone/UGP-V1/UGPTransactionSearchResponse.xsd"/>
    <xsd:import namespace="http://www.wsgc.com/schemas/service/PaymentError.xsd" schemaLocation="/SharedResources/XMLSchemas/PaymentServiceInternal/PaymentErrorSchema.xsd"/>
    <xsd:import namespace="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_PG_GiftReloadValidationResult.xsd" schemaLocation="/SharedResources/XMLSchemas/PaymentServiceInternal/UGP_PG_GiftReloadValidationResult.xsd"/>
    <xsd:import namespace="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_PG_SvcTransactionSearchValidationResult.xsd" schemaLocation="/SharedResources/XMLSchemas/PaymentServiceInternal/UGP_PG_SvcTransactionSearchValidationResult.xsd"/>
    <xsd:import namespace="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_SVC_TransactionSearchRequest.xsd" schemaLocation="/SharedResources/XMLSchemas/PaymentServiceInternal/UGP_SVC_TransactionSearchRequest.xsd"/>
    <xsd:import namespace="http://paymentservice.wsgc.com/2014/common/PaymentServices/SharedResources/PaymentServiceInternal/UGP_SVC_TransactionSearchResponse.xsd" schemaLocation="/SharedResources/XMLSchemas/PaymentServiceInternal/UGP_SVC_TransactionSearchResponse.xsd"/>
    <pd:name>BusinessProcesses/SvcTransactionSearch/ResponseProcessors/ValidatePaymentGatewayResponse.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="paymentgatewayresponse" type="xsd:string"/>
                    <xsd:element name="transactionid" type="xsd:string"/>
                    <xsd:element ref="pfx15:UGP_SVC_TransactionSearch"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>49</pd:startX>
    <pd:startY>203</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:variable name="gvce" select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/MISSING_CRITICAL_FIELD_PAYMENTGATEWAY_RESPONSE/Type"/>
            <pfx13:UGPRESPONSE>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/@RSA)>0">
                    <xsl:attribute name="RSA">
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/@RSA"/>
                    </xsl:attribute>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/@RSV)>0">
                    <xsl:attribute name="RSV">
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/@RSV"/>
                    </xsl:attribute>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/ACCOUNT)>0">
                    <ACCOUNT>
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/ACCOUNT"/>
                    </ACCOUNT>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/SITE)>0">
                    <SITE>
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/SITE"/>
                    </SITE>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/TERM)>0">
                    <TERM>
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/TERM"/>
                    </TERM>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/COMMAND)>0">
                    <COMMAND>
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/COMMAND"/>
                    </COMMAND>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/RESULT_CODE)>0">
                    <RESULT_CODE>
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/RESULT_CODE"/>
                    </RESULT_CODE>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/RESPONSE_TEXT)>0">
                    <RESPONSE_TEXT>
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/RESPONSE_TEXT"/>
                    </RESPONSE_TEXT>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/RESULT)>0">
                    <RESULT>
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/RESULT"/>
                    </RESULT>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/FUNCTION_TYPE)>0">
                    <xsl:if test="$ParseGatewayResponse/pfx13:UGPRESPONSE/FUNCTION_TYPE">
                        <FUNCTION_TYPE>
                            <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/FUNCTION_TYPE"/>
                        </FUNCTION_TYPE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/FORMAT)>0">
                    <xsl:if test="$ParseGatewayResponse/pfx13:UGPRESPONSE/FORMAT">
                        <FORMAT>
                            <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/FORMAT"/>
                        </FORMAT>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/DEVTYPE)>0">
                    <xsl:if test="$ParseGatewayResponse/pfx13:UGPRESPONSE/DEVTYPE">
                        <DEVTYPE>
                            <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/DEVTYPE"/>
                        </DEVTYPE>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/RETURN_FLD_HDRS)>0">
                    <xsl:if test="$ParseGatewayResponse/pfx13:UGPRESPONSE/RETURN_FLD_HDRS">
                        <RETURN_FLD_HDRS>
                            <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/RETURN_FLD_HDRS"/>
                        </RETURN_FLD_HDRS>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/SERIAL_NUM)>0">
                    <xsl:if test="$ParseGatewayResponse/pfx13:UGPRESPONSE/SERIAL_NUM">
                        <SERIAL_NUM>
                            <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/SERIAL_NUM"/>
                        </SERIAL_NUM>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/DELIMITER)>0">
                    <xsl:if test="$ParseGatewayResponse/pfx13:UGPRESPONSE/DELIMITER">
                        <DELIMITER>
                            <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/DELIMITER"/>
                        </DELIMITER>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/DEVICEKEY)>0">
                    <xsl:if test="$ParseGatewayResponse/pfx13:UGPRESPONSE/DEVICEKEY">
                        <DEVICEKEY>
                            <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/DEVICEKEY"/>
                        </DEVICEKEY>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/NUM_RECORDS_FOUND)>0">
                    <xsl:if test="$ParseGatewayResponse/pfx13:UGPRESPONSE/NUM_RECORDS_FOUND">
                        <NUM_RECORDS_FOUND>
                            <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/NUM_RECORDS_FOUND"/>
                        </NUM_RECORDS_FOUND>
                    </xsl:if>
                </xsl:if>
                <SEARCHFIELDS>
                    <PAYMENT_TYPE>
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/PAYMENT_TYPE"/>
                    </PAYMENT_TYPE>
                    <REQUEST_COMMAND>
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/REQUEST_COMMAND"/>
                    </REQUEST_COMMAND>
                    <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/START_TRANS_DATE)>0">
                        <xsl:if test="$ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/START_TRANS_DATE">
                            <START_TRANS_DATE>
                                <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/START_TRANS_DATE"/>
                            </START_TRANS_DATE>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/END_TRANS_DATE)>0">
                        <xsl:if test="$ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/END_TRANS_DATE">
                            <END_TRANS_DATE>
                                <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/END_TRANS_DATE"/>
                            </END_TRANS_DATE>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/START_TRANS_TIME)>0">
                        <xsl:if test="$ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/START_TRANS_TIME">
                            <START_TRANS_TIME>
                                <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/START_TRANS_TIME"/>
                            </START_TRANS_TIME>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="string-length($ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/END_TRANS_TIME)>0">
                        <xsl:if test="$ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/END_TRANS_TIME">
                            <END_TRANS_TIME>
                                <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/END_TRANS_TIME"/>
                            </END_TRANS_TIME>
                        </xsl:if>
                    </xsl:if>
                    <INVOICE>
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/INVOICE"/>
                    </INVOICE>
                    <ACCT_NUM>
                        <xsl:value-of select="$ParseGatewayResponse/pfx13:UGPRESPONSE/SEARCHFIELDS/ACCT_NUM"/>
                    </ACCT_NUM>
                </SEARCHFIELDS>
                <RECORDS>
                    <xsl:for-each select="$ParseGatewayResponse/pfx13:UGPRESPONSE/RECORDS/RECORD">
                        <RECORD>
                            <xsl:if test="string-length(R_AUTH_CODE)>0">
                                <xsl:if test="R_AUTH_CODE">
                                    <R_AUTH_CODE>
                                        <xsl:value-of select="R_AUTH_CODE"/>
                                    </R_AUTH_CODE>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(COMMAND)>0">
                                <xsl:if test="COMMAND">
                                    <COMMAND>
                                        <xsl:value-of select="COMMAND"/>
                                    </COMMAND>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(CTROUTD)>0">
                                <xsl:if test="CTROUTD">
                                    <CTROUTD>
                                        <xsl:value-of select="CTROUTD"/>
                                    </CTROUTD>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(INTRN_SEQ_NUM)>0">
                                <xsl:if test="INTRN_SEQ_NUM">
                                    <INTRN_SEQ_NUM>
                                        <xsl:value-of select="INTRN_SEQ_NUM"/>
                                    </INTRN_SEQ_NUM>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(INVOICE)>0">
                                <xsl:if test="INVOICE">
                                    <INVOICE>
                                        <xsl:value-of select="INVOICE"/>
                                    </INVOICE>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(PAYMENT_MEDIA)>0">
                                <xsl:if test="PAYMENT_MEDIA">
                                    <PAYMENT_MEDIA>
                                        <xsl:value-of select="PAYMENT_MEDIA"/>
                                    </PAYMENT_MEDIA>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(PAYMENT_TYPE)>0">
                                <xsl:if test="PAYMENT_TYPE">
                                    <PAYMENT_TYPE>
                                        <xsl:value-of select="PAYMENT_TYPE"/>
                                    </PAYMENT_TYPE>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(RESULT_CODE)>0">
                                <xsl:if test="RESULT_CODE">
                                    <RESULT_CODE>
                                        <xsl:value-of select="RESULT_CODE"/>
                                    </RESULT_CODE>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(TRANS_AMOUNT)>0">
                                <xsl:if test="TRANS_AMOUNT">
                                    <TRANS_AMOUNT>
                                        <xsl:value-of select="TRANS_AMOUNT"/>
                                    </TRANS_AMOUNT>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(TRANS_DATETIME)>0">
                                <xsl:if test="TRANS_DATETIME">
                                    <TRANS_DATETIME>
                                        <xsl:value-of select="TRANS_DATETIME"/>
                                    </TRANS_DATETIME>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(TRANS_SEQ_NUM)>0">
                                <xsl:if test="TRANS_SEQ_NUM">
                                    <TRANS_SEQ_NUM>
                                        <xsl:value-of select="TRANS_SEQ_NUM"/>
                                    </TRANS_SEQ_NUM>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(TROUTD)>0">
                                <xsl:if test="TROUTD">
                                    <TROUTD>
                                        <xsl:value-of select="TROUTD"/>
                                    </TROUTD>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(CARD_CLASS)>0">
                                <xsl:if test="CARD_CLASS">
                                    <CARD_CLASS>
                                        <xsl:value-of select="CARD_CLASS"/>
                                    </CARD_CLASS>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(AUTH_AMOUNT)>0">
                                <xsl:if test="AUTH_AMOUNT">
                                    <AUTH_AMOUNT>
                                        <xsl:value-of select="AUTH_AMOUNT"/>
                                    </AUTH_AMOUNT>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(AMOUNT_BALANCE)>0">
                                <xsl:if test="AMOUNT_BALANCE">
                                    <AMOUNT_BALANCE>
                                        <xsl:value-of select="AMOUNT_BALANCE"/>
                                    </AMOUNT_BALANCE>
                                </xsl:if>
                            </xsl:if>
                        </RECORD>
                    </xsl:for-each>
                </RECORDS>
            </pfx13:UGPRESPONSE>
            <xsl:if test="string-length($Process/root/Type) > 0">
                <pfx16:UGP_SVC_TransactionSearch>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/root/pfx15:UGP_SVC_TransactionSearch/pfx15:SvcRedemptionRequest/@version)>0">
                            <pfx16:SvcRedemptionResponse>
                                <xsl:attribute name="version">
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/SvcRedemption/MessageVersion"/>
                                </xsl:attribute>
                                <SystemContext>
                                    <EnvironmentIdentifier>
                                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                                    </EnvironmentIdentifier>
                                    <RegionIdentifier>
                                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                                    </RegionIdentifier>
                                    <SourceSystemIdentifier>
                                        <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                                    </SourceSystemIdentifier>
                                    <xsl:choose>
                                        <xsl:when test="string-length($Start/root/pfx15:UGP_SVC_TransactionSearch/pfx15:SvcRedemptionRequest/SystemContext/TransactionId)>0">
                                            <TransactionId>
                                                <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/SvcRedemption/Constants/TransactionIdPrefix,$Start/root/pfx15:UGP_SVC_TransactionSearch/pfx15:SvcReloadRequest/SystemContext/TransactionId)"/>
                                            </TransactionId>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <TransactionId>
                                                <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/SvcReload/Constants/TransactionIdPrefix,concat(tib:format-dateTime($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns2:ProcessContext/ProcessId,  $_globalVariables/ns1:GlobalVariables/ENV   , BW:getHostName()))"/>
                                            </TransactionId>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <TransactionTime>
                                        <xsl:value-of select="current-dateTime()"/>
                                    </TransactionTime>
                                </SystemContext>
                                <xsl:copy-of select="$Start/root/pfx15:UGP_SVC_TransactionSearch/pfx15:SvcRedemptionRequest/PaymentContext"/>
                                <xsl:for-each select="$Process/root">
                                    <Error>
                                        <Type>
                                            <xsl:value-of select="Type"/>
                                        </Type>
                                        <xsl:for-each select="Detail">
                                            <Detail>
                                                <xsl:value-of select="."/>
                                            </Detail>
                                        </xsl:for-each>
                                        <ErrorMessage>
                                            <xsl:value-of select="ErrorMessage"/>
                                        </ErrorMessage>
                                    </Error>
                                </xsl:for-each>
                            </pfx16:SvcRedemptionResponse>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx16:SvcReloadResponse>
                                <xsl:attribute name="version">
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/SvcReload/MessageVersion"/>
                                </xsl:attribute>
                                <SystemContext>
                                    <EnvironmentIdentifier>
                                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                                    </EnvironmentIdentifier>
                                    <RegionIdentifier>
                                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                                    </RegionIdentifier>
                                    <SourceSystemIdentifier>
                                        <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                                    </SourceSystemIdentifier>
                                    <xsl:choose>
                                        <xsl:when test="string-length($Start/root/pfx15:UGP_SVC_TransactionSearch/pfx15:SvcReloadRequest/SystemContext/TransactionId)>0">
                                            <TransactionId>
                                                <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/SvcReload/Constants/TransactionIdPrefix,$Start/root/pfx15:UGP_SVC_TransactionSearch/pfx15:SvcReloadRequest/SystemContext/TransactionId)"/>
                                            </TransactionId>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <TransactionId>
                                                <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/SvcReload/Constants/TransactionIdPrefix,concat(tib:format-dateTime($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns2:ProcessContext/ProcessId,  $_globalVariables/ns1:GlobalVariables/ENV   , BW:getHostName()))"/>
                                            </TransactionId>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <TransactionTime>
                                        <xsl:value-of select="current-dateTime()"/>
                                    </TransactionTime>
                                </SystemContext>
                                <xsl:copy-of select="$Start/root/pfx15:UGP_SVC_TransactionSearch/pfx15:SvcReloadRequest/PaymentContext"/>
                                <xsl:for-each select="$Process/root/Type">
                                    <Error>
                                        <Type>
                                            <xsl:value-of select="."/>
                                        </Type>
                                        <xsl:if test="string-length(../Detail[1])>0">
                                            <xsl:for-each select="../Detail">
                                                <Detail>
                                                    <xsl:value-of select="."/>
                                                </Detail>
                                            </xsl:for-each>
                                        </xsl:if>
                                        <ErrorMessage>
                                            <xsl:value-of select="../ErrorMessage"/>
                                        </ErrorMessage>
                                    </Error>
                                </xsl:for-each>
                            </pfx16:SvcReloadResponse>
                        </xsl:otherwise>
                    </xsl:choose>
                </pfx16:UGP_SVC_TransactionSearch>
            </xsl:if>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx13:UGPRESPONSE" minOccurs="0"/>
                    <xsd:element ref="pfx16:UGP_SVC_TransactionSearch" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1013</pd:endX>
    <pd:endY>206</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Process>
            <xsd:element name="root" type="pfx3:ErrorType"/>
        </Process>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1416874785849</pd:targetNamespace>
    <pd:activity name="AssignCriticalInfoMissingError">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>1009</pd:x>
        <pd:y>35</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Type>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/MISSING_CRITICAL_FIELD_PAYMENTGATEWAY_RESPONSE/Type"/>
                </Type>
                <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$ParseValidationResponse/pfx12:PG_SvcTransactionSearchValidationResult/pfx5:Errors/pfx5:Error/pfx5:Detail">
                    <Detail>
                        <xsl:value-of select="."/>
                    </Detail>
                </xsl:for-each>
                <ErrorMessage>
                    <xsl:value-of select="tib:concat-sequence-format($ParseValidationResponse/pfx12:PG_SvcTransactionSearchValidationResult/pfx5:Errors/pfx5:Error/pfx5:ErrorMessage, $_globalVariables/ns1:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator, true())"/>
                </ErrorMessage>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignNonDetermisticError">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>580</pd:x>
        <pd:y>380</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Type>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/NONDETERMINISTIC_PAYMENTGATEWAY_RESPONSE/Type"/>
                </Type>
                <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$ParseValidationResponse/pfx12:PG_SvcTransactionSearchValidationResult/pfx5:Errors/pfx5:Error/pfx5:Detail">
                    <Detail>
                        <xsl:value-of select="."/>
                    </Detail>
                </xsl:for-each>
                <xsl:variable name="ErrMsg" select="tib:concat-sequence-format($ParseValidationResponse/pfx12:PG_SvcTransactionSearchValidationResult/pfx5:Errors/pfx5:Error, $_globalVariables/ns1:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator, true())"/>
                <xsl:choose>
                    <xsl:when test="string-length($ErrMsg)&lt;=$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/MaximumErrorMessageLength">
                        <ErrorMessage>
                            <xsl:value-of select="$ErrMsg"/>
                        </ErrorMessage>
                    </xsl:when>
                    <xsl:otherwise>
                        <ErrorMessage>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/GENERIC_ERROR/InvIncompleteRespErr"/>
                        </ErrorMessage>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignSafeFailure">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>839</pd:x>
        <pd:y>474</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="$_error/ns2:ErrorReport/Class=$_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                    <root>
                        <Type>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                        </Type>
                        <Detail>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                        </Detail>
                        <ErrorMessage>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                        </ErrorMessage>
                    </root>
                </xsl:when>
                <xsl:otherwise>
                    <root>
                        <Type>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                        </Type>
                        <Detail>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                        </Detail>
                        <ErrorMessage>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/ErrorMessage"/>
                        </ErrorMessage>
                    </root>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>623</pd:x>
        <pd:y>473</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetCLEParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>190</pd:x>
        <pd:y>291</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/SvcTransactionSearch/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetPaymentErrorTypesParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>206</pd:x>
        <pd:y>119</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceErrorTypes.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetPaymentValidationParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>201</pd:x>
        <pd:y>206</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceValidations.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogRequestValidationExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1017</pd:x>
        <pd:y>475</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns12:ExceptionHandlerRequest>
                <ns12:envCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                </ns12:envCode>
                <ns12:appCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLEAppCode"/>
                </ns12:appCode>
                <ns12:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns12:interfaceCode>
                <ns12:hostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </ns12:hostName>
                <ns12:timeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns12:timeStamp>
                <ns12:message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </ns12:message>
                <ns12:payload>
                    <xsl:value-of select="$Start/root/paymentgatewayresponse"/>
                </ns12:payload>
                <ns12:ErrorLevel>
                    <ns12:errorCode>
                        <xsl:value-of select="concat($Process/root/Type, $_globalVariables/ns1:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$Process/root/Detail[1])"/>
                    </ns12:errorCode>
                </ns12:ErrorLevel>
                <ns12:TransactionDetails>
                    <ns12:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns12:transactionDomain>
                    <ns12:transactionType>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/SvcTransactionSearch/CLE/TransactionType"/>
                    </ns12:transactionType>
                    <ns12:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns12:transactionID>
                </ns12:TransactionDetails>
                <xsl:for-each select="$_error/ns2:ErrorReport">
                    <ns12:ErrorReportType>
                        <ns12:stackTrace>
                            <xsl:value-of select="StackTrace"/>
                        </ns12:stackTrace>
                        <ns12:msg>
                            <xsl:value-of select="Msg"/>
                        </ns12:msg>
                        <ns12:fullClass>
                            <xsl:value-of select="FullClass"/>
                        </ns12:fullClass>
                        <ns12:class>
                            <xsl:value-of select="Class"/>
                        </ns12:class>
                        <ns12:processStack>
                            <xsl:value-of select="ProcessStack"/>
                        </ns12:processStack>
                        <xsl:if test="MsgCode">
                            <ns12:msgCode>
                                <xsl:value-of select="MsgCode"/>
                            </ns12:msgCode>
                        </xsl:if>
                        <ns12:data>
                            <xsl:value-of select="Data/*"/>
                        </ns12:data>
                    </ns12:ErrorReportType>
                </xsl:for-each>
            </ns12:ExceptionHandlerRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseGatewayResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>722</pd:x>
        <pd:y>205</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx13:UGPRESPONSE"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="tib:render-xml($ParseValidationResponse/pfx12:PG_SvcTransactionSearchValidationResult/pfx13:UGPRESPONSE)"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseValidationResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>577</pd:x>
        <pd:y>205</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx12:PG_SvcTransactionSearchValidationResult"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Validate/xmlString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Validate">
        <pd:type>com.tibco.plugin.xml.XMLTransformActivity</pd:type>
        <pd:resourceType>ae.activities.XMLTransformActivity</pd:resourceType>
        <pd:x>403</pd:x>
        <pd:y>204</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <engine>Saxon</engine>
        </config>
        <pd:inputBindings>
            <textInput>
                <xmlString>
                    <xsl:value-of select="$Start/root/paymentgatewayresponse"/>
                </xmlString>
                <stylesheet>
                    <xsl:value-of select="$GetPaymentValidationParams/ns:PaymentServiceValidations/ns:PaymentServiceValidation[ns:RuleName = $_globalVariables/ns1:GlobalVariables/SvcTransactionSearch/Validation/UGP_SVCTranSearchPGRespValidationXslt]/ns:RuleContent"/>
                </stylesheet>
                <parameter>
                    <name>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/XSLT_VALIDATION_PARAM"/>
                    </name>
                    <value>
                        <xsl:value-of select="tib:render-xml($GetPaymentErrorTypesParams/ns5:PaymentServiceErrorTypes)"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="true()"/>
                    </isXMLDocument>
                </parameter>
                <parameter>
                    <name>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/XSLT_DATE_FORMAT"/>
                    </name>
                    <value>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/SvcTransactionSearch/PaymentGateway/TimeFormat"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="false()"/>
                    </isXMLDocument>
                </parameter>
                <parameter>
                    <name>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/XSLT_DATE_FORMAT_REGEX"/>
                    </name>
                    <value>
                        <xsl:value-of select="regexGenerator:Generate_Regex($_globalVariables/ns1:GlobalVariables/SvcTransactionSearch/PaymentGateway/TimeFormat)"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="false()"/>
                    </isXMLDocument>
                </parameter>
            </textInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendExcpetionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>723</pd:x>
        <pd:y>39</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns12:ExceptionHandlerRequest>
                <ns12:envCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                </ns12:envCode>
                <ns12:appCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLEAppCode"/>
                </ns12:appCode>
                <ns12:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns12:interfaceCode>
                <ns12:hostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </ns12:hostName>
                <ns12:timeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns12:timeStamp>
                <ns12:message>
                    <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/MISSING_CRITICAL_FIELD_PAYMENTGATEWAY_RESPONSE/ErrorMessage,tib:concat-sequence-format($ParseValidationResponse/pfx12:PG_SvcTransactionSearchValidationResult/pfx5:Errors/pfx5:Error[pfx5:Type=$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/MISSING_CRITICAL_FIELD_PAYMENTGATEWAY_RESPONSE/Type]/pfx5:ErrorMessage, &quot;,&quot;))"/>
                </ns12:message>
                <ns12:payload>
                    <xsl:value-of select="tib:render-xml($ParseValidationResponse/pfx12:PG_SvcTransactionSearchValidationResult)"/>
                </ns12:payload>
                <ns12:ErrorLevel>
                    <ns12:errorCode>
                        <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type, $_globalVariables/ns1:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail)"/>
                    </ns12:errorCode>
                </ns12:ErrorLevel>
                <ns12:TransactionDetails>
                    <ns12:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns12:transactionDomain>
                    <ns12:transactionType>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/SvcTransactionSearch/CLE/TransactionType"/>
                    </ns12:transactionType>
                    <ns12:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns12:transactionID>
                </ns12:TransactionDetails>
            </ns12:ExceptionHandlerRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPaymentValidationParams</pd:from>
        <pd:to>Validate</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Validate</pd:from>
        <pd:to>ParseValidationResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseValidationResponse</pd:from>
        <pd:to>AssignNonDetermisticError</pd:to>
        <pd:xpathDescription>NonDeterministic</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ParseValidationResponse/pfx12:PG_SvcTransactionSearchValidationResult/pfx5:Errors/pfx5:Error[pfx5:Type=$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/NONDETERMINISTIC_PAYMENTGATEWAY_RESPONSE/Type])&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseGatewayResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>AssignSafeFailure</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogRequestValidationExceptionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignSafeFailure</pd:from>
        <pd:to>LogRequestValidationExceptionRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseValidationResponse</pd:from>
        <pd:to>ParseGatewayResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>Validate</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetPaymentValidationParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseGatewayResponse</pd:from>
        <pd:to>SendExcpetionRequest</pd:to>
        <pd:xpathDescription>Sensitive Data Missing</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ParseValidationResponse/pfx12:PG_SvcTransactionSearchValidationResult/pfx5:Errors/pfx5:Error[pfx5:Type=$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/MISSING_CRITICAL_FIELD_PAYMENTGATEWAY_RESPONSE/Type]/pfx5:Type)&gt;0 
and
 $_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/WARNING_AS_ERROR=$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/BooleanSuccess</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignCriticalInfoMissingError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignNonDetermisticError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetPaymentErrorTypesParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPaymentErrorTypesParams</pd:from>
        <pd:to>Validate</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendExcpetionRequest</pd:from>
        <pd:to>AssignCriticalInfoMissingError</pd:to>
        <pd:xpathDescription>WARN_AS_ERROR</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/WARNING_AS_ERROR=$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/BooleanSuccess</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>SendExcpetionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:xpathDescription>WARN_AS_SUCCESS</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label (1) (2)</pd:name>
        <pd:description>XML Request Validator</pd:description>
        <pd:x>82</pd:x>
        <pd:y>87</pd:y>
        <pd:width>137</pd:width>
        <pd:height>35</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-3342388</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>