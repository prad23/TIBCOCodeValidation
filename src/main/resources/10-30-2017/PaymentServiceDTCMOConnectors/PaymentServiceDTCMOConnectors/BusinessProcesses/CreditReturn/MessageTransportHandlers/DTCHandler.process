<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/IBMiAdapterConfiguration/DataQueueWrite/DataQueueWrite" xmlns:ns10="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/Return/OutboundMessage/Data_Structures/ReturnPublisher" xmlns:ns="http://services.wsgc.com/2014/Payment" xmlns:ns11="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:ns12="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/IBMiAdapterConfiguration/OutboundMessage/OutboundMessage" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns3="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/IBMiAdapterConfiguration/OutboundMessage/Data_Structures/PublicationService" xmlns:ns4="http://www.tibco.com/pe/EngineTypes" xmlns:pfx2="http://www.wsgc.com/schemas/common/PaymentServiceAuditSwitches.xsd" xmlns:ns5="http://schemas.tibco.com/bw/plugins/ae/5.0/aeExceptions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx4="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/Return/OutboundMessage/OutboundMessage" xmlns:pfx5="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/Return/DataQueueWrite/DataQueueWrite" xmlns:ns8="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions">
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2014/Payment/tokenization.xsd"/>
    <xsd:import namespace="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/IBMiAdapterConfiguration/DataQueueWrite/DataQueueWrite" schemaLocation="/AESchemas/ae/as400/IBMiAdapterConfiguration/DataQueueWrite/DataQueueWrite.aeschema"/>
    <xsd:import namespace="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/Return/OutboundMessage/OutboundMessage" schemaLocation="/AESchemas/ae/as400/Return/OutboundMessage/OutboundMessage.aeschema"/>
    <xsd:import namespace="http://www.tibco.com/xmlns/ae2xsd/2002/05/ae/as400/Return/DataQueueWrite/DataQueueWrite" schemaLocation="/AESchemas/ae/as400/Return/DataQueueWrite/DataQueueWrite.aeschema"/>
    <pd:name>BusinessProcesses/CreditReturn/MessageTransportHandlers/DTCHandler.process</pd:name>
    <pd:startName>CreditReturnReceiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="CreditReturnReceiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>65</pd:x>
        <pd:y>324</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>%%Return/JMS/AcknowledgementMode%%</acknowledgeMode>
                <maxSessions>%%Return/JMS/MaxSessions%%</maxSessions>
                <destination>%%PrefixQueue%%.%%ENV%%.%%Return/AS400Adapter/JMS/AS400QueueNamePubSuffix%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/SharedConnections/JMS/EMSEPSSECURE.sharedjmscon</ConnectionReference>
            <OutDataxsdString ref="pfx4:ReturnPublisher"/>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1430</pd:endX>
    <pd:endY>217</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <TransactionID>
            <xsd:element name="TransactionID" type="xsd:string"/>
        </TransactionID>
        <ResponseToAdapter ref="pfx5:ReturnSubscriber"/>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1428011603211</pd:targetNamespace>
    <pd:activity name="Confirm">
        <pd:type>com.tibco.pe.core.ConfirmActivity</pd:type>
        <pd:resourceType>activity.confirm</pd:resourceType>
        <pd:x>1296</pd:x>
        <pd:y>217</pd:y>
        <config>
            <ConfirmEvent>CreditReturnReceiver</ConfirmEvent>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>595</pd:x>
        <pd:y>569</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ResponseToAdapterInvalidRequest">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>725</pd:x>
        <pd:y>57</pd:y>
        <config>
            <variableName>ResponseToAdapter</variableName>
        </config>
        <pd:inputBindings>
            <pfx5:ReturnSubscriber>
                <xsl:variable name="Blank" select="$_globalVariables/ns2:GlobalVariables/PaymentService/DTCMOErrors/Blank"/>
                <xsl:variable name="Entry" select="$CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry"/>
                <xsl:variable name="Error" select="$MapInputToXMLValidator/root/ns:CreditCardReturnResponse/Error"/>
                <Entry>
                    <OutputDataQueue>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/OutputDataQueue),20)"/>
                    </OutputDataQueue>
                    <CorrelationID>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/CorrelationID),20)"/>
                    </CorrelationID>
                    <Version>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Version),15)"/>
                    </Version>
                    <EnvironmentIdentifier>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/EnvironmentIdentifier),10)"/>
                    </EnvironmentIdentifier>
                    <RegionIdentifier>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/RegionIdentifier),10)"/>
                    </RegionIdentifier>
                    <SourceSystemIdentifier>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/SourceSystemIdentifier),50)"/>
                    </SourceSystemIdentifier>
                    <TransactionId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/TransactionId),80)"/>
                    </TransactionId>
                    <TransactionTime>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/TransactionTime),30)"/>
                    </TransactionTime>
                    <Concept>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Concept),5)"/>
                    </Concept>
                    <Channel>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Channel),10)"/>
                    </Channel>
                    <AssociateId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/AssociateId),10)"/>
                    </AssociateId>
                    <OrderNumber>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/OrderNumber),20)"/>
                    </OrderNumber>
                    <ConsumerTransactionId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/ConsumerTransactionId),80)"/>
                    </ConsumerTransactionId>
                    <FinancialDate>
                        <xsl:value-of select="tib:pad-and-limit(substring-before(current-dateTime(), &quot;T&quot;),20)"/>
                    </FinancialDate>
                    <ConfirmationId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </ConfirmationId>
                    <TransactionMetadata1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata1>
                    <TransactionMetadataType1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType1>
                    <TransactionMetadata2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata2>
                    <TransactionMetadataType2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType2>
                    <TransactionMetadata3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata3>
                    <TransactionMetadataType3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType3>
                    <TransactionMetadata4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata4>
                    <TransactionMetadataType4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType4>
                    <TransactionMetadata5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata5>
                    <TransactionMetadataType5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType5>
                    <TransactionMetadata6>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata6>
                    <TransactionMetadataType6>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType6>
                    <TransactionMetadata7>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata7>
                    <TransactionMetadataType7>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType7>
                    <TransactionMetadata8>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata8>
                    <TransactionMetadataType8>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType8>
                    <TransactionMetadata9>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata9>
                    <TransactionMetadataType9>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType9>
                    <TransactionMetadata10>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata10>
                    <TransactionMetadataType10>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType10>
                    <Code>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Code),40)"/>
                    </Code>
                    <SubCode>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/SubCode),40)"/>
                    </SubCode>
                    <Token>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Token),520)"/>
                    </Token>
                    <TokenScheme>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Scheme),20)"/>
                    </TokenScheme>
                    <Scope>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Scope),15)"/>
                    </Scope>
                    <IsTemporary>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/IsTemporary),1)"/>
                    </IsTemporary>
                    <Expiration>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Expiration),30)"/>
                    </Expiration>
                    <Hash1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash1>
                    <HashScheme1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme1>
                    <Hash2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash2>
                    <HashScheme2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme2>
                    <Hash3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash3>
                    <HashScheme3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme3>
                    <Hash4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash4>
                    <HashScheme4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme4>
                    <Hash5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash5>
                    <HashScheme5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme5>
                    <MaskedAccountNumber>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </MaskedAccountNumber>
                    <Type>
                        <xsl:choose>
                            <xsl:when test="exists(substring(tib:pad($Error/Type,100), 1, 100))">
                                <xsl:value-of select="substring(tib:pad($Error/Type,100), 1, 100)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </Type>
                    <Detail1>
                        <xsl:choose>
                            <xsl:when test="exists(substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1, 100))">
                                <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1, 100)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </Detail1>
                    <Detail2>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 101, 100)"/>
                    </Detail2>
                    <Detail3>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 201, 100)"/>
                    </Detail3>
                    <Detail4>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 301, 100)"/>
                    </Detail4>
                    <Detail5>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 401, 100)"/>
                    </Detail5>
                    <Detail6>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 501, 100)"/>
                    </Detail6>
                    <Detail7>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 601, 100)"/>
                    </Detail7>
                    <Detail8>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 701, 100)"/>
                    </Detail8>
                    <Detail9>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 801, 100)"/>
                    </Detail9>
                    <Detail10>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 901, 100)"/>
                    </Detail10>
                    <Detail11>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1001, 100)"/>
                    </Detail11>
                    <Detail12>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1101, 100)"/>
                    </Detail12>
                    <Detail13>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1201, 100)"/>
                    </Detail13>
                    <Detail14>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1301, 100)"/>
                    </Detail14>
                    <Detail15>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1401, 100)"/>
                    </Detail15>
                    <ErrorMessage>
                        <xsl:choose>
                            <xsl:when test="exists(substring(tib:pad($Error/ErrorMessage, 200), 1, 200))">
                                <xsl:value-of select="substring(tib:pad($Error/ErrorMessage, 200), 1, 200)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ErrorMessage>
                    <ReportingGroup>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </ReportingGroup>
                </Entry>
            </pfx5:ReturnSubscriber>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Confirm-1">
        <pd:type>com.tibco.pe.core.ConfirmActivity</pd:type>
        <pd:resourceType>activity.confirm</pd:resourceType>
        <pd:x>1437</pd:x>
        <pd:y>441</pd:y>
        <config>
            <ConfirmEvent>CreditReturnReceiver</ConfirmEvent>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetCLEParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>179</pd:x>
        <pd:y>339</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/CreditReturn/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetAppAuditSwitchesVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>301</pd:x>
        <pd:y>337</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceAppAuditSwitches.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogPaymentServiceRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>298</pd:x>
        <pd:y>199</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendLogRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns12:envCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ENV"/>
                </ns12:envCode>
                <ns12:appCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/AppCode"/>
                </ns12:appCode>
                <ns12:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns12:interfaceCode>
                <ns12:timestamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns12:timestamp>
                <ns12:message>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/BeginAuditMessage"/>
                </ns12:message>
                <ns12:TransactionDetails>
                    <ns12:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns12:transactionDomain>
                    <ns12:transactionType>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Return/CLE/TransactionType"/>
                    </ns12:transactionType>
                    <ns12:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns12:transactionID>
                </ns12:TransactionDetails>
                <ns12:AuditInfo>
                    <ns12:payload>
                        <xsl:value-of select="tib:render-xml($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher)"/>
                    </ns12:payload>
                    <ns12:auditStep>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/Constants/AuditBegin"/>
                    </ns12:auditStep>
                </ns12:AuditInfo>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SetCLEParams">
        <pd:type>com.tibco.pe.core.SetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.setSharedVariable</pd:resourceType>
        <pd:x>174</pd:x>
        <pd:y>199</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/CreditReturn/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Return/CLE/DTCMOInterfaceCode"/>
                </InterfaceCode>
                <TransactionId>
                    <xsl:value-of select="concat(tib:trim($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/OrderNumber), $_globalVariables/ns2:GlobalVariables/PaymentService/Constants/TransactionIdSeparator,&#xA;tib:trim($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/ConsumerTransactionId),$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/TransactionIdSeparator,&#xA;tib:trim($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/TransactionId))"/>
                </TransactionId>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogPaymentServiceResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1114</pd:x>
        <pd:y>35</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendLogRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns12:envCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ENV"/>
                </ns12:envCode>
                <ns12:appCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/AppCode"/>
                </ns12:appCode>
                <ns12:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns12:interfaceCode>
                <ns12:timestamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns12:timestamp>
                <ns12:message>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/EndAuditMessage"/>
                </ns12:message>
                <ns12:TransactionDetails>
                    <ns12:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns12:transactionDomain>
                    <ns12:transactionType>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Return/CLE/TransactionType"/>
                    </ns12:transactionType>
                    <ns12:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns12:transactionID>
                </ns12:TransactionDetails>
                <ns12:AuditInfo>
                    <ns12:payload>
                        <xsl:value-of select="tib:render-xml($ResponseToAdapter)"/>
                    </ns12:payload>
                    <ns12:auditStep>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/Constants/AuditEnd"/>
                    </ns12:auditStep>
                </ns12:AuditInfo>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ReturnCommon">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>587</pd:x>
        <pd:y>206</pd:y>
        <config>
            <processName>/BusinessProcesses/CreditReturn/Return.process</processName>
        </config>
        <pd:inputBindings>
            <xsl:copy-of select="$MapInputToXMLValidator/root/ns:CreditCardReturnRequest"/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>585</pd:x>
        <pd:y>56</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="MapInputToXMLValidator">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>452</pd:x>
        <pd:y>201</pd:y>
        <config>
            <processName>/BusinessProcesses/CreditReturn/RequestProcessors/ValidateDTCMORequest.process</processName>
        </config>
        <pd:inputBindings>
            <ns10:Entry>
                <xsl:copy-of select="$CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/ancestor-or-self::*/namespace::node()"/>
                <xsl:copy-of select="$CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/@*"/>
                <xsl:copy-of select="$CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/node()"/>
            </ns10:Entry>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>1041</pd:x>
        <pd:y>219</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="SendExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>948</pd:x>
        <pd:y>442</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns12:ExceptionHandlerRequest>
                <ns12:envCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ENV"/>
                </ns12:envCode>
                <ns12:appCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/AppCode"/>
                </ns12:appCode>
                <ns12:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns12:interfaceCode>
                <ns12:hostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </ns12:hostName>
                <ns12:timeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns12:timeStamp>
                <ns12:message>
                    <xsl:value-of select="$_error/ns4:ErrorReport/Msg"/>
                </ns12:message>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="string-length($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher) > 0">
                        <ns12:payload>
                            <xsl:value-of select="tib:render-xml($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher)"/>
                        </ns12:payload>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns12:payload>
                            <xsl:value-of select="&quot;&quot;"/>
                        </ns12:payload>
                    </xsl:otherwise>
                </xsl:choose>
                <ns12:ErrorLevel>
                    <ns12:errorCode>
                        <xsl:value-of select="substring(concat($Map-Data/root/Type, $_globalVariables/ns2:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$Map-Data/root/Detail[1]),1, 100)"/>
                    </ns12:errorCode>
                </ns12:ErrorLevel>
                <ns12:TransactionDetails>
                    <ns12:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns12:transactionDomain>
                    <ns12:transactionType>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Return/CLE/TransactionType"/>
                    </ns12:transactionType>
                    <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="string-length($GetCLEParams/root/TransactionId) > 0">
                            <ns12:transactionID>
                                <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                            </ns12:transactionID>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns12:transactionID>
                                <xsl:value-of select="$TransactionID/TransactionID"/>
                            </ns12:transactionID>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns12:TransactionDetails>
                <xsl:for-each select="$_processContext/ns4:ProcessContext">
                    <ns12:ProcessContextDetails>
                        <ns12:processId>
                            <xsl:value-of select="ProcessId"/>
                        </ns12:processId>
                        <ns12:projectName>
                            <xsl:value-of select="ProjectName"/>
                        </ns12:projectName>
                        <ns12:engineName>
                            <xsl:value-of select="EngineName"/>
                        </ns12:engineName>
                        <ns12:restartedFromCheckpoint>
                            <xsl:value-of select="RestartedFromCheckpoint"/>
                        </ns12:restartedFromCheckpoint>
                        <xsl:for-each select="TrackingInfo">
                            <ns12:trackingInfo>
                                <xsl:value-of select="."/>
                            </ns12:trackingInfo>
                        </xsl:for-each>
                    </ns12:ProcessContextDetails>
                </xsl:for-each>
                <xsl:for-each select="$_error/ns4:ErrorReport">
                    <ns12:ErrorReportType>
                        <ns12:stackTrace>
                            <xsl:value-of select="StackTrace"/>
                        </ns12:stackTrace>
                        <ns12:msg>
                            <xsl:value-of select="Msg"/>
                        </ns12:msg>
                        <ns12:fullClass>
                            <xsl:value-of select="FullClass"/>
                        </ns12:fullClass>
                        <ns12:class>
                            <xsl:value-of select="Class"/>
                        </ns12:class>
                        <ns12:processStack>
                            <xsl:value-of select="ProcessStack"/>
                        </ns12:processStack>
                        <xsl:if test="MsgCode">
                            <ns12:msgCode>
                                <xsl:value-of select="MsgCode"/>
                            </ns12:msgCode>
                        </xsl:if>
                        <xsl:if test="Data">
                            <ns12:data>
                                <xsl:value-of select="tib:render-xml(Data)"/>
                            </ns12:data>
                        </xsl:if>
                    </ns12:ErrorReportType>
                </xsl:for-each>
            </ns12:ExceptionHandlerRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>663</pd:x>
        <pd:y>435</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Type" type="xsd:string"/>
                            <xsd:element name="Detail" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                            <xsd:element name="ErrorMessage" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <Type>
                    <xsl:value-of select="concat($GetCLEParams/root/InterfaceCode, &quot;.&quot;,$_error/ns4:ErrorReport/MsgCode)"/>
                </Type>
                <Detail>
                    <xsl:value-of select="&quot;&quot;"/>
                </Detail>
                <ErrorMessage>
                    <xsl:value-of select="$_error/ns4:ErrorReport/Msg"/>
                </ErrorMessage>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ResponseToAdapterCreditReturn">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>865</pd:x>
        <pd:y>214</pd:y>
        <config>
            <variableName>ResponseToAdapter</variableName>
        </config>
        <pd:inputBindings>
            <xsl:copy-of select="$MapDTCMOControllerOutput/pfx5:ReturnSubscriber"/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapDTCMOControllerOutput">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>724</pd:x>
        <pd:y>205</pd:y>
        <config>
            <processName>/BusinessProcesses/CreditReturn/ResponseProcessors/MapDTCMOResponse.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:copy-of select="$CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher"/>
                <ReturnCommon>
                    <xsl:copy-of select="$ReturnCommon/ns:CreditCardReturnResponse"/>
                </ReturnCommon>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>68</pd:x>
        <pd:y>199</pd:y>
        <config>
            <variableName>TransactionID</variableName>
        </config>
        <pd:inputBindings>
            <TransactionID>
                <xsl:value-of select="$CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/TransactionId"/>
            </TransactionID>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ResponseToAdapterInvalidRequest-1">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>802</pd:x>
        <pd:y>436</pd:y>
        <config>
            <variableName>ResponseToAdapter</variableName>
        </config>
        <pd:inputBindings>
            <pfx5:ReturnSubscriber>
                <xsl:variable name="Blank" select="$_globalVariables/ns2:GlobalVariables/PaymentService/DTCMOErrors/Blank"/>
                <xsl:variable name="Entry" select="$CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry"/>
                <xsl:variable name="Error" select="$MapInputToXMLValidator/root/ns:CreditCardReturnResponse/Error"/>
                <Entry>
                    <OutputDataQueue>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/OutputDataQueue),20)"/>
                    </OutputDataQueue>
                    <CorrelationID>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/CorrelationID),20)"/>
                    </CorrelationID>
                    <Version>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Version),15)"/>
                    </Version>
                    <EnvironmentIdentifier>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/EnvironmentIdentifier),10)"/>
                    </EnvironmentIdentifier>
                    <RegionIdentifier>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/RegionIdentifier),10)"/>
                    </RegionIdentifier>
                    <SourceSystemIdentifier>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/SourceSystemIdentifier),50)"/>
                    </SourceSystemIdentifier>
                    <TransactionId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/TransactionId),80)"/>
                    </TransactionId>
                    <TransactionTime>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/TransactionTime),30)"/>
                    </TransactionTime>
                    <Concept>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Concept),5)"/>
                    </Concept>
                    <Channel>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Channel),10)"/>
                    </Channel>
                    <AssociateId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/AssociateId),10)"/>
                    </AssociateId>
                    <OrderNumber>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/OrderNumber),20)"/>
                    </OrderNumber>
                    <ConsumerTransactionId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/ConsumerTransactionId),80)"/>
                    </ConsumerTransactionId>
                    <FinancialDate>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </FinancialDate>
                    <ConfirmationId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </ConfirmationId>
                    <TransactionMetadata1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata1>
                    <TransactionMetadataType1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType1>
                    <TransactionMetadata2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata2>
                    <TransactionMetadataType2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType2>
                    <TransactionMetadata3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata3>
                    <TransactionMetadataType3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType3>
                    <TransactionMetadata4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata4>
                    <TransactionMetadataType4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType4>
                    <TransactionMetadata5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata5>
                    <TransactionMetadataType5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType5>
                    <TransactionMetadata6>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata6>
                    <TransactionMetadataType6>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType6>
                    <TransactionMetadata7>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata7>
                    <TransactionMetadataType7>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType7>
                    <TransactionMetadata8>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata8>
                    <TransactionMetadataType8>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType8>
                    <TransactionMetadata9>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata9>
                    <TransactionMetadataType9>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType9>
                    <TransactionMetadata10>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata10>
                    <TransactionMetadataType10>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType10>
                    <Code>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Code),40)"/>
                    </Code>
                    <SubCode>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/SubCode),40)"/>
                    </SubCode>
                    <Token>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Token),520)"/>
                    </Token>
                    <TokenScheme>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Scheme),20)"/>
                    </TokenScheme>
                    <Scope>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Scope),15)"/>
                    </Scope>
                    <IsTemporary>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/IsTemporary),1)"/>
                    </IsTemporary>
                    <Expiration>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/Expiration),30)"/>
                    </Expiration>
                    <Hash1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash1>
                    <HashScheme1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme1>
                    <Hash2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash2>
                    <HashScheme2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme2>
                    <Hash3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash3>
                    <HashScheme3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme3>
                    <Hash4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash4>
                    <HashScheme4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme4>
                    <Hash5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash5>
                    <HashScheme5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme5>
                    <MaskedAccountNumber>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </MaskedAccountNumber>
                    <Type>
                        <xsl:choose>
                            <xsl:when test="exists(substring(tib:pad($Error/Type,100), 1, 100))">
                                <xsl:value-of select="substring(tib:pad($Error/Type,100), 1, 100)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </Type>
                    <Detail1>
                        <xsl:choose>
                            <xsl:when test="exists(substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1, 100))">
                                <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1, 100)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </Detail1>
                    <Detail2>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 101, 100)"/>
                    </Detail2>
                    <Detail3>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 201, 100)"/>
                    </Detail3>
                    <Detail4>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 301, 100)"/>
                    </Detail4>
                    <Detail5>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 401, 100)"/>
                    </Detail5>
                    <Detail6>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 501, 100)"/>
                    </Detail6>
                    <Detail7>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 601, 100)"/>
                    </Detail7>
                    <Detail8>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 701, 100)"/>
                    </Detail8>
                    <Detail9>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 801, 100)"/>
                    </Detail9>
                    <Detail10>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 901, 100)"/>
                    </Detail10>
                    <Detail11>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1001, 100)"/>
                    </Detail11>
                    <Detail12>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1101, 100)"/>
                    </Detail12>
                    <Detail13>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1201, 100)"/>
                    </Detail13>
                    <Detail14>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1301, 100)"/>
                    </Detail14>
                    <Detail15>
                        <xsl:value-of select="substring(tib:pad(tib:concat-sequence($Error/Detail), 1500), 1401, 100)"/>
                    </Detail15>
                    <ErrorMessage>
                        <xsl:choose>
                            <xsl:when test="exists(substring(tib:pad($Error/ErrorMessage, 200), 1, 200))">
                                <xsl:value-of select="substring(tib:pad($Error/ErrorMessage, 200), 1, 200)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ErrorMessage>
                    <ReportingGroup>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </ReportingGroup>
                    <EoFIndicator>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Entry/EoFIndicator),1)"/>
                    </EoFIndicator>
                </Entry>
            </pfx5:ReturnSubscriber>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-2">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>457</pd:x>
        <pd:y>334</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ResponseToAdapterInvalidRequest-2">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>610</pd:x>
        <pd:y>334</pd:y>
        <config>
            <variableName>ResponseToAdapter</variableName>
        </config>
        <pd:inputBindings>
            <pfx5:ReturnSubscriber>
                <xsl:variable name="Blank" select="$_globalVariables/ns2:GlobalVariables/PaymentService/DTCMOErrors/Blank"/>
                <Entry>
                    <OutputDataQueue>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/OutputDataQueue),20)"/>
                    </OutputDataQueue>
                    <CorrelationID>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/CorrelationID),20)"/>
                    </CorrelationID>
                    <Version>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),15)"/>
                    </Version>
                    <EnvironmentIdentifier>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),10)"/>
                    </EnvironmentIdentifier>
                    <RegionIdentifier>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),10)"/>
                    </RegionIdentifier>
                    <SourceSystemIdentifier>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),50)"/>
                    </SourceSystemIdentifier>
                    <TransactionId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/TransactionId),80)"/>
                    </TransactionId>
                    <TransactionTime>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionTime>
                    <Concept>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),5)"/>
                    </Concept>
                    <Channel>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),10)"/>
                    </Channel>
                    <AssociateId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),10)"/>
                    </AssociateId>
                    <OrderNumber>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </OrderNumber>
                    <ConsumerTransactionId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </ConsumerTransactionId>
                    <FinancialDate>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </FinancialDate>
                    <ConfirmationId>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </ConfirmationId>
                    <TransactionMetadata1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata1>
                    <TransactionMetadataType1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType1>
                    <TransactionMetadata2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata2>
                    <TransactionMetadataType2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType2>
                    <TransactionMetadata3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata3>
                    <TransactionMetadataType3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType3>
                    <TransactionMetadata4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata4>
                    <TransactionMetadataType4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType4>
                    <TransactionMetadata5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata5>
                    <TransactionMetadataType5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType5>
                    <TransactionMetadata6>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata6>
                    <TransactionMetadataType6>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType6>
                    <TransactionMetadata7>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata7>
                    <TransactionMetadataType7>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType7>
                    <TransactionMetadata8>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata8>
                    <TransactionMetadataType8>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType8>
                    <TransactionMetadata9>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata9>
                    <TransactionMetadataType9>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType9>
                    <TransactionMetadata10>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),80)"/>
                    </TransactionMetadata10>
                    <TransactionMetadataType10>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </TransactionMetadataType10>
                    <Code>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),40)"/>
                    </Code>
                    <SubCode>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),40)"/>
                    </SubCode>
                    <Token>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),520)"/>
                    </Token>
                    <TokenScheme>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </TokenScheme>
                    <Scope>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),15)"/>
                    </Scope>
                    <IsTemporary>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),1)"/>
                    </IsTemporary>
                    <Expiration>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),30)"/>
                    </Expiration>
                    <Hash1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash1>
                    <HashScheme1>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme1>
                    <Hash2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash2>
                    <HashScheme2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme2>
                    <Hash3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash3>
                    <HashScheme3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme3>
                    <Hash4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash4>
                    <HashScheme4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme4>
                    <Hash5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),70)"/>
                    </Hash5>
                    <HashScheme5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </HashScheme5>
                    <MaskedAccountNumber>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </MaskedAccountNumber>
                    <Type>
                        <xsl:choose>
                            <xsl:when test="exists(tib:pad-and-limit(tib:trim($Blank),100))">
                                <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </Type>
                    <Detail1>
                        <xsl:choose>
                            <xsl:when test="exists(tib:pad-and-limit(tib:trim($Blank),100))">
                                <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </Detail1>
                    <Detail2>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail2>
                    <Detail3>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail3>
                    <Detail4>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail4>
                    <Detail5>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail5>
                    <Detail6>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail6>
                    <Detail7>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail7>
                    <Detail8>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail8>
                    <Detail9>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail9>
                    <Detail10>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail10>
                    <Detail11>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail11>
                    <Detail12>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail12>
                    <Detail13>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail13>
                    <Detail14>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail14>
                    <Detail15>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),100)"/>
                    </Detail15>
                    <ErrorMessage>
                        <xsl:choose>
                            <xsl:when test="exists(tib:pad-and-limit(tib:trim($Blank),200))">
                                <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),200)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ErrorMessage>
                    <ReportingGroup>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($Blank),20)"/>
                    </ReportingGroup>
                    <EoFIndicator>
                        <xsl:value-of select="tib:pad-and-limit(tib:trim($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/EoFIndicator),1)"/>
                    </EoFIndicator>
                </Entry>
            </pfx5:ReturnSubscriber>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignTransactionID">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>494</pd:x>
        <pd:y>436</pd:y>
        <config>
            <variableName>TransactionID</variableName>
        </config>
        <pd:inputBindings>
            <TransactionID>
                <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="concat(tib:format-dateTime($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns4:ProcessContext/ProcessId,  $_globalVariables/ns2:GlobalVariables/ENV   , BW:getHostName())"/>
            </TransactionID>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogPaymentServiceErrorResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1091</pd:x>
        <pd:y>439</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendLogRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns12:envCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ENV"/>
                </ns12:envCode>
                <ns12:appCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/AppCode"/>
                </ns12:appCode>
                <ns12:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns12:interfaceCode>
                <ns12:timestamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns12:timestamp>
                <ns12:message>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/EndAuditMessage"/>
                </ns12:message>
                <ns12:TransactionDetails>
                    <ns12:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns12:transactionDomain>
                    <ns12:transactionType>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Return/CLE/TransactionType"/>
                    </ns12:transactionType>
                    <ns12:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns12:transactionID>
                </ns12:TransactionDetails>
                <ns12:AuditInfo>
                    <ns12:payload>
                        <xsl:value-of select="tib:render-xml($ResponseToAdapter)"/>
                    </ns12:payload>
                    <ns12:auditStep>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/Constants/AuditEnd"/>
                    </ns12:auditStep>
                </ns12:AuditInfo>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="PublishToAdapter">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>1165</pd:x>
        <pd:y>217</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%PrefixQueue%%.%%ENV%%.%%Return/AS400Adapter/JMS/AS400QueueNameSubSuffix%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/SharedConnections/JMS/EMSEPSSECURE.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx5:ReturnSubscriber"/>
        </config>
        <pd:inputBindings>
            <ns8:ActivityInput>
                <Body>
                    <xsl:copy-of select="$ResponseToAdapter/pfx5:ReturnSubscriber"/>
                </Body>
                <xsl:copy-of select="$CreditReturnReceiver/ns8:ActivityOutput/DynamicProperties"/>
            </ns8:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="PublishToAdapterOnError">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>1262</pd:x>
        <pd:y>441</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%PrefixQueue%%.%%ENV%%.%%Return/AS400Adapter/JMS/AS400QueueNameSubSuffix%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/SharedConnections/JMS/EMSEPSSECURE.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx5:ReturnSubscriber"/>
        </config>
        <pd:inputBindings>
            <ns8:ActivityInput>
                <Body>
                    <xsl:copy-of select="$ResponseToAdapter/pfx5:ReturnSubscriber"/>
                </Body>
                <xsl:copy-of select="$CreditReturnReceiver/ns8:ActivityOutput/DynamicProperties"/>
            </ns8:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Confirm</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Confirm-1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetCLEParams</pd:from>
        <pd:to>GetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogPaymentServiceRequest</pd:from>
        <pd:to>MapInputToXMLValidator</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>ReturnCommon</pd:to>
        <pd:xpathDescription>ValidRequest?</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($MapInputToXMLValidator/root/ns:CreditCardReturnRequest)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ReturnCommon</pd:from>
        <pd:to>MapDTCMOControllerOutput</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>ResponseToAdapterInvalidRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>GetAppAuditSwitchesVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAppAuditSwitchesVariable</pd:from>
        <pd:to>Null-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAppAuditSwitchesVariable</pd:from>
        <pd:to>LogPaymentServiceRequest</pd:to>
        <pd:xpathDescription>LogDTCRequest</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$GetAppAuditSwitchesVariable/pfx2:PaymentServiceAuditSwitches/pfx2:PaymentServiceAuditSwitch[*[local-name()= $_globalVariables/ns2:GlobalVariables/Constants/COL_INTERFACECODE]=$GetCLEParams/root/InterfaceCode][*[local-name()=$_globalVariables/ns2:GlobalVariables/Constants/COL_AUDITMESSAGETYPE]= $_globalVariables/ns2:GlobalVariables/Constants/VALUE_DTCREQUEST]/pfx2:AuditMessageFlag=$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/AuditSwitch</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>MapInputToXMLValidator</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>LogPaymentServiceResponse</pd:to>
        <pd:xpathDescription>LogDTCResponse</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$GetAppAuditSwitchesVariable/pfx2:PaymentServiceAuditSwitches/pfx2:PaymentServiceAuditSwitch[*[local-name()= $_globalVariables/ns2:GlobalVariables/Constants/COL_INTERFACECODE]=$GetCLEParams/root/InterfaceCode][*[local-name()=$_globalVariables/ns2:GlobalVariables/Constants/COL_AUDITMESSAGETYPE]= $_globalVariables/ns2:GlobalVariables/Constants/VALUE_DTCRESPONSE]/pfx2:AuditMessageFlag=$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/AuditSwitch</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ResponseToAdapterInvalidRequest</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ResponseToAdapterCreditReturn</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapDTCMOControllerOutput</pd:from>
        <pd:to>ResponseToAdapterCreditReturn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>SetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>MapInputToXMLValidator</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>ResponseToAdapterInvalidRequest-2</pd:to>
        <pd:xpathDescription>EOF</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/EoFIndicator !="true")  and ($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/EoFIndicator !=" ")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ResponseToAdapterInvalidRequest-2</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogPaymentServiceRequest</pd:from>
        <pd:to>Null-2</pd:to>
        <pd:xpathDescription>EOF</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/EoFIndicator !="true")  and ($CreditReturnReceiver/ns8:ActivityOutput/Body/pfx4:ReturnPublisher/Entry/EoFIndicator !=" ")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>LogPaymentServiceResponse</pd:from>
        <pd:to>PublishToAdapter</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>PublishToAdapter</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>AssignTransactionID</pd:to>
        <pd:xpathDescription>NoTransactionId</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($GetCLEParams/root/TransactionId)=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>ResponseToAdapterInvalidRequest-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ResponseToAdapterInvalidRequest-1</pd:from>
        <pd:to>SendExceptionRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignTransactionID</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendExceptionRequest</pd:from>
        <pd:to>LogPaymentServiceErrorResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogPaymentServiceErrorResponse</pd:from>
        <pd:to>PublishToAdapterOnError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CreditReturnReceiver</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PublishToAdapter</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PublishToAdapterOnError</pd:from>
        <pd:to>Confirm-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>