<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://www.tibco.com/schemas/REST-POC/Schemas/Schema.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/TEST.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx3="http://services.wsgc.com/2014/Payment" xmlns:pfx4="http://www.wsgc.com/schemas/common/PaymentServiceAuditSwitches.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions">
    <xsd:import namespace="http://www.tibco.com/schemas/REST-POC/Schemas/Schema.xsd" schemaLocation="/Schemas/Schema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/TEST.xsd" schemaLocation="/JSON_GEN_Schemas/TEST.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/credit-return.xsd"/>
    <pd:name>BusinessProcesses/CreditReturn/Return.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx3:CreditCardReturnRequest"/>
    <pd:startX>147</pd:startX>
    <pd:startY>636</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="string-length($MapPaymentGatewayRequest/root/pfx3:CreditCardReturnResponse/Error/Type)>0">
                <xsl:copy-of select="$MapPaymentGatewayRequest/root/pfx3:CreditCardReturnResponse"/>
            </xsl:when>
            <xsl:when test="string-length($MapData/pfx3:CreditCardReturnResponse/Error/Type)>0">
                <xsl:for-each select="$MapData/pfx3:CreditCardReturnResponse">
                    <pfx3:CreditCardReturnResponse>
                        <xsl:attribute name="version">
                            <xsl:value-of select="@version"/>
                        </xsl:attribute>
                        <xsl:for-each select="SystemContext">
                            <SystemContext>
                                <EnvironmentIdentifier>
                                    <xsl:value-of select="EnvironmentIdentifier"/>
                                </EnvironmentIdentifier>
                                <RegionIdentifier>
                                    <xsl:value-of select="RegionIdentifier"/>
                                </RegionIdentifier>
                                <SourceSystemIdentifier>
                                    <xsl:value-of select="SourceSystemIdentifier"/>
                                </SourceSystemIdentifier>
                                <TransactionId>
                                    <xsl:value-of select="TransactionId"/>
                                </TransactionId>
                                <TransactionTime>
                                    <xsl:value-of select="TransactionTime"/>
                                </TransactionTime>
                                <xsl:if test="RoutingSpecification">
                                    <RoutingSpecification>
                                        <xsl:value-of select="RoutingSpecification"/>
                                    </RoutingSpecification>
                                </xsl:if>
                                <xsl:if test="TestingMode">
                                    <TestingMode>
                                        <xsl:value-of select="TestingMode"/>
                                    </TestingMode>
                                </xsl:if>
                            </SystemContext>
                        </xsl:for-each>
                        <xsl:for-each select="PaymentContext">
                            <PaymentContext>
                                <Concept>
                                    <xsl:value-of select="Concept"/>
                                </Concept>
                                <Channel>
                                    <xsl:value-of select="Channel"/>
                                </Channel>
                            </PaymentContext>
                        </xsl:for-each>
                        <xsl:for-each select="Error">
                            <Error>
                                <Type>
                                    <xsl:value-of select="Type"/>
                                </Type>
                                <xsl:if test="string-length(Detail[1])>0">
                                    <xsl:for-each select="Detail">
                                        <Detail>
                                            <xsl:value-of select="."/>
                                        </Detail>
                                    </xsl:for-each>
                                </xsl:if>
                                <ErrorMessage>
                                    <xsl:value-of select="ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:for-each>
                    </pfx3:CreditCardReturnResponse>
                </xsl:for-each>
            </xsl:when>
            <xsl:when test="string-length($MapPaymentServiceResponse/pfx3:CreditCardReturnResponse/@version)=0 and string-length($InvokePaymentGateway/root/Error/Type)>0">
                <pfx3:CreditCardReturnResponse>
                    <xsl:attribute name="version">
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Return/MessageVersion"/>
                    </xsl:attribute>
                    <SystemContext>
                        <EnvironmentIdentifier>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                        </EnvironmentIdentifier>
                        <RegionIdentifier>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                        </RegionIdentifier>
                        <SourceSystemIdentifier>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix"/>
                        </SourceSystemIdentifier>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/pfx3:CreditCardReturnRequest/SystemContext/TransactionId)>0">
                                <TransactionId>
                                    <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/Return/Constants/TransactionIdPrefix,&quot;-&quot;,$Start/pfx3:CreditCardReturnRequest/SystemContext/TransactionId)"/>
                                </TransactionId>
                            </xsl:when>
                            <xsl:otherwise>
                                <TransactionId>
                                    <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/Return/Constants/TransactionIdPrefix,&quot;-&quot;,tib:format-dateTime($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns3:ProcessContext/ProcessId,  $_globalVariables/ns1:GlobalVariables/ENV,BW:getHostName())"/>
                                </TransactionId>
                            </xsl:otherwise>
                        </xsl:choose>
                        <TransactionTime>
                            <xsl:value-of select="current-dateTime()"/>
                        </TransactionTime>
                    </SystemContext>
                    <PaymentContext>
                        <Concept>
                            <xsl:value-of select="''"/>
                        </Concept>
                        <Channel>
                            <xsl:value-of select="''"/>
                        </Channel>
                    </PaymentContext>
                    <Error>
                        <Type>
                            <xsl:value-of select="$InvokePaymentGateway/root/Error/Type"/>
                        </Type>
                        <xsl:if test="string-length($InvokePaymentGateway/root/Error/Detail[1])>0">
                            <xsl:for-each select="$InvokePaymentGateway/root/Error/Detail">
                                <Detail>
                                    <xsl:value-of select="."/>
                                </Detail>
                            </xsl:for-each>
                        </xsl:if>
                        <ErrorMessage>
                            <xsl:value-of select="$InvokePaymentGateway/root/Error/ErrorMessage"/>
                        </ErrorMessage>
                    </Error>
                </pfx3:CreditCardReturnResponse>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy-of select="$MapPaymentServiceResponse/pfx3:CreditCardReturnResponse"/>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx3:CreditCardReturnResponse"/>
    <pd:endX>674</pd:endX>
    <pd:endY>376</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1406742610426</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>338</pd:x>
        <pd:y>555</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="InvokePaymentGateway">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>501</pd:x>
        <pd:y>262</pd:y>
        <config>
            <processName>/CommonProcesses/PaymentGateway/InvokeVerifonePaymentGateway.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <paymentgatewayrequest>
                    <xsl:value-of select="$MapPaymentGatewayRequest/root/paymentgatewayrequest"/>
                </paymentgatewayrequest>
                <transactionid>
                    <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                </transactionid>
                <InterfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </InterfaceCode>
                <timeout>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Return/PaymentGateway/Timeout"/>
                </timeout>
                <Transactiontype>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Return/CLE/TransactionType"/>
                </Transactiontype>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogPaymentGatewayRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>158</pd:x>
        <pd:y>102</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendLogRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns2:LogRequest>
                <ns2:envCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                </ns2:envCode>
                <ns2:appCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/AppCode"/>
                </ns2:appCode>
                <ns2:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns2:interfaceCode>
                <ns2:timestamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns2:timestamp>
                <ns2:message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/PaymentGatewayRequestAuditMessage"/>
                </ns2:message>
                <ns2:TransactionDetails>
                    <ns2:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns2:transactionDomain>
                    <ns2:transactionType>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Return/CLE/TransactionType"/>
                    </ns2:transactionType>
                    <ns2:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns2:transactionID>
                </ns2:TransactionDetails>
                <ns2:AuditInfo>
                    <xsl:choose>
                        <xsl:when test="exists($MapPaymentGatewayRequest/root/paymentgatewayrequest)">
                            <ns2:payload>
                                <xsl:value-of select="$MapPaymentGatewayRequest/root/paymentgatewayrequest"/>
                            </ns2:payload>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns2:payload>
                                <xsl:value-of select="tib:render-xml($MapPaymentGatewayRequest/root/pfx3:CreditCardReturnResponse)"/>
                            </ns2:payload>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns2:auditStep>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/Constants/AuditReport"/>
                    </ns2:auditStep>
                </ns2:AuditInfo>
            </ns2:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogPaymentGatewayResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1011</pd:x>
        <pd:y>114</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendLogRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns2:LogRequest>
                <ns2:envCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                </ns2:envCode>
                <ns2:appCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/AppCode"/>
                </ns2:appCode>
                <ns2:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns2:interfaceCode>
                <ns2:timestamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns2:timestamp>
                <ns2:message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/PaymentGatewayResponseAuditMessage"/>
                </ns2:message>
                <ns2:TransactionDetails>
                    <ns2:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns2:transactionDomain>
                    <ns2:transactionType>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Return/CLE/TransactionType"/>
                    </ns2:transactionType>
                    <ns2:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns2:transactionID>
                </ns2:TransactionDetails>
                <ns2:AuditInfo>
                    <ns2:payload>
                        <xsl:value-of select="$InvokePaymentGateway/root/PaymentGatewayResponse"/>
                    </ns2:payload>
                    <ns2:auditStep>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/Constants/AuditReport"/>
                    </ns2:auditStep>
                </ns2:AuditInfo>
            </ns2:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapData">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>508</pd:x>
        <pd:y>555</pd:y>
        <config>
            <element ref="pfx3:CreditCardReturnResponse"/>
        </config>
        <pd:inputBindings>
            <pfx3:CreditCardReturnResponse>
                <xsl:attribute name="version">
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Return/MessageVersion"/>
                </xsl:attribute>
                <SystemContext>
                    <EnvironmentIdentifier>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                    </EnvironmentIdentifier>
                    <RegionIdentifier>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                    </RegionIdentifier>
                    <SourceSystemIdentifier>
                        <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                    </SourceSystemIdentifier>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/pfx3:CreditCardReturnRequest/SystemContext/TransactionId)>0">
                            <TransactionId>
                                <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/Return/Constants/TransactionIdPrefix,&quot;-&quot;,$Start/pfx3:CreditCardReturnRequest/SystemContext/TransactionId)"/>
                            </TransactionId>
                        </xsl:when>
                        <xsl:otherwise>
                            <TransactionId>
                                <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/Return/Constants/TransactionIdPrefix,&quot;-&quot;,tib:format-dateTime($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns3:ProcessContext/ProcessId,  $_globalVariables/ns1:GlobalVariables/ENV,BW:getHostName())"/>
                            </TransactionId>
                        </xsl:otherwise>
                    </xsl:choose>
                    <TransactionTime>
                        <xsl:value-of select="current-dateTime()"/>
                    </TransactionTime>
                </SystemContext>
                <xsl:choose>
                    <xsl:when test="string-length($Start/pfx3:CreditCardReturnRequest/PaymentContext/Concept) > 0">
                        <xsl:copy-of select="$Start/pfx3:CreditCardReturnRequest/PaymentContext"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <PaymentContext>
                            <Concept>
                                <xsl:value-of select="&quot;&quot;"/>
                            </Concept>
                            <Channel>
                                <xsl:value-of select="&quot;&quot;"/>
                            </Channel>
                        </PaymentContext>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="$_error/ns3:ErrorReport/Msg">
                    <xsl:choose>
                        <xsl:when test="$_error/ns3:ErrorReport/Class=$_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                            <Error>
                                <Type>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                                </Type>
                                <Detail>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                                </Detail>
                                <ErrorMessage>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:when>
                        <xsl:otherwise>
                            <Error>
                                <Type>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                                </Type>
                                <Detail>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                                </Detail>
                                <ErrorMessage>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:for-each>
            </pfx3:CreditCardReturnResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapPaymentGatewayRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>154</pd:x>
        <pd:y>349</pd:y>
        <config>
            <processName>/BusinessProcesses/CreditReturn/RequestProcessors/MapPaymentGatewayRequest.process</processName>
        </config>
        <pd:inputBindings>
            <xsl:copy-of select="$Start/pfx3:CreditCardReturnRequest"/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapPaymentServiceResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1025</pd:x>
        <pd:y>375</pd:y>
        <config>
            <processName>/BusinessProcesses/CreditReturn/ResponseProcessors/MapPaymentServiceResponse.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <IsPLCCTender>
                    <xsl:value-of select="$MapPaymentGatewayRequest/root/IsPLCCTender"/>
                </IsPLCCTender>
                <paymentgatewayresponse>
                    <xsl:value-of select="$InvokePaymentGateway/root/PaymentGatewayResponse"/>
                </paymentgatewayresponse>
                <xsl:copy-of select="$Start/pfx3:CreditCardReturnRequest"/>
                <xsl:if test="$MapPaymentGatewayRequest/root/PAN">
                    <PAN>
                        <xsl:value-of select="$MapPaymentGatewayRequest/root/PAN"/>
                    </PAN>
                </xsl:if>
                <xsl:if test="$MapPaymentGatewayRequest/root/TenderSubType">
                    <TenderSubType>
                        <xsl:value-of select="$MapPaymentGatewayRequest/root/TenderSubType"/>
                    </TenderSubType>
                </xsl:if>
                <xsl:copy-of select="$InvokePaymentGateway/root/Error"/>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>674</pd:x>
        <pd:y>554</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns2:ExceptionHandlerRequest>
                <ns2:envCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                </ns2:envCode>
                <ns2:appCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/AppCode"/>
                </ns2:appCode>
                <ns2:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns2:interfaceCode>
                <ns2:hostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </ns2:hostName>
                <ns2:timeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns2:timeStamp>
                <ns2:message>
                    <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                </ns2:message>
                <xsl:choose>
                    <xsl:when test="string-length($Start/pfx3:CreditCardReturnRequest) > 0">
                        <ns2:payload>
                            <xsl:value-of select="tib:render-xml($Start/pfx3:CreditCardReturnRequest)"/>
                        </ns2:payload>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns2:payload>
                            <xsl:value-of select="&quot;&quot;"/>
                        </ns2:payload>
                    </xsl:otherwise>
                </xsl:choose>
                <ns2:ErrorLevel>
                    <ns2:errorCode>
                        <xsl:value-of select="concat($MapData/pfx3:CreditCardReturnResponse/Error/Type, $_globalVariables/ns1:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$MapData/pfx3:CreditCardReturnResponse/Error/Detail[1])"/>
                    </ns2:errorCode>
                </ns2:ErrorLevel>
                <ns2:TransactionDetails>
                    <ns2:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns2:transactionDomain>
                    <ns2:transactionType>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Return/CLE/TransactionType"/>
                    </ns2:transactionType>
                    <xsl:choose>
                        <xsl:when test="string-length($GetCLEParams/root/TransactionId) > 0">
                            <ns2:transactionID>
                                <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                            </ns2:transactionID>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns2:transactionID>
                                <xsl:value-of select="concat(tib:format-dateTime($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns3:ProcessContext/ProcessId,  $_globalVariables/ns1:GlobalVariables/ENV   , BW:getHostName())"/>
                            </ns2:transactionID>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns2:TransactionDetails>
                <xsl:for-each select="$_error/ns3:ErrorReport">
                    <ns2:ErrorReportType>
                        <ns2:stackTrace>
                            <xsl:value-of select="StackTrace"/>
                        </ns2:stackTrace>
                        <ns2:msg>
                            <xsl:value-of select="Msg"/>
                        </ns2:msg>
                        <ns2:fullClass>
                            <xsl:value-of select="FullClass"/>
                        </ns2:fullClass>
                        <ns2:class>
                            <xsl:value-of select="Class"/>
                        </ns2:class>
                        <ns2:processStack>
                            <xsl:value-of select="ProcessStack"/>
                        </ns2:processStack>
                        <xsl:if test="MsgCode">
                            <ns2:msgCode>
                                <xsl:value-of select="MsgCode"/>
                            </ns2:msgCode>
                        </xsl:if>
                        <ns2:data>
                            <xsl:value-of select="Data/*"/>
                        </ns2:data>
                    </ns2:ErrorReportType>
                </xsl:for-each>
            </ns2:ExceptionHandlerRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>365</pd:x>
        <pd:y>107</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>157</pd:x>
        <pd:y>244</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceAppAuditSwitches.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>671</pd:x>
        <pd:y>112</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null-2">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>1012</pd:x>
        <pd:y>236</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetCLEParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>148</pd:x>
        <pd:y>524</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/CreditReturn/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="SetTransactionDetails">
        <pd:type>com.tibco.pe.core.SetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.setSharedVariable</pd:resourceType>
        <pd:x>289</pd:x>
        <pd:y>440</pd:y>
        <config>
            <variableConfig>/CommonProcesses/InterfaceDetails.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </InterfaceCode>
                <TransactionId>
                    <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                </TransactionId>
                <TransactionType>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Return/CLE/TransactionType"/>
                </TransactionType>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>InvokePaymentGateway</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogPaymentGatewayRequest</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogPaymentGatewayResponse</pd:from>
        <pd:to>Null-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapPaymentServiceResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>MapData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendExceptionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapData</pd:from>
        <pd:to>SendExceptionRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapPaymentGatewayRequest</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>InvokePaymentGateway</pd:to>
        <pd:xpathDescription>Good PG Request?</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($MapPaymentGatewayRequest/root/paymentgatewayrequest)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>LogPaymentGatewayRequest</pd:to>
        <pd:xpathDescription>Log PaymentGateway Request?</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>($GetVariable/pfx4:PaymentServiceAuditSwitches/pfx4:PaymentServiceAuditSwitch[*[local-name()= $_globalVariables/ns1:GlobalVariables/Constants/COL_INTERFACECODE]=$GetCLEParams/root/InterfaceCode][*[local-name()=$_globalVariables/ns1:GlobalVariables/Constants/COL_AUDITMESSAGETYPE]= $_globalVariables/ns1:GlobalVariables/Constants/VALUE_PAYMENTGATEWAYREQUEST]/pfx4:AuditMessageFlag=$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/AuditSwitch) and
(string-length($MapPaymentGatewayRequest/root/paymentgatewayrequest)&gt;0)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>LogPaymentGatewayResponse</pd:to>
        <pd:xpathDescription>Log PaymentGateway Response?</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>($GetVariable/pfx4:PaymentServiceAuditSwitches/pfx4:PaymentServiceAuditSwitch[*[local-name()= $_globalVariables/ns1:GlobalVariables/Constants/COL_INTERFACECODE]=$GetCLEParams/root/InterfaceCode][*[local-name()=$_globalVariables/ns1:GlobalVariables/Constants/COL_AUDITMESSAGETYPE]= $_globalVariables/ns1:GlobalVariables/Constants/VALUE_PAYMENTGATEWAYRESPONSE]/pfx4:AuditMessageFlag=$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/AuditSwitch) and
(string-length($InvokePaymentGateway/root/PaymentGatewayResponse)&gt;0)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>MapPaymentServiceResponse</pd:to>
        <pd:xpathDescription>Good PG Response?</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($InvokePaymentGateway/root/PaymentGatewayResponse)&gt;0
 or
(  string-length( $InvokePaymentGateway/root/Error/Type)&gt; 0 and string-length($MapPaymentGatewayRequest/root/PAN)&gt;0)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>Null-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>SetTransactionDetails</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetTransactionDetails</pd:from>
        <pd:to>MapPaymentGatewayRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>