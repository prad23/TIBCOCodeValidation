<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx3="http://ecommerce.wsgc.com/2013/Common" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://services.wsgc.com/2014/Payment" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns12="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns3="http://www.wsgc.com/schemas/common/PaymentGatewayCredentials.xsd">
    <xsd:import namespace="http://ecommerce.wsgc.com/2013/Common" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2013/Common/base-types.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2014/Payment/credit-capture.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/PaymentServices/2014/Payment/credit-post-authorization.xsd"/>
    <pd:name>BusinessProcesses/CreditPostAuthorization/RequestProcessors/MapPaymentGatewayRequest.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:CreditCardPostAuthorizationRequest"/>
    <pd:startX>27</pd:startX>
    <pd:startY>312</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:choose>
                <xsl:when test="string-length($Process/root/Error/Type) > 0">
                    <pfx:CreditCardPostAuthorizationResponse>
                        <xsl:attribute name="version">
                            <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/@version"/>
                        </xsl:attribute>
                        <SystemContext>
                            <EnvironmentIdentifier>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                            </EnvironmentIdentifier>
                            <RegionIdentifier>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                            </RegionIdentifier>
                            <SourceSystemIdentifier>
                                <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix,BW:getHostName())"/>
                            </SourceSystemIdentifier>
                            <xsl:choose>
                                <xsl:when test="string-length($Start/pfx:CreditCardPostAuthorizationRequest/SystemContext/TransactionId)>0">
                                    <TransactionId>
                                        <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/Capture/Constants/TransactionIdPrefix,$Start/pfx:CreditCardPostAuthorizationRequest/SystemContext/TransactionId)"/>
                                    </TransactionId>
                                </xsl:when>
                                <xsl:otherwise>
                                    <TransactionId>
                                        <xsl:value-of select="concat($_globalVariables/ns2:GlobalVariables/Capture/Constants/TransactionIdPrefix, tib:format-dateTime($_globalVariables/ns2:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns1:ProcessContext/ProcessId,  $_globalVariables/ns2:GlobalVariables/ENV   , BW:getHostName())"/>
                                    </TransactionId>
                                </xsl:otherwise>
                            </xsl:choose>
                            <TransactionTime>
                                <xsl:value-of select="current-dateTime()"/>
                            </TransactionTime>
                        </SystemContext>
                        <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/PaymentContext"/>
                        <xsl:for-each select="$Process/root/Error">
                            <Error>
                                <Type>
                                    <xsl:value-of select="Type"/>
                                </Type>
                                <xsl:for-each select="Detail">
                                    <Detail>
                                        <xsl:value-of select="."/>
                                    </Detail>
                                </xsl:for-each>
                                <ErrorMessage>
                                    <xsl:value-of select="ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:for-each>
                    </pfx:CreditCardPostAuthorizationResponse>
                </xsl:when>
                <xsl:when test="string-length($MapVerifoneRequest/root/pfx:CreditCardPostAuthorizationResponse/@version) > 0">
                    <pfx:CreditCardPostAuthorizationResponse>
                        <xsl:attribute name="version">
                            <xsl:value-of select="$MapVerifoneRequest/root/pfx:CreditCardPostAuthorizationResponse/@version"/>
                        </xsl:attribute>
                        <xsl:copy-of select="$MapVerifoneRequest/root/pfx:CreditCardPostAuthorizationResponse/SystemContext"/>
                        <xsl:copy-of select="$MapVerifoneRequest/root/pfx:CreditCardPostAuthorizationResponse/PaymentContext"/>
                        <xsl:for-each select="$MapVerifoneRequest/root/pfx:CreditCardPostAuthorizationResponse/Error">
                            <Error>
                                <Type>
                                    <xsl:value-of select="Type"/>
                                </Type>
                                <xsl:for-each select="Detail">
                                    <Detail>
                                        <xsl:value-of select="."/>
                                    </Detail>
                                </xsl:for-each>
                                <ErrorMessage>
                                    <xsl:value-of select="ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:for-each>
                    </pfx:CreditCardPostAuthorizationResponse>
                </xsl:when>
                <xsl:when test="string-length($MapPLCCRequest/root/pfx:CreditCardPostAuthorizationResponse/@version) > 0">
                    <pfx:CreditCardPostAuthorizationResponse>
                        <xsl:attribute name="version">
                            <xsl:value-of select="$MapPLCCRequest/root/pfx:CreditCardPostAuthorizationResponse/@version"/>
                        </xsl:attribute>
                        <xsl:copy-of select="$MapPLCCRequest/root/pfx:CreditCardPostAuthorizationResponse/SystemContext"/>
                        <xsl:copy-of select="$MapPLCCRequest/root/pfx:CreditCardPostAuthorizationResponse/PaymentContext"/>
                        <xsl:for-each select="$MapVerifoneRequest/root/pfx:CreditCardPostAuthorizationResponse/Error">
                            <Error>
                                <Type>
                                    <xsl:value-of select="Type"/>
                                </Type>
                                <xsl:for-each select="Detail">
                                    <Detail>
                                        <xsl:value-of select="."/>
                                    </Detail>
                                </xsl:for-each>
                                <ErrorMessage>
                                    <xsl:value-of select="ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:for-each>
                    </pfx:CreditCardPostAuthorizationResponse>
                </xsl:when>
                <xsl:otherwise/>
            </xsl:choose>
            <xsl:choose>
                <xsl:when test="$IsPLCCTender/root/IsPLCCTender=$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/BooleanSuccess">
                    <paymentgatewayrequest>
                        <xsl:value-of select="$MapPLCCRequest/root/paymentgatewayrequest"/>
                    </paymentgatewayrequest>
                </xsl:when>
                <xsl:otherwise>
                    <paymentgatewayrequest>
                        <xsl:value-of select="$MapVerifoneRequest/root/paymentgatewayrequest"/>
                    </paymentgatewayrequest>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="string-length($IsPLCCTender/root/IsPLCCTender)>0">
                <IsPLCCTender>
                    <xsl:value-of select="$IsPLCCTender/root/IsPLCCTender"/>
                </IsPLCCTender>
            </xsl:if>
            <xsl:if test="string-length($PAN/root/PlainTextPan)>0">
                <xsl:if test="$PAN/root/PlainTextPan">
                    <PAN>
                        <xsl:value-of select="$PAN/root/PlainTextPan"/>
                    </PAN>
                </xsl:if>
            </xsl:if>
            <xsl:if test="$TenderSubType/root/TenderSubType">
                <TenderSubType>
                    <xsl:value-of select="$TenderSubType/root/TenderSubType"/>
                </TenderSubType>
            </xsl:if>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:CreditCardPostAuthorizationResponse" minOccurs="0"/>
                    <xsd:element name="paymentgatewayrequest" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="IsPLCCTender" type="xsd:boolean" minOccurs="0"/>
                    <xsd:element name="PAN" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="TenderSubType" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>963</pd:endX>
    <pd:endY>319</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <PAN>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="PlainTextPan" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </PAN>
        <Process>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="Error" type="pfx3:ErrorType"/>
                        <xsd:element name="NotificationErrorCode" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </Process>
        <TenderSubType>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="TenderSubType" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </TenderSubType>
        <IsPLCCTender>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="IsPLCCTender" type="xsd:boolean"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </IsPLCCTender>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1414172991752</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>283</pd:x>
        <pd:y>770</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogRequestValidationExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>961</pd:x>
        <pd:y>765</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns:ExceptionHandlerRequest>
                <ns:envCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ENV"/>
                </ns:envCode>
                <ns:appCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CLE/AppCode"/>
                </ns:appCode>
                <ns:interfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </ns:interfaceCode>
                <ns:hostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </ns:hostName>
                <ns:timeStamp>
                    <xsl:value-of select="current-dateTime()"/>
                </ns:timeStamp>
                <ns:message>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </ns:message>
                <ns:payload>
                    <xsl:value-of select="tib:render-xml($Start/pfx:CreditCardPostAuthorizationRequest)"/>
                </ns:payload>
                <ns:ErrorLevel>
                    <ns:errorCode>
                        <xsl:value-of select="concat($Process/root/Error/Type, $_globalVariables/ns2:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$Process/root/Error/Detail[1])"/>
                    </ns:errorCode>
                </ns:ErrorLevel>
                <ns:TransactionDetails>
                    <ns:transactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                    </ns:transactionDomain>
                    <ns:transactionType>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PostAuthorization/CLE/TransactionType"/>
                    </ns:transactionType>
                    <ns:transactionID>
                        <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                    </ns:transactionID>
                </ns:TransactionDetails>
                <xsl:for-each select="$_error/ns1:ErrorReport">
                    <ns:ErrorReportType>
                        <ns:stackTrace>
                            <xsl:value-of select="StackTrace"/>
                        </ns:stackTrace>
                        <ns:msg>
                            <xsl:value-of select="Msg"/>
                        </ns:msg>
                        <ns:fullClass>
                            <xsl:value-of select="FullClass"/>
                        </ns:fullClass>
                        <ns:class>
                            <xsl:value-of select="Class"/>
                        </ns:class>
                        <ns:processStack>
                            <xsl:value-of select="ProcessStack"/>
                        </ns:processStack>
                        <xsl:if test="MsgCode">
                            <ns:msgCode>
                                <xsl:value-of select="MsgCode"/>
                            </ns:msgCode>
                        </xsl:if>
                        <ns:data>
                            <xsl:value-of select="Data/*"/>
                        </ns:data>
                    </ns:ErrorReportType>
                </xsl:for-each>
            </ns:ExceptionHandlerRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignFailure">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>531</pd:x>
        <pd:y>770</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="$_error/ns1:ErrorReport/Class=$_globalVariables/ns2:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:when>
                    <xsl:when test="string-length($GetPanfromLocalToken/root/Error/Type)>0">
                        <xsl:for-each select="$GetPanfromLocalToken/root/Error">
                            <Error>
                                <Type>
                                    <xsl:value-of select="Type"/>
                                </Type>
                                <xsl:for-each select="Detail">
                                    <Detail>
                                        <xsl:value-of select="."/>
                                    </Detail>
                                </xsl:for-each>
                                <ErrorMessage>
                                    <xsl:value-of select="ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetCLEParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>138</pd:x>
        <pd:y>315</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/CreditPostAuthorization/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="AssignIsPLCC">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>551</pd:x>
        <pd:y>315</pd:y>
        <config>
            <variableName>IsPLCCTender</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <IsPLCCTender>
                    <xsl:value-of select="if(contains($TenderSubType/root/TenderSubType,$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/PrivateLabelCreditCard))&#xA;then&#xA; $_globalVariables/ns2:GlobalVariables/PaymentService/Constants/BooleanSuccess&#xA;else&#xA;$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/BooleanFailure"/>
                </IsPLCCTender>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapVerifoneRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>777</pd:x>
        <pd:y>208</pd:y>
        <config>
            <processName>/BusinessProcesses/CreditPostAuthorization/RequestProcessors/MapPaymentGatewayRequest-CC.process</processName>
        </config>
        <pd:inputBindings>
            <pfx:CreditCardPostAuthorizationRequest>
                <xsl:attribute name="version">
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/@version"/>
                </xsl:attribute>
                <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/SystemContext"/>
                <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/PaymentContext"/>
                <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/OrderContext"/>
                <ConsumerTransactionId>
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/ConsumerTransactionId"/>
                </ConsumerTransactionId>
                <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/OriginalRequest"/>
                <Tender>
                    <Type>
                        <Code>
                            <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Type/Code"/>
                        </Code>
                        <xsl:if test="$TenderSubType/root/TenderSubType">
                            <SubCode>
                                <xsl:value-of select="$TenderSubType/root/TenderSubType"/>
                            </SubCode>
                        </xsl:if>
                        <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Type/Tag"/>
                    </Type>
                    <xsl:choose>
                        <xsl:when test="string-length($PAN/root/PlainTextPan)>0">
                            <AccountNumber>
                                <xsl:value-of select="$PAN/root/PlainTextPan"/>
                            </AccountNumber>
                        </xsl:when>
                        <xsl:otherwise>
                            <Token>
                                <xsl:attribute name="scheme">
                                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@scheme"/>
                                </xsl:attribute>
                                <xsl:if test="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@scope">
                                    <xsl:attribute name="scope">
                                        <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@scope"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@isTemporary">
                                    <xsl:attribute name="isTemporary">
                                        <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@isTemporary"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:attribute name="expiration">
                                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@expiration"/>
                                </xsl:attribute>
                                <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token"/>
                            </Token>
                        </xsl:otherwise>
                    </xsl:choose>
                </Tender>
                <CardMetadata>
                    <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/CardMetadata/CardHolderName"/>
                    <CardExpiration>
                        <xsl:choose>
                            <xsl:when test="string-length($GetPanfromLocalToken/root/CardDetails/ExpiryYear)>0">
                                <Year>
                                    <xsl:value-of select="$GetPanfromLocalToken/root/CardDetails/ExpiryYear"/>
                                </Year>
                            </xsl:when>
                            <xsl:otherwise>
                                <Year>
                                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/CardMetadata/CardExpiration/Year"/>
                                </Year>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="string-length($GetPanfromLocalToken/root/CardDetails/ExpiryMonth)>0">
                                <Month>
                                    <xsl:value-of select="$GetPanfromLocalToken/root/CardDetails/ExpiryMonth"/>
                                </Month>
                            </xsl:when>
                            <xsl:otherwise>
                                <Month>
                                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/CardMetadata/CardExpiration/Month"/>
                                </Month>
                            </xsl:otherwise>
                        </xsl:choose>
                    </CardExpiration>
                    <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/CardMetadata/RawMagneticTrackData"/>
                </CardMetadata>
                <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Authorization"/>
                <CurrencyCode>
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/CurrencyCode"/>
                </CurrencyCode>
                <CaptureAmount>
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/CaptureAmount"/>
                </CaptureAmount>
                <xsl:if test="$Start/pfx:CreditCardPostAuthorizationRequest/IncludedTaxAmount">
                    <IncludedTaxAmount>
                        <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/IncludedTaxAmount"/>
                    </IncludedTaxAmount>
                </xsl:if>
                <xsl:if test="$Start/pfx:CreditCardPostAuthorizationRequest/PaymentPlanCode">
                    <PaymentPlanCode>
                        <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/PaymentPlanCode"/>
                    </PaymentPlanCode>
                </xsl:if>
                <xsl:if test="$Start/pfx:CreditCardPostAuthorizationRequest/ChargeDescription">
                    <ChargeDescription>
                        <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/ChargeDescription"/>
                    </ChargeDescription>
                </xsl:if>
            </pfx:CreditCardPostAuthorizationRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapPLCCRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>774</pd:x>
        <pd:y>435</pd:y>
        <config>
            <processName>/BusinessProcesses/CreditPostAuthorization/RequestProcessors/MapPaymentGatewayRequest-PLCC.process</processName>
        </config>
        <pd:inputBindings>
            <pfx:CreditCardPostAuthorizationRequest>
                <xsl:attribute name="version">
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/@version"/>
                </xsl:attribute>
                <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/SystemContext"/>
                <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/PaymentContext"/>
                <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/OrderContext"/>
                <ConsumerTransactionId>
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/ConsumerTransactionId"/>
                </ConsumerTransactionId>
                <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/OriginalRequest"/>
                <Tender>
                    <Type>
                        <Code>
                            <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Type/Code"/>
                        </Code>
                        <xsl:if test="$TenderSubType/root/TenderSubType">
                            <SubCode>
                                <xsl:value-of select="$TenderSubType/root/TenderSubType"/>
                            </SubCode>
                        </xsl:if>
                        <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Type/Tag"/>
                    </Type>
                    <xsl:choose>
                        <xsl:when test="string-length($PAN/root/PlainTextPan)>0">
                            <AccountNumber>
                                <xsl:value-of select="$PAN/root/PlainTextPan"/>
                            </AccountNumber>
                        </xsl:when>
                        <xsl:otherwise>
                            <Token>
                                <xsl:attribute name="scheme">
                                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@scheme"/>
                                </xsl:attribute>
                                <xsl:if test="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@scope">
                                    <xsl:attribute name="scope">
                                        <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@scope"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@isTemporary">
                                    <xsl:attribute name="isTemporary">
                                        <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@isTemporary"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:attribute name="expiration">
                                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@expiration"/>
                                </xsl:attribute>
                                <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token"/>
                            </Token>
                        </xsl:otherwise>
                    </xsl:choose>
                </Tender>
                <CardMetadata>
                    <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/CardMetadata/CardHolderName"/>
                    <xsl:if test="string-length($GetPanfromLocalToken/root/CardDetails/ExpiryYear)>0&#xA;or&#xA;string-length($Start/pfx:CreditCardPostAuthorizationRequest/CardMetadata/CardExpiration) >0">
                        <CardExpiration>
                            <xsl:choose>
                                <xsl:when test="string-length($GetPanfromLocalToken/root/CardDetails/ExpiryYear)>0">
                                    <Year>
                                        <xsl:value-of select="$GetPanfromLocalToken/root/CardDetails/ExpiryYear"/>
                                    </Year>
                                </xsl:when>
                                <xsl:otherwise>
                                    <Year>
                                        <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/CardMetadata/CardExpiration/Year"/>
                                    </Year>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                                <xsl:when test="string-length($GetPanfromLocalToken/root/CardDetails/ExpiryMonth)>0">
                                    <Month>
                                        <xsl:value-of select="$GetPanfromLocalToken/root/CardDetails/ExpiryMonth"/>
                                    </Month>
                                </xsl:when>
                                <xsl:otherwise>
                                    <Month>
                                        <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/CardMetadata/CardExpiration/Month"/>
                                    </Month>
                                </xsl:otherwise>
                            </xsl:choose>
                        </CardExpiration>
                    </xsl:if>
                    <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/CardMetadata/RawMagneticTrackData"/>
                </CardMetadata>
                <xsl:copy-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Authorization"/>
                <CurrencyCode>
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/CurrencyCode"/>
                </CurrencyCode>
                <CaptureAmount>
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/CaptureAmount"/>
                </CaptureAmount>
                <xsl:if test="$Start/pfx:CreditCardPostAuthorizationRequest/IncludedTaxAmount">
                    <IncludedTaxAmount>
                        <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/IncludedTaxAmount"/>
                    </IncludedTaxAmount>
                </xsl:if>
                <xsl:if test="$Start/pfx:CreditCardPostAuthorizationRequest/PaymentPlanCode">
                    <PaymentPlanCode>
                        <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/PaymentPlanCode"/>
                    </PaymentPlanCode>
                </xsl:if>
                <xsl:if test="$Start/pfx:CreditCardPostAuthorizationRequest/ChargeDescription">
                    <ChargeDescription>
                        <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/ChargeDescription"/>
                    </ChargeDescription>
                </xsl:if>
            </pfx:CreditCardPostAuthorizationRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignTenderSubType">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>426</pd:x>
        <pd:y>315</pd:y>
        <config>
            <variableName>TenderSubType</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <TenderSubType>
                    <xsl:value-of select="if(string-length($GetTenderSubTypeByBin/root/TenderSubCode)>0)&#xA;then&#xA; $GetTenderSubTypeByBin/root/TenderSubCode&#xA;else&#xA; $Start/pfx:CreditCardPostAuthorizationRequest/Tender/Type/SubCode"/>
                </TenderSubType>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetTenderSubTypeByBin">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>420</pd:x>
        <pd:y>608</pd:y>
        <config>
            <processName>/CommonProcesses/CreditBinRange/GetTenderSubCodeByBinRange.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <AccNum>
                    <xsl:value-of select="$PAN/root/PlainTextPan"/>
                </AccNum>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignInvalidCardNumber">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>569</pd:x>
        <pd:y>611</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Error>
                    <Type>
                        <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_CARD_NUMBER/Type"/>
                    </Type>
                    <Detail>
                        <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_CARD_NUMBER/Detail"/>
                    </Detail>
                    <ErrorMessage>
                        <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/INVALID_CARD_NUMBER/ErrorMessage"/>
                    </ErrorMessage>
                </Error>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetPanfromLocalToken">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>207</pd:x>
        <pd:y>444</pd:y>
        <config>
            <processName>/CommonProcesses/CryptoProcesses/GetPanFromLocalToken.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <Token>
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token"/>
                </Token>
                <Scheme>
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@scheme"/>
                </Scheme>
                <Scope>
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@scope"/>
                </Scope>
                <Expiration>
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@expiration"/>
                </Expiration>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>288</pd:x>
        <pd:y>315</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="AssignPAN">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>280</pd:x>
        <pd:y>608</pd:y>
        <config>
            <variableName>PAN</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <PlainTextPan>
                    <xsl:value-of select="if (string-length($Start/pfx:CreditCardPostAuthorizationRequest/Tender/AccountNumber) > 0)&#xA; then&#xA; $Start/pfx:CreditCardPostAuthorizationRequest/Tender/AccountNumber&#xA;else&#xA;  if (string-length($GetPanfromLocalToken/root/CardDetails/PAN)>0) &#xA;   then&#xA; &#x9;$GetPanfromLocalToken/root/CardDetails/PAN&#xA;else&#xA;&quot;&quot;"/>
                </PlainTextPan>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>65</pd:x>
        <pd:y>444</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns12:ActivityInput/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>502</pd:x>
        <pd:y>142</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Error>
                    <Type>
                        <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$GetPanfromLocalToken/root/Error/Type"/>
                    </Type>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$GetPanfromLocalToken/root/Error/Detail">
                        <Detail>
                            <xsl:value-of select="."/>
                        </Detail>
                    </xsl:for-each>
                    <ErrorMessage>
                        <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$GetPanfromLocalToken/root/Error/ErrorMessage"/>
                    </ErrorMessage>
                </Error>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignError-1">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>205</pd:x>
        <pd:y>676</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Error>
                    <Type>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/NO_PAN_FROM_TOKEN/Type"/>
                    </Type>
                    <ErrorMessage>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/CommonErrors/NO_PAN_FROM_TOKEN/ErrorMessage"/>
                    </ErrorMessage>
                </Error>
                <NotificationErrorCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/NotificationErrorCodes/LOCALTOKEN_DETOKENIZE_ERROR"/>
                </NotificationErrorCode>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ValidateTenderSubcode">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>556</pd:x>
        <pd:y>521</pd:y>
        <config>
            <processName>/CommonProcesses/CreditBinRange/ValidateTenderSubCode.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <TransactionType>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PostAuthorization/CLE/TransactionType"/>
                </TransactionType>
                <RequestTenderSubCode>
                    <xsl:value-of select="$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Type/SubCode"/>
                </RequestTenderSubCode>
                <EPSTenderType>
                    <xsl:value-of select="$GetTenderSubTypeByBin/root/TenderSubCode"/>
                </EPSTenderType>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignTenderSubType-1">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>554</pd:x>
        <pd:y>409</pd:y>
        <config>
            <variableName>TenderSubType</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <TenderSubType>
                    <xsl:value-of select="$ValidateTenderSubcode/root/EPSTenderSubCode"/>
                </TenderSubType>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AssignError-1-1-1">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>751</pd:x>
        <pd:y>525</pd:y>
        <config>
            <variableName>Process</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <Error>
                    <Type>
                        <xsl:value-of select="$ValidateTenderSubcode/root/Error/Type"/>
                    </Type>
                    <xsl:if test="$ValidateTenderSubcode/root/Error/Detail">
                        <Detail>
                            <xsl:value-of select="$ValidateTenderSubcode/root/Error/Detail"/>
                        </Detail>
                    </xsl:if>
                    <ErrorMessage>
                        <xsl:value-of select="$ValidateTenderSubcode/root/Error/ErrorMessage"/>
                    </ErrorMessage>
                </Error>
                <NotificationErrorCode>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PaymentService/NotificationErrorCodes/INVALID_TENDER_SUBCODE_ERROR"/>
                </NotificationErrorCode>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NotifySupport">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>875</pd:x>
        <pd:y>523</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/NotifySupport.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </InterfaceCode>
                <ExceptionCode>
                    <xsl:value-of select="$Process/root/NotificationErrorCode"/>
                </ExceptionCode>
                <ErrorMessage>
                    <xsl:value-of select="$ValidateTenderSubcode/root/Error/ErrorMessage"/>
                </ErrorMessage>
                <TransactionType>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/PostAuthorization/CLE/TransactionType"/>
                </TransactionType>
                <TransactionId>
                    <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                </TransactionId>
                <Payload>
                    <xsl:value-of select="tib:render-xml($Start/pfx:CreditCardPostAuthorizationRequest)"/>
                </Payload>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>AssignFailure</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogRequestValidationExceptionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignFailure</pd:from>
        <pd:to>LogRequestValidationExceptionRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapVerifoneRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapPLCCRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>AssignTenderSubType</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPanfromLocalToken</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>AssignPAN</pd:to>
        <pd:xpathDescription>TEXT_PAN</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:CreditCardPostAuthorizationRequest/Tender/AccountNumber) &gt;0
or
string-length($GetPanfromLocalToken/root/CardDetails/PAN)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignPAN</pd:from>
        <pd:to>GetTenderSubTypeByBin</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTenderSubTypeByBin</pd:from>
        <pd:to>AssignTenderSubType</pd:to>
        <pd:xpathDescription>BIN Match</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($GetTenderSubTypeByBin/root/TenderSubCode) &gt;0
and
string-length($Start/pfx:CreditCardPostAuthorizationRequest/Tender/Type/SubCode)=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTenderSubTypeByBin</pd:from>
        <pd:to>AssignInvalidCardNumber</pd:to>
        <pd:xpathDescription>BIN Mismatch</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignInvalidCardNumber</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPanfromLocalToken</pd:from>
        <pd:to>GenerateError</pd:to>
        <pd:xpathDescription>onError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Assign</pd:to>
        <pd:xpathDescription>OnTokenGenerateError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($GetPanfromLocalToken/root/Error/ErrorMessage)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetPanfromLocalToken</pd:from>
        <pd:to>AssignError-1</pd:to>
        <pd:xpathDescription>No Pan</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length(tib:trim($GetPanfromLocalToken/root/CardDetails/PAN))=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignError-1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>GetPanfromLocalToken</pd:to>
        <pd:xpathDescription>TEMP_TOKEN</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/pfx:CreditCardPostAuthorizationRequest/Tender/Token/@isTemporary = $_globalVariables/ns2:GlobalVariables/PaymentService/Constants/BooleanSuccess</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignTenderSubType</pd:from>
        <pd:to>AssignIsPLCC</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignIsPLCC</pd:from>
        <pd:to>MapPLCCRequest</pd:to>
        <pd:xpathDescription>PLCC</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$IsPLCCTender/root/IsPLCCTender=$_globalVariables/ns2:GlobalVariables/PaymentService/Constants/BooleanSuccess</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignIsPLCC</pd:from>
        <pd:to>MapVerifoneRequest</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTenderSubTypeByBin</pd:from>
        <pd:to>ValidateTenderSubcode</pd:to>
        <pd:xpathDescription>VALIDATE_SUBCODE</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($GetTenderSubTypeByBin/root/TenderSubCode) &gt;0
and
string-length($Start/pfx:CreditCardPostAuthorizationRequest/Tender/Type/SubCode)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ValidateTenderSubcode</pd:from>
        <pd:to>AssignTenderSubType-1</pd:to>
        <pd:xpathDescription>REFINED_SUBCODE</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ValidateTenderSubcode/root/EPSTenderSubCode)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignTenderSubType-1</pd:from>
        <pd:to>AssignIsPLCC</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ValidateTenderSubcode</pd:from>
        <pd:to>AssignError-1-1-1</pd:to>
        <pd:xpathDescription>ERROR_INVALID_SUBCODE</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssignError-1-1-1</pd:from>
        <pd:to>NotifySupport</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>NotifySupport</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>