<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://www.tibco.com/schemas/REST-POC/Schemas/Schema.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ultimosoft.com/CLEH/ExceptionHandler.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/TEST.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx3="http://services.wsgc.com/2014/Payment" xmlns:pfx4="http://www.wsgc.com/schemas/common/PaymentServiceAuditSwitches.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions">
    <xsd:import namespace="http://www.tibco.com/schemas/REST-POC/Schemas/Schema.xsd" schemaLocation="/Schemas/Schema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/TEST.xsd" schemaLocation="/JSON_GEN_Schemas/TEST.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/lrc-lookup.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/lrc-cancel-return.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/lrc-cancel-redemption.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/reward-service-cancel.xsd"/>
    <xsd:import namespace="http://services.wsgc.com/2014/Payment" schemaLocation="/SharedResources/XMLSchemas/2014/Payment/reward-service-lookup.xsd"/>
    <pd:name>BusinessProcesses/LrcLookup/Lookup.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx3:LrcLookupRequest"/>
    <pd:startX>27</pd:startX>
    <pd:startY>182</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="string-length($Map-Data/pfx3:LrcLookupResponse/Error/Type)>0">
                <xsl:for-each select="$Map-Data/pfx3:LrcLookupResponse">
                    <pfx3:LrcLookupResponse>
                        <xsl:attribute name="version">
                            <xsl:value-of select="@version"/>
                        </xsl:attribute>
                        <SystemContext>
                            <EnvironmentIdentifier>
                                <xsl:value-of select="SystemContext/EnvironmentIdentifier"/>
                            </EnvironmentIdentifier>
                            <RegionIdentifier>
                                <xsl:value-of select="SystemContext/RegionIdentifier"/>
                            </RegionIdentifier>
                            <SourceSystemIdentifier>
                                <xsl:value-of select="SystemContext/SourceSystemIdentifier"/>
                            </SourceSystemIdentifier>
                            <TransactionId>
                                <xsl:value-of select="SystemContext/TransactionId"/>
                            </TransactionId>
                            <TransactionTime>
                                <xsl:value-of select="SystemContext/TransactionTime"/>
                            </TransactionTime>
                            <xsl:if test="SystemContext/RoutingSpecification">
                                <RoutingSpecification>
                                    <xsl:value-of select="SystemContext/RoutingSpecification"/>
                                </RoutingSpecification>
                            </xsl:if>
                            <xsl:if test="SystemContext/TestingMode">
                                <TestingMode>
                                    <xsl:value-of select="SystemContext/TestingMode"/>
                                </TestingMode>
                            </xsl:if>
                        </SystemContext>
                        <xsl:for-each select="PaymentContext">
                            <PaymentContext>
                                <Concept>
                                    <xsl:value-of select="Concept"/>
                                </Concept>
                                <Channel>
                                    <xsl:value-of select="Channel"/>
                                </Channel>
                            </PaymentContext>
                        </xsl:for-each>
                        <xsl:for-each select="Error">
                            <Error>
                                <Type>
                                    <xsl:value-of select="Type"/>
                                </Type>
                                <xsl:if test="string-length(Detail[1])>0">
                                    <xsl:for-each select="Detail">
                                        <Detail>
                                            <xsl:value-of select="."/>
                                        </Detail>
                                    </xsl:for-each>
                                </xsl:if>
                                <ErrorMessage>
                                    <xsl:value-of select="ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:for-each>
                    </pfx3:LrcLookupResponse>
                </xsl:for-each>
            </xsl:when>
            <xsl:when test="string-length($ProcessRCMSPaymentGtwyResponse/pfx3:LrcLookupResponse)>0">
                <xsl:copy-of select="$ProcessRCMSPaymentGtwyResponse/pfx3:LrcLookupResponse"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy-of select="$Map-Data/pfx3:LrcLookupResponse"/>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx3:LrcLookupResponse"/>
    <pd:endX>1199</pd:endX>
    <pd:endY>177</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1406742610426</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1316</pd:x>
        <pd:y>380</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetCLEParams">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>140</pd:x>
        <pd:y>183</pd:y>
        <config>
            <variableConfig>/BusinessProcesses/LrcLookup/CLEParams.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetLRCRequestURI">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>502</pd:x>
        <pd:y>53</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/GetLRCRequestURI.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <paymentservicerequest>
                    <xsl:value-of select="tib:render-xml($Start/pfx3:LrcLookupRequest)"/>
                </paymentservicerequest>
                <transactionid>
                    <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                </transactionid>
                <cleInterfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </cleInterfaceCode>
                <transactiontype>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/LrcLookup/CLE/TransactionType"/>
                </transactiontype>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="InvokeRCMSPymtGtwy_GET">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>671</pd:x>
        <pd:y>54</pd:y>
        <config>
            <processName>/CommonProcesses/PaymentGateway/InvokeRCMSPymtGtwy_GET.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <rcmspaymentgatewayrequest>
                    <xsl:value-of select="$MapRCMSPaymentGatewayRequest/root/paymentgatewayrequest"/>
                </rcmspaymentgatewayrequest>
                <transactionid>
                    <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                </transactionid>
                <xsl:if test="$GetCLEParams/root/targetServiceProvider">
                    <provider>
                        <xsl:value-of select="$GetCLEParams/root/targetServiceProvider"/>
                    </provider>
                </xsl:if>
                <InterfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </InterfaceCode>
                <timeout>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/LrcLookup/PaymentGateway/Timeout"/>
                </timeout>
                <Transactiontype>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/LrcLookup/CLE/TransactionType"/>
                </Transactiontype>
                <method>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/PaymentGateway/RCMS/HTTPGETMETHOD"/>
                </method>
                <contenttype>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/PaymentGateway/RCMS/ContentType"/>
                </contenttype>
                <requesturi>
                    <xsl:value-of select="$GetLRCRequestURI/root/requesturi"/>
                </requesturi>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogPaymentGatewayRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>398</pd:x>
        <pd:y>182</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/AuditLogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </InterfaceCode>
                <xsl:choose>
                    <xsl:when test="string-length($MapRCMSPaymentGatewayRequest/root/paymentgatewayrequest)">
                        <AuditMessageType>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Constants/VALUE_RCMSPAYMETGATEWAYREQUEST"/>
                        </AuditMessageType>
                    </xsl:when>
                    <xsl:otherwise>
                        <AuditMessageType>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Constants/VALUE_PAYMENTGATEWAYREQUEST"/>
                        </AuditMessageType>
                    </xsl:otherwise>
                </xsl:choose>
                <payloadTrue>
                    <xsl:value-of select="(string-length($MapRCMSPaymentGatewayRequest/root/paymentgatewayrequest)>0)"/>
                </payloadTrue>
                <ns2:LogRequest>
                    <ns2:envCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                    </ns2:envCode>
                    <ns2:appCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/AppCode"/>
                    </ns2:appCode>
                    <ns2:interfaceCode>
                        <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                    </ns2:interfaceCode>
                    <ns2:timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:timestamp>
                    <ns2:message>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/PaymentGatewayRequestAuditMessage"/>
                    </ns2:message>
                    <ns2:TransactionDetails>
                        <ns2:transactionDomain>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                        </ns2:transactionDomain>
                        <ns2:transactionType>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/LrcLookup/CLE/TransactionType"/>
                        </ns2:transactionType>
                        <ns2:transactionID>
                            <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                        </ns2:transactionID>
                    </ns2:TransactionDetails>
                    <ns2:AuditInfo>
                        <xsl:choose>
                            <xsl:when test="string-length($MapRCMSPaymentGatewayRequest/root/paymentgatewayrequest)>0">
                                <ns2:payload>
                                    <xsl:value-of select="$MapRCMSPaymentGatewayRequest/root/paymentgatewayrequest"/>
                                </ns2:payload>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns2:payload>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </ns2:payload>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="string-length($GetCLEParams/root/targetServiceProvider)>0 and $GetCLEParams/root/targetServiceProvider=$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/RCMSSERVICEPROVIDERNAME">
                                <ns2:auditStep>
                                    <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/RCMSSERVICEPROVIDERNAME,$_globalVariables/ns1:GlobalVariables/CLE/Constants/AuditReport)"/>
                                </ns2:auditStep>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns2:auditStep>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/Constants/AuditReport"/>
                                </ns2:auditStep>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ns2:AuditInfo>
                </ns2:LogRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogPaymentGatewayResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>677</pd:x>
        <pd:y>182</pd:y>
        <config>
            <processName>/BusinessProcesses/Common/AuditLogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <InterfaceCode>
                    <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                </InterfaceCode>
                <AuditMessageType>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Constants/VALUE_RCMSPAYMENTGATEWAYRESPONSE"/>
                </AuditMessageType>
                <payloadTrue>
                    <xsl:value-of select="string-length($InvokeRCMSPymtGtwy_GET/root/PaymentGatewayResponse)>0 or&#xA;string-length($MapRCMSResponse/pfx3:LookupResponse)>0"/>
                </payloadTrue>
                <ns2:LogRequest>
                    <ns2:envCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                    </ns2:envCode>
                    <ns2:appCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/AppCode"/>
                    </ns2:appCode>
                    <ns2:interfaceCode>
                        <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                    </ns2:interfaceCode>
                    <ns2:timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:timestamp>
                    <ns2:message>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/PaymentGatewayResponseAuditMessage"/>
                    </ns2:message>
                    <ns2:TransactionDetails>
                        <ns2:transactionDomain>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                        </ns2:transactionDomain>
                        <ns2:transactionType>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/LrcLookup/CLE/TransactionType"/>
                        </ns2:transactionType>
                        <ns2:transactionID>
                            <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                        </ns2:transactionID>
                    </ns2:TransactionDetails>
                    <ns2:AuditInfo>
                        <xsl:choose>
                            <xsl:when test="exists($InvokeRCMSPymtGtwy_GET/root/PaymentGatewayResponse) and not(empty($InvokeRCMSPymtGtwy_GET/root/PaymentGatewayResponse))">
                                <ns2:payload>
                                    <xsl:value-of select="$InvokeRCMSPymtGtwy_GET/root/PaymentGatewayResponse"/>
                                </ns2:payload>
                            </xsl:when>
                            <xsl:when test="exists($MapRCMSResponse/pfx3:LookupResponse) and not(empty($MapRCMSResponse/pfx3:LookupResponse))">
                                <ns2:payload>
                                    <xsl:value-of select="tib:render-xml($MapRCMSResponse/pfx3:LookupResponse)"/>
                                </ns2:payload>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns2:payload>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </ns2:payload>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="string-length($GetCLEParams/root/targetServiceProvider)>0 and $GetCLEParams/root/targetServiceProvider=$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/RCMSSERVICEPROVIDERNAME">
                                <ns2:auditStep>
                                    <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/RCMSSERVICEPROVIDERNAME,$_globalVariables/ns1:GlobalVariables/CLE/Constants/AuditReport)"/>
                                </ns2:auditStep>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns2:auditStep>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/Constants/AuditReport"/>
                                </ns2:auditStep>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ns2:AuditInfo>
                    <xsl:if test="(string-length($InvokeRCMSPymtGtwy_GET/root/PaymentGatewayResponse)>0 or&#xA;string-length($MapRCMSResponse/pfx3:LookupResponse)>0)">
                        <ns2:AdditionalInformation>
                            <ns2:name>
                                <xsl:value-of select="$GetCLEParams/root/targetServiceProvider"/>
                            </ns2:name>
                            <ns2:value>
                                <xsl:value-of select="$GetLRCRequestURI/root/requesturi"/>
                            </ns2:value>
                        </ns2:AdditionalInformation>
                    </xsl:if>
                </ns2:LogRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1317</pd:x>
        <pd:y>280</pd:y>
        <config>
            <element ref="pfx3:LrcLookupResponse"/>
        </config>
        <pd:inputBindings>
            <pfx3:LrcLookupResponse>
                <xsl:attribute name="version">
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/LrcLookup/MessageVersion"/>
                </xsl:attribute>
                <SystemContext>
                    <EnvironmentIdentifier>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/EnvironmentIdentifier"/>
                    </EnvironmentIdentifier>
                    <RegionIdentifier>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/RegionIdentifier"/>
                    </RegionIdentifier>
                    <SourceSystemIdentifier>
                        <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/SystemContext/SourceSystemIdentifierPrefix, BW:getHostName())"/>
                    </SourceSystemIdentifier>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/pfx3:LrcLookupRequest/SystemContext/TransactionId)>0">
                            <TransactionId>
                                <xsl:value-of select="$Start/pfx3:LrcLookupRequest/SystemContext/TransactionId"/>
                            </TransactionId>
                        </xsl:when>
                        <xsl:otherwise>
                            <TransactionId>
                                <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/LrcLookup/Constants/TransactionIdPrefix,concat(tib:format-dateTime($_globalVariables/ns1:GlobalVariables/PaymentService/Constants/DateTimeFormat, current-dateTime()),   $_processContext/ns3:ProcessContext/ProcessId,  $_globalVariables/ns1:GlobalVariables/ENV   , BW:getHostName()))"/>
                            </TransactionId>
                        </xsl:otherwise>
                    </xsl:choose>
                    <TransactionTime>
                        <xsl:value-of select="current-dateTime()"/>
                    </TransactionTime>
                </SystemContext>
                <xsl:choose>
                    <xsl:when test="string-length($Start/pfx3:LrcLookupRequest/PaymentContext/Concept) > 0">
                        <xsl:copy-of select="$Start/pfx3:LrcLookupRequest/PaymentContext"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <PaymentContext>
                            <Concept>
                                <xsl:value-of select="&quot;&quot;"/>
                            </Concept>
                            <Channel>
                                <xsl:value-of select="&quot;&quot;"/>
                            </Channel>
                        </PaymentContext>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="exists($_error_MapRCMSPaymentGatewayRequest/root/Error) and string-length($_error_MapRCMSPaymentGatewayRequest/root/Error)>0">
                        <xsl:for-each select="$_error_MapRCMSPaymentGatewayRequest/root/Error">
                            <Error>
                                <Type>
                                    <xsl:value-of select="Type"/>
                                </Type>
                                <xsl:for-each select="Detail">
                                    <Detail>
                                        <xsl:value-of select="."/>
                                    </Detail>
                                </xsl:for-each>
                                <ErrorMessage>
                                    <xsl:value-of select="ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="exists($_error_InvokeRCMSPymtGtwy_GET/root/Error) and string-length($_error_InvokeRCMSPymtGtwy_GET/root/Error)>0">
                        <xsl:for-each select="$_error_InvokeRCMSPymtGtwy_GET/root/Error">
                            <Error>
                                <Type>
                                    <xsl:value-of select="Type"/>
                                </Type>
                                <xsl:for-each select="Detail">
                                    <Detail>
                                        <xsl:value-of select="."/>
                                    </Detail>
                                </xsl:for-each>
                                <ErrorMessage>
                                    <xsl:value-of select="ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="exists($_error_GetLRCRequestURI/root/Error) and string-length($_error_GetLRCRequestURI/root/Error)>0">
                        <xsl:for-each select="$_error_GetLRCRequestURI/root/Error">
                            <Error>
                                <Type>
                                    <xsl:value-of select="Type"/>
                                </Type>
                                <xsl:for-each select="Detail">
                                    <Detail>
                                        <xsl:value-of select="."/>
                                    </Detail>
                                </xsl:for-each>
                                <ErrorMessage>
                                    <xsl:value-of select="ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="exists($_error_ProcessRCMSPaymentGtwyResponse/root/Error) and string-length($_error_ProcessRCMSPaymentGtwyResponse/root/Error)>0">
                        <xsl:for-each select="$_error_ProcessRCMSPaymentGtwyResponse/root/Error">
                            <Error>
                                <Type>
                                    <xsl:value-of select="Type"/>
                                </Type>
                                <xsl:for-each select="Detail">
                                    <Detail>
                                        <xsl:value-of select="."/>
                                    </Detail>
                                </xsl:for-each>
                                <ErrorMessage>
                                    <xsl:value-of select="ErrorMessage"/>
                                </ErrorMessage>
                            </Error>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="$_error/ns3:ErrorReport/Class=$_globalVariables/ns1:GlobalVariables/PaymentService/ValidationConstants/BIND_EXCEPTION_CLASS">
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:when>
                    <xsl:otherwise>
                        <Error>
                            <Type>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Type"/>
                            </Type>
                            <Detail>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/SAFE_FAILURE/Detail"/>
                            </Detail>
                            <ErrorMessage>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CommonErrors/INVALID_REQUEST/ErrorMessage"/>
                            </ErrorMessage>
                        </Error>
                    </xsl:otherwise>
                </xsl:choose>
            </pfx3:LrcLookupResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapRCMSPaymentGatewayRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>265</pd:x>
        <pd:y>184</pd:y>
        <config>
            <processName>/BusinessProcesses/LrcLookup/RequestProcessors/MapRCMSPaymentGatewayRequest.process</processName>
        </config>
        <pd:inputBindings>
            <xsl:copy-of select="$Start/pfx3:LrcLookupRequest"/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>504</pd:x>
        <pd:y>182</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null-2">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>1036</pd:x>
        <pd:y>177</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ProcessRCMSPaymentGtwyResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1033</pd:x>
        <pd:y>49</pd:y>
        <config>
            <processName>/BusinessProcesses/LrcLookup/ResponseProcessors/ProcessRCMSPaymentGatewayResponse.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="string-length($MapRCMSResponse/pfx3:LookupResponse)>0">
                        <paymentgatewayresponse>
                            <xsl:value-of select="tib:render-xml($MapRCMSResponse/pfx3:LookupResponse)"/>
                        </paymentgatewayresponse>
                    </xsl:when>
                    <xsl:otherwise>
                        <paymentgatewayresponse>
                            <xsl:value-of select="$InvokeRCMSPymtGtwy_GET/root/PaymentGatewayResponse"/>
                        </paymentgatewayresponse>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:copy-of select="$Start/pfx3:LrcLookupRequest"/>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendExceptionRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1315</pd:x>
        <pd:y>175</pd:y>
        <config>
            <processName>/CommonProcesses/CLEClientStub/SendExceptionRequest.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="exists($_error_InvokeRCMSPymtGtwy_GET/root/ns2:ExceptionHandlerRequest) and not(empty($_error_InvokeRCMSPymtGtwy_GET/root/ns2:ExceptionHandlerRequest))">
                    <xsl:copy-of select="$_error_InvokeRCMSPymtGtwy_GET/root/ns2:ExceptionHandlerRequest"/>
                </xsl:when>
                <xsl:when test="exists($_error_ProcessRCMSPaymentGtwyResponse/root/ns2:ExceptionHandlerRequest) and not(empty($_error_ProcessRCMSPaymentGtwyResponse/root/ns2:ExceptionHandlerRequest))">
                    <xsl:copy-of select="$_error_ProcessRCMSPaymentGtwyResponse/root/ns2:ExceptionHandlerRequest"/>
                </xsl:when>
                <xsl:when test="exists($_error_MapRCMSPaymentGatewayRequest/root/ns2:ExceptionHandlerRequest) and not(empty($_error_MapRCMSPaymentGatewayRequest/root/ns2:ExceptionHandlerRequest))">
                    <xsl:copy-of select="$_error_MapRCMSPaymentGatewayRequest/root/ns2:ExceptionHandlerRequest"/>
                </xsl:when>
                <xsl:when test="exists($_error_GetLRCRequestURI/root/ns2:ExceptionHandlerRequest) and not(empty($_error_GetLRCRequestURI/root/ns2:ExceptionHandlerRequest))">
                    <xsl:copy-of select="$_error_GetLRCRequestURI/root/ns2:ExceptionHandlerRequest"/>
                </xsl:when>
                <xsl:otherwise>
                    <ns2:ExceptionHandlerRequest>
                        <ns2:envCode>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ENV"/>
                        </ns2:envCode>
                        <ns2:appCode>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CLE/AppCode"/>
                        </ns2:appCode>
                        <ns2:interfaceCode>
                            <xsl:value-of select="$GetCLEParams/root/InterfaceCode"/>
                        </ns2:interfaceCode>
                        <ns2:hostName>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns2:hostName>
                        <ns2:timeStamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:timeStamp>
                        <ns2:message>
                            <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                        </ns2:message>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/pfx3:LrcLookupRequest) > 0">
                                <ns2:payload>
                                    <xsl:value-of select="tib:render-xml($Start/pfx3:LrcLookupRequest)"/>
                                </ns2:payload>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns2:payload>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </ns2:payload>
                            </xsl:otherwise>
                        </xsl:choose>
                        <ns2:ErrorLevel>
                            <ns2:errorCode>
                                <xsl:value-of select="concat($Map-Data/pfx3:LrcLookupResponse/Error/Type, $_globalVariables/ns1:GlobalVariables/PaymentService/Constants/ErrorCodeSeparator,&#xA;$Map-Data/pfx3:LrcLookupResponse/Error/Detail[1])"/>
                            </ns2:errorCode>
                        </ns2:ErrorLevel>
                        <ns2:TransactionDetails>
                            <ns2:transactionDomain>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/PaymentService/CLE/TransactionDomain"/>
                            </ns2:transactionDomain>
                            <ns2:transactionType>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/LrcLookup/CLE/TransactionType"/>
                            </ns2:transactionType>
                            <ns2:transactionID>
                                <xsl:value-of select="$GetCLEParams/root/TransactionId"/>
                            </ns2:transactionID>
                        </ns2:TransactionDetails>
                        <xsl:for-each select="$_error/ns3:ErrorReport">
                            <ns2:ErrorReportType>
                                <ns2:stackTrace>
                                    <xsl:value-of select="StackTrace"/>
                                </ns2:stackTrace>
                                <ns2:msg>
                                    <xsl:value-of select="Msg"/>
                                </ns2:msg>
                                <ns2:fullClass>
                                    <xsl:value-of select="FullClass"/>
                                </ns2:fullClass>
                                <ns2:class>
                                    <xsl:value-of select="Class"/>
                                </ns2:class>
                                <ns2:processStack>
                                    <xsl:value-of select="ProcessStack"/>
                                </ns2:processStack>
                                <xsl:if test="MsgCode">
                                    <ns2:msgCode>
                                        <xsl:value-of select="MsgCode"/>
                                    </ns2:msgCode>
                                </xsl:if>
                                <ns2:data>
                                    <xsl:value-of select="Data/*"/>
                                </ns2:data>
                            </ns2:ErrorReportType>
                        </xsl:for-each>
                    </ns2:ExceptionHandlerRequest>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapRCMSResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>858</pd:x>
        <pd:y>57</pd:y>
        <config>
            <element ref="pfx3:LookupResponse"/>
        </config>
        <pd:inputBindings>
            <pfx3:LookupResponse>
                <xsl:attribute name="version">
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/LrcLookup/MessageVersion"/>
                </xsl:attribute>
                <xsl:for-each select="$InvokeRCMSPymtGtwy_GET/root/Error">
                    <Error>
                        <Type>
                            <xsl:value-of select="Type"/>
                        </Type>
                        <xsl:for-each select="Detail">
                            <Detail>
                                <xsl:value-of select="."/>
                            </Detail>
                        </xsl:for-each>
                        <ErrorMessage>
                            <xsl:value-of select="ErrorMessage"/>
                        </ErrorMessage>
                    </Error>
                </xsl:for-each>
            </pfx3:LookupResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetCLEParams</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendExceptionRequest</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>SendExceptionRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapRCMSPaymentGatewayRequest</pd:from>
        <pd:to>LogPaymentGatewayRequest</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>LogPaymentGatewayResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCLEParams</pd:from>
        <pd:to>MapRCMSPaymentGatewayRequest</pd:to>
        <pd:xpathDescription>RCMS</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($GetCLEParams/root/targetServiceProvider)&gt;0 and $GetCLEParams/root/targetServiceProvider=$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/RCMSSERVICEPROVIDERNAME</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>GetLRCRequestURI</pd:to>
        <pd:xpathDescription>Good RCMS Request</pd:xpathDescription>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$GetCLEParams/root/targetServiceProvider=$_globalVariables/ns1:GlobalVariables/PaymentService/Constants/RCMSSERVICEPROVIDERNAME</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>InvokeRCMSPymtGtwy_GET</pd:from>
        <pd:to>LogPaymentGatewayResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>ProcessRCMSPaymentGtwyResponse</pd:to>
        <pd:xpathDescription>Good RCMS Response</pd:xpathDescription>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($InvokeRCMSPymtGtwy_GET/root/PaymentGatewayResponse)&gt;0 or
string-length($MapRCMSResponse/pfx3:LookupResponse)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ProcessRCMSPaymentGtwyResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetLRCRequestURI</pd:from>
        <pd:to>InvokeRCMSPymtGtwy_GET</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogPaymentGatewayRequest</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogPaymentGatewayResponse</pd:from>
        <pd:to>Null-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>InvokeRCMSPymtGtwy_GET</pd:from>
        <pd:to>MapRCMSResponse</pd:to>
        <pd:xpathDescription>RestError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($InvokeRCMSPymtGtwy_GET/root/Error/Type)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>MapRCMSResponse</pd:from>
        <pd:to>LogPaymentGatewayResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>