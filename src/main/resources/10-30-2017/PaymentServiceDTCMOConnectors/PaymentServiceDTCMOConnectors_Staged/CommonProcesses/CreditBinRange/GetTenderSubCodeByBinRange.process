<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.wsgc.com/schemas/common/PaymentServiceCreditCardBINRangesLookup.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.wsgc.com/schemas/common/PaymentServiceCreditCardBINRanges.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions">
    <xsd:import namespace="http://www.wsgc.com/schemas/common/PaymentServiceCreditCardBINRanges.xsd" schemaLocation="/SharedResources/XMLSchemas/Common/PaymentServiceCreditCardBINRanges.xsd"/>
    <xsd:import namespace="http://www.wsgc.com/schemas/common/PaymentServiceCreditCardBINRangesLookup.xsd" schemaLocation="/SharedResources/XMLSchemas/Common/PaymentServiceCreditCardBINRangesLookup.xsd"/>
    <pd:name>CommonProcesses/CreditBinRange/GetTenderSubCodeByBinRange.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="AccNum" type="xsd:string"/>
                    <xsd:element name="concept" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>92</pd:startX>
    <pd:startY>66</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:choose>
                <xsl:when test="exists($RefinedRange/root/RefinedRanges)">
                    <TenderSubCode>
                        <xsl:value-of select="$RefinedRange/root/RefinedRanges[Weigth=min($RefinedRange/root/RefinedRanges/Weigth)]/PaymentServiceCreditCardBINRange/pfx:TenderSubCode"/>
                    </TenderSubCode>
                </xsl:when>
                <xsl:otherwise>
                    <TenderSubCode>
                        <xsl:value-of select="$FindRange/root/PaymentServiceCreditCardBINRanges/pfx:PaymentServiceCreditCardBINRange[1]/pfx:TenderSubCode"/>
                    </TenderSubCode>
                </xsl:otherwise>
            </xsl:choose>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="TenderSubCode" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>544</pd:endX>
    <pd:endY>74</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1419013326878</pd:targetNamespace>
    <pd:activity name="GetBinRangeLookUp">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>211</pd:x>
        <pd:y>67</pd:y>
        <config>
            <variableConfig>/SharedResources/SharedVariables/SV-PaymentServiceCreditCardBINRangesLookup.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="FindRange">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>326</pd:x>
        <pd:y>72</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="PaymentServiceCreditCardBINRanges" type="pfx:PaymentServiceCreditCardBINRangesTypes"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <PaymentServiceCreditCardBINRanges>
                    <xsl:attribute name="conceptCode">
                        <xsl:value-of select="$GetBinRangeLookUp/pfx:PaymentServiceCreditCardBINRangeLookup/pfx:PaymentServiceCreditCardBINRanges[1]/@conceptCode"/>
                    </xsl:attribute>
                    <xsl:attribute name="lastModifiedTime">
                        <xsl:value-of select="$GetBinRangeLookUp/pfx:PaymentServiceCreditCardBINRangeLookup/pfx:PaymentServiceCreditCardBINRanges[1]/@lastModifiedTime"/>
                    </xsl:attribute>
                    <xsl:for-each select="$GetBinRangeLookUp/pfx:PaymentServiceCreditCardBINRangeLookup/pfx:PaymentServiceCreditCardBINRanges/pfx:PaymentServiceCreditCardBINRange[$Start/root/AccNum>=pfx:AccountNumberRangeFrom and $Start/root/AccNum&lt;=pfx:AccountNumberRangeTo]">
                        <pfx:PaymentServiceCreditCardBINRange>
                            <pfx:TenderCode>
                                <xsl:value-of select="pfx:TenderCode"/>
                            </pfx:TenderCode>
                            <pfx:TenderSubCode>
                                <xsl:value-of select="pfx:TenderSubCode"/>
                            </pfx:TenderSubCode>
                            <xsl:for-each select="pfx:EffectiveType">
                                <pfx:EffectiveType>
                                    <pfx:Code>
                                        <xsl:value-of select="pfx:Code"/>
                                    </pfx:Code>
                                    <xsl:if test="pfx:SubCode">
                                        <pfx:SubCode>
                                            <xsl:value-of select="pfx:SubCode"/>
                                        </pfx:SubCode>
                                    </xsl:if>
                                </pfx:EffectiveType>
                            </xsl:for-each>
                            <pfx:AccountNumberRangeFrom>
                                <xsl:value-of select="pfx:AccountNumberRangeFrom"/>
                            </pfx:AccountNumberRangeFrom>
                            <pfx:AccountNumberRangeTo>
                                <xsl:value-of select="pfx:AccountNumberRangeTo"/>
                            </pfx:AccountNumberRangeTo>
                            <xsl:if test="pfx:ValidateExpirationDate">
                                <pfx:ValidateExpirationDate>
                                    <xsl:value-of select="pfx:ValidateExpirationDate"/>
                                </pfx:ValidateExpirationDate>
                            </xsl:if>
                            <xsl:if test="pfx:DefaultExpirationDate">
                                <pfx:DefaultExpirationDate>
                                    <xsl:value-of select="pfx:DefaultExpirationDate"/>
                                </pfx:DefaultExpirationDate>
                            </xsl:if>
                            <xsl:if test="pfx:ValidCCLength">
                                <pfx:ValidCCLength>
                                    <xsl:value-of select="pfx:ValidCCLength"/>
                                </pfx:ValidCCLength>
                            </xsl:if>
                        </pfx:PaymentServiceCreditCardBINRange>
                    </xsl:for-each>
                </PaymentServiceCreditCardBINRanges>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="RefinedRange">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>417</pd:x>
        <pd:y>191</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="RefinedRanges" minOccurs="0" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="PaymentServiceCreditCardBINRange" type="pfx:PaymentServiceCreditCardBINRangeType"/>
                                        <xsd:element name="Weigth" type="xsd:double"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:for-each select="$FindRange/root/PaymentServiceCreditCardBINRanges/pfx:PaymentServiceCreditCardBINRange">
                    <RefinedRanges>
                        <PaymentServiceCreditCardBINRange>
                            <xsl:copy-of select="./ancestor-or-self::*/namespace::node()"/>
                            <xsl:copy-of select="./@*"/>
                            <xsl:copy-of select="./node()"/>
                        </PaymentServiceCreditCardBINRange>
                        <Weigth>
                            <xsl:value-of select="current()/pfx:AccountNumberRangeTo - current()/pfx:AccountNumberRangeFrom"/>
                        </Weigth>
                    </RefinedRanges>
                </xsl:for-each>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetBinRangeLookUp</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetBinRangeLookUp</pd:from>
        <pd:to>FindRange</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>FindRange</pd:from>
        <pd:to>End</pd:to>
        <pd:xpathDescription>SINGLE_MATCH</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>count($FindRange/root/PaymentServiceCreditCardBINRanges/pfx:PaymentServiceCreditCardBINRange) &lt;=1</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>FindRange</pd:from>
        <pd:to>RefinedRange</pd:to>
        <pd:xpathDescription>MULTI_MATCH</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RefinedRange</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>- To be used in Tokenization and Authorization when invoked with PAN.</pd:description>
        <pd:x>486</pd:x>
        <pd:y>18</pd:y>
        <pd:width>560</pd:width>
        <pd:height>33</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-205</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>